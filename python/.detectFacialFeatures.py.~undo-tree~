"61f8ea97dbeae5130818861df4d394dbf35ddd79"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((nil rear-nonsticky nil 2729 . 2730) (nil fontified nil 2728 . 2730) (nil fontified nil 2724 . 2728) (nil fontified nil 2723 . 2724) (nil fontified nil 2710 . 2723) (nil fontified nil 2701 . 2710) (nil fontified nil 2692 . 2701) (nil fontified nil 2690 . 2692) (nil fontified nil 2687 . 2690) (nil fontified nil 2684 . 2687) (nil fontified nil 2678 . 2684) (nil fontified nil 2675 . 2678) (nil fontified nil 2674 . 2675) (nil fontified nil 2670 . 2674) (nil fontified nil 2669 . 2670) (nil fontified nil 2664 . 2669) (nil fontified nil 2660 . 2664) (nil fontified nil 2658 . 2660) (nil fontified nil 2657 . 2658) (nil fontified nil 2655 . 2657) (nil fontified nil 2651 . 2655) (nil fontified nil 2646 . 2651) (nil fontified nil 2640 . 2646) (nil fontified nil 2639 . 2640) (nil fontified nil 2633 . 2639) (nil fontified nil 2624 . 2633) (nil fontified nil 2622 . 2624) (nil fontified nil 2619 . 2622) (nil fontified nil 2608 . 2619) (nil fontified nil 2604 . 2608) (nil fontified nil 2602 . 2604) (nil fontified nil 2596 . 2602) (nil fontified nil 2594 . 2596) (nil fontified nil 2588 . 2594) (nil fontified nil 2579 . 2588) (nil fontified nil 2572 . 2579) (nil fontified nil 2553 . 2572) (nil fontified nil 2552 . 2553) (nil fontified nil 2540 . 2552) (nil fontified nil 2538 . 2540) (nil fontified nil 2532 . 2538) (nil fontified nil 2531 . 2532) (nil fontified nil 2525 . 2531) (nil fontified nil 2524 . 2525) (nil fontified nil 2522 . 2524) (nil fontified nil 2516 . 2522) (nil fontified nil 2510 . 2516) (nil fontified nil 2507 . 2510) (nil fontified nil 2506 . 2507) (nil fontified nil 2504 . 2506) (nil fontified nil 2503 . 2504) (nil fontified nil 2499 . 2503) (nil fontified nil 2489 . 2499) (nil fontified nil 2486 . 2489) (nil fontified nil 2482 . 2486) (nil fontified nil 2481 . 2482) (nil fontified nil 2476 . 2481) (nil fontified nil 2471 . 2476) (nil fontified nil 2467 . 2471) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2456 . 2460) (nil fontified nil 2454 . 2456) (nil fontified nil 2453 . 2454) (nil fontified nil 2448 . 2453) (nil fontified nil 2447 . 2448) (nil fontified nil 2444 . 2447) (nil fontified nil 2441 . 2444) (nil fontified nil 2439 . 2441) (nil fontified nil 2438 . 2439) (nil fontified nil 2436 . 2438) (nil fontified nil 2432 . 2436) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2426 . 2430) (nil fontified nil 2424 . 2426) (nil fontified nil 2409 . 2424) (nil fontified nil 2408 . 2409) (nil fontified nil 2404 . 2408) (nil fontified nil 2403 . 2404) (nil fontified nil 2402 . 2403) (nil fontified nil 2401 . 2402) (nil fontified nil 2393 . 2401) (nil fontified nil 2388 . 2393) (nil fontified nil 2386 . 2388) (nil fontified nil 2385 . 2386) (nil fontified nil 2384 . 2385) (nil fontified nil 2381 . 2384) (nil fontified nil 2380 . 2381) (nil fontified nil 2379 . 2380) (nil fontified nil 2376 . 2379) (nil fontified nil 2374 . 2376) (nil fontified nil 2372 . 2374) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2356 . 2370) (nil fontified nil 2353 . 2356) (nil fontified nil 2352 . 2353) (nil fontified nil 2349 . 2352) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2336 . 2347) (nil fontified nil 2333 . 2336) (nil fontified nil 2332 . 2333) (nil fontified nil 2331 . 2332) (nil fontified nil 2328 . 2331) (nil fontified nil 2327 . 2328) (nil fontified nil 2326 . 2327) (nil fontified nil 2325 . 2326) (nil fontified nil 2310 . 2325) (nil fontified nil 2309 . 2310) (nil fontified nil 2304 . 2309) (nil fontified nil 2302 . 2304) (nil fontified nil 2301 . 2302) (nil fontified nil 2300 . 2301) (nil fontified nil 2290 . 2300) (nil fontified nil 2287 . 2290) (nil fontified nil 2286 . 2287) (nil fontified nil 2283 . 2286) (nil fontified nil 2282 . 2283) (nil fontified nil 2281 . 2282) (nil fontified nil 2280 . 2281) (nil fontified nil 2277 . 2280) (nil fontified nil 2276 . 2277) (nil fontified nil 2275 . 2276) (nil fontified nil 2272 . 2275) (nil fontified nil 2269 . 2272) (nil fontified nil 2268 . 2269) (nil fontified nil 2265 . 2268) (nil fontified nil 2262 . 2265) (nil fontified nil 2261 . 2262) (nil fontified nil 2257 . 2261) (nil fontified nil 2253 . 2257) (nil fontified nil 2249 . 2253) (nil fontified nil 2248 . 2249) (nil fontified nil 2233 . 2248) (nil fontified nil 2213 . 2233) (nil fontified nil 2212 . 2213) (nil fontified nil 2208 . 2212) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2200 . 2206) (nil fontified nil 2199 . 2200) (nil fontified nil 2196 . 2199) (nil fontified nil 2192 . 2196) (nil fontified nil 2189 . 2192) (nil fontified nil 2145 . 2189) (nil fontified nil 2134 . 2145) (nil fontified nil 2130 . 2134) (nil fontified nil 2127 . 2130) (nil fontified nil 2125 . 2127) (nil fontified nil 2123 . 2125) (nil fontified nil 2119 . 2123) (nil fontified nil 2103 . 2119) (nil fontified nil 2096 . 2103) (nil fontified nil 2094 . 2096) (nil fontified nil 2090 . 2094) (nil fontified nil 2088 . 2090) (nil fontified nil 2078 . 2088) (nil fontified nil 2072 . 2078) (nil fontified nil 2067 . 2072) (nil fontified nil 2063 . 2067) (nil fontified nil 2062 . 2063) (nil fontified nil 2060 . 2062) (nil fontified nil 2058 . 2060) (nil fontified nil 2053 . 2058) (nil fontified nil 2050 . 2053) (nil fontified nil 2033 . 2050) (nil fontified nil 2021 . 2033) (nil fontified nil 2018 . 2021) (nil fontified nil 2007 . 2018) (nil fontified nil 2004 . 2007) (nil fontified nil 2003 . 2004) (nil fontified nil 1999 . 2003) (nil fontified nil 1996 . 1999) (nil fontified nil 1993 . 1996) (nil fontified nil 1984 . 1993) (nil fontified nil 1966 . 1984) (nil fontified nil 1962 . 1966) (nil fontified nil 1961 . 1962) (nil fontified nil 1955 . 1961) (nil fontified nil 1945 . 1955) (nil fontified nil 1944 . 1945) (nil fontified nil 1941 . 1944) (nil fontified nil 1939 . 1941) (nil fontified nil 1938 . 1939) (nil fontified nil 1934 . 1938) (nil fontified nil 1933 . 1934) (nil fontified nil 1928 . 1933) (nil fontified nil 1927 . 1928) (nil fontified nil 1922 . 1927) (nil fontified nil 1920 . 1922) (nil fontified nil 1919 . 1920) (nil fontified nil 1918 . 1919) (nil fontified nil 1910 . 1918) (nil fontified nil 1883 . 1910) (nil fontified nil 1882 . 1883) (nil fontified nil 1876 . 1882) (nil fontified nil 1875 . 1876) (nil fontified nil 1874 . 1875) (nil fontified nil 1864 . 1874) (nil fontified nil 1863 . 1864) (nil fontified nil 1862 . 1863) (nil fontified nil 1859 . 1862) (nil fontified nil 1858 . 1859) (nil fontified nil 1831 . 1858) (nil fontified nil 1830 . 1831) (nil fontified nil 1826 . 1830) (nil fontified nil 1825 . 1826) (nil fontified nil 1824 . 1825) (nil fontified nil 1820 . 1824) (nil fontified nil 1819 . 1820) (nil fontified nil 1813 . 1819) (nil fontified nil 1812 . 1813) (nil fontified nil 1808 . 1812) (nil fontified nil 1805 . 1808) (nil fontified nil 1781 . 1805) (nil fontified nil 1780 . 1781) (nil fontified nil 1775 . 1780) (nil fontified nil 1774 . 1775) (nil fontified nil 1771 . 1774) (nil fontified nil 1770 . 1771) (nil fontified nil 1765 . 1770) (nil fontified nil 1761 . 1765) (nil fontified nil 1757 . 1761) (nil fontified nil 1756 . 1757) (nil fontified nil 1741 . 1756) (nil fontified nil 1740 . 1741) (nil fontified nil 1736 . 1740) (nil fontified nil 1730 . 1736) (nil fontified nil 1729 . 1730) (nil fontified nil 1706 . 1729) (nil fontified nil 1705 . 1706) (nil fontified nil 1693 . 1705) (nil fontified nil 1691 . 1693) (nil fontified nil 1687 . 1691) (nil fontified nil 1684 . 1687) (nil fontified nil 1679 . 1684) (nil fontified nil 1675 . 1679) (nil fontified nil 1674 . 1675) (nil fontified nil 1654 . 1674) (nil fontified nil 1653 . 1654) (nil fontified nil 1650 . 1653) (nil fontified nil 1648 . 1650) (nil fontified nil 1647 . 1648) (nil fontified nil 1646 . 1647) (nil fontified nil 1642 . 1646) (nil fontified nil 1641 . 1642) (nil fontified nil 1601 . 1641) (nil fontified nil 1585 . 1601) (nil fontified nil 1551 . 1585) (nil fontified nil 1537 . 1551) (nil fontified nil 1531 . 1537) (nil fontified nil 1530 . 1531) (nil fontified nil 1529 . 1530) (nil fontified nil 1527 . 1529) (nil fontified nil 1526 . 1527) (nil fontified nil 1521 . 1526) (nil fontified nil 1520 . 1521) (nil fontified nil 1504 . 1520) (nil fontified nil 1499 . 1504) (nil fontified nil 1498 . 1499) (nil fontified nil 1494 . 1498) (nil fontified nil 1478 . 1494) (nil fontified nil 1457 . 1478) (nil fontified nil 1455 . 1457) (nil fontified nil 1451 . 1455) (nil fontified nil 1450 . 1451) (nil fontified nil 1408 . 1450) (nil fontified nil 1407 . 1408) (nil fontified nil 1406 . 1407) (nil fontified nil 1402 . 1406) (nil fontified nil 1401 . 1402) (nil fontified nil 1384 . 1401) (nil fontified nil 1326 . 1384) (nil fontified nil 1325 . 1326) (nil fontified nil 1321 . 1325) (nil fontified nil 1320 . 1321) (nil fontified nil 1319 . 1320) (nil fontified nil 1315 . 1319) (nil fontified nil 1300 . 1315) (nil fontified nil 1296 . 1300) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1292 . 1294) (nil fontified nil 1271 . 1292) (nil fontified nil 1267 . 1271) (nil fontified nil 1266 . 1267) (nil fontified nil 1251 . 1266) (nil fontified nil 1250 . 1251) (nil fontified nil 1247 . 1250) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1244 . 1245) (nil fontified nil 1227 . 1244) (nil fontified nil 1223 . 1227) (nil fontified nil 1217 . 1223) (nil fontified nil 1216 . 1217) (1216 . 2730)) ((#("
      self.face = faces[0]

  def UpdateRectColor(self, rect, rectId, color):

    (x, y, w, h) = rect

    #plot the rectangle (remember to downsize the coordinates)
    cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

    # show the face number
    cv2.putText(self.img,
                \"Face #{}\".format(rectId + 1),
                (x - 10, y - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)
    

  def faceSelectorCallback(self, val):
    if (val > 0): #0 = nothing is selected
      self.UpdateRectColor(self.img,        #image
                           self.rects[x-1], #rect
                           x-1,             #rectId
                           (0,0,255))       #color
    
  def SelectSingleFace(self, faces, downsampleWidth = 500):
    \"\"\"
    Select a single face out of all the ones available

    Arguments:
    - `faces`: the recognized rects of faces
    - `downsampleWidth`: the width of downsampled image to present if needed
    \"\"\"
    #downsample the image for easier picking
    self.img = imutils.resize(self.m_image.copy(), width=downsampleWidth)

    #resizing ratio
    r = downsampleWidth / float(self.m_image.shape[1])

    #show downsampled image
    cv2.imshow(\"FACES\", self.img)

    rects = []
    for (rectId,rect) in enumerate(faces):
      
      # convert dlib's rectangle to a OpenCV-style bounding box
      # [i.e., (x, y, w, h)], then draw the face bounding box
      rects += [(int(i*r) for i in face_utils.rect_to_bb(rect))]

      " 0 1 (fontified nil) 1 7 (fontified nil) 7 11 (fontified nil face font-lock-keyword-face) 11 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 34 (fontified nil face font-lock-keyword-face) 34 35 (fontified nil) 35 50 (fontified nil face font-lock-function-name-face) 50 51 (fontified nil) 51 55 (fontified nil face font-lock-keyword-face) 55 76 (fontified nil) 76 78 (fontified nil) 78 79 (fontified nil) 79 80 (fontified nil) 80 84 (fontified nil) 84 99 (fontified nil) 99 103 (fontified nil) 103 104 (fontified nil) 104 105 (fontified nil) 105 109 (fontified nil) 109 110 (fontified nil face font-lock-comment-delimiter-face) 110 168 (fontified nil face font-lock-comment-face) 168 185 (fontified nil) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 191 (rear-nonsticky t fontified nil) 191 192 (fontified nil) 192 234 (fontified nil) 234 235 (fontified nil) 235 239 (fontified nil) 239 241 (fontified nil face font-lock-comment-delimiter-face) 241 262 (fontified nil face font-lock-comment-face) 262 278 (fontified nil) 278 282 (fontified nil face font-lock-keyword-face) 282 283 (rear-nonsticky t fontified nil) 283 288 (fontified nil) 288 304 (fontified nil) 304 305 (fontified nil syntax-table #1=(15) face font-lock-string-face) 305 310 (fontified nil face font-lock-string-face) 310 311 (fontified nil face font-lock-string-face) 311 313 (fontified nil face font-lock-string-face) 313 314 (fontified nil syntax-table #1# face font-lock-string-face) 314 315 (fontified nil) 315 321 (fontified nil face font-lock-builtin-face) 321 335 (fontified nil) 335 369 (fontified nil) 369 385 (fontified nil) 385 425 (fontified nil) 425 426 (fontified nil) 426 430 (fontified nil) 430 431 (fontified nil) 431 432 (fontified nil) 432 434 (fontified nil) 434 437 (fontified nil face font-lock-keyword-face) 437 438 (fontified nil) 438 458 (fontified nil face font-lock-function-name-face) 458 459 (fontified nil) 459 463 (fontified nil face font-lock-keyword-face) 463 468 (fontified nil) 468 471 (fontified nil) 471 475 (fontified nil) 475 477 (fontified nil face font-lock-keyword-face) 477 489 (fontified nil) 489 490 (fontified nil face font-lock-comment-delimiter-face) 490 500 (fontified nil face font-lock-comment-face) 500 513 (fontified nil face font-lock-comment-face) 513 514 (fontified nil face font-lock-comment-face) 514 520 (fontified nil) 520 524 (fontified nil face font-lock-keyword-face) 524 525 (fontified nil) 525 540 (fontified nil) 540 541 (fontified nil) 541 545 (fontified nil face font-lock-keyword-face) 545 549 (fontified nil) 549 554 (fontified nil) 554 555 (fontified nil) 555 558 (fontified nil) 558 559 (fontified nil face font-lock-comment-delimiter-face) 559 564 (fontified nil face font-lock-comment-face) 564 565 (fontified nil face font-lock-comment-face) 565 589 (fontified nil) 589 592 (fontified nil) 592 596 (fontified nil face font-lock-keyword-face) 596 597 (fontified nil) 597 603 (fontified nil) 603 604 (fontified nil) 604 608 (fontified nil) 608 609 (fontified nil) 609 610 (fontified nil face font-lock-comment-delimiter-face) 610 614 (fontified nil face font-lock-comment-face) 614 615 (fontified nil face font-lock-comment-face) 615 642 (fontified nil) 642 643 (fontified nil) 643 646 (fontified nil) 646 647 (fontified nil) 647 648 (fontified nil) 648 658 (fontified nil) 658 659 (fontified nil) 659 660 (fontified nil face font-lock-comment-delimiter-face) 660 666 (fontified nil face font-lock-comment-face) 666 667 (fontified nil face font-lock-comment-face) 667 694 (fontified nil) 694 702 (fontified nil) 702 703 (rear-nonsticky t fontified nil) 703 704 (rear-nonsticky t fontified nil) 704 706 (fontified nil) 706 711 (fontified nil) 711 712 (fontified nil face font-lock-comment-delimiter-face) 712 717 (fontified nil face font-lock-comment-face) 717 718 (fontified nil face font-lock-comment-face) 718 722 (fontified nil) 722 723 (fontified nil) 723 725 (fontified nil) 725 728 (fontified nil face font-lock-keyword-face) 728 729 (fontified nil) 729 739 (fontified nil face font-lock-function-name-face) 739 745 (fontified nil face font-lock-function-name-face) 745 746 (fontified nil) 746 750 (fontified nil face font-lock-keyword-face) 750 768 (fontified nil) 768 777 (fontified nil) 777 780 (fontified nil) 780 783 (fontified nil) 783 787 (fontified nil) 787 788 (fontified nil syntax-table #1# face font-lock-string-face) 788 791 (fontified nil face font-lock-string-face) 791 802 (fontified nil face font-lock-string-face) 802 805 (fontified nil face font-lock-string-face) 805 817 (fontified nil face font-lock-string-face) 817 834 (fontified nil face font-lock-string-face) 834 837 (fontified nil face font-lock-string-face) 837 842 (fontified nil face font-lock-string-face) 842 844 (fontified nil face font-lock-string-face) 844 846 (fontified nil face font-lock-string-face) 846 847 (fontified nil face font-lock-string-face) 847 851 (fontified nil face font-lock-string-face) 851 856 (fontified nil face font-lock-string-face) 856 862 (fontified nil face font-lock-string-face) 862 872 (fontified nil face font-lock-string-face) 872 874 (fontified nil face font-lock-string-face) 874 878 (fontified nil face font-lock-string-face) 878 880 (fontified nil face font-lock-string-face) 880 887 (fontified nil face font-lock-string-face) 887 903 (fontified nil face font-lock-string-face) 903 907 (fontified nil face font-lock-string-face) 907 909 (fontified nil face font-lock-string-face) 909 911 (fontified nil face font-lock-string-face) 911 914 (fontified nil face font-lock-string-face) 914 918 (fontified nil face font-lock-string-face) 918 929 (fontified nil face font-lock-string-face) 929 973 (fontified nil face font-lock-string-face) 973 976 (fontified nil face font-lock-string-face) 976 980 (fontified nil face font-lock-string-face) 980 983 (fontified nil face font-lock-string-face) 983 984 (fontified nil face font-lock-string-face) 984 990 (fontified nil face font-lock-string-face) 990 991 (fontified nil syntax-table #1# face font-lock-string-face) 991 992 (fontified nil) 992 996 (fontified nil) 996 997 (fontified nil face font-lock-comment-delimiter-face) 997 1014 (fontified nil face font-lock-comment-face) 1014 1017 (fontified nil face font-lock-comment-face) 1017 1032 (fontified nil face font-lock-comment-face) 1032 1033 (fontified nil face font-lock-comment-face) 1033 1037 (fontified nil face font-lock-comment-face) 1037 1041 (fontified nil) 1041 1045 (fontified nil face font-lock-keyword-face) 1045 1046 (fontified nil) 1046 1049 (fontified nil) 1049 1052 (fontified nil) 1052 1053 (fontified nil) 1053 1056 (fontified nil) 1056 1059 (fontified nil) 1059 1060 (fontified nil) 1060 1061 (fontified nil) 1061 1064 (fontified nil) 1064 1065 (fontified nil) 1065 1066 (fontified nil) 1066 1067 (fontified nil) 1067 1070 (fontified nil face font-lock-keyword-face) 1070 1071 (fontified nil face font-lock-keyword-face) 1071 1074 (fontified nil) 1074 1084 (fontified nil) 1084 1085 (rear-nonsticky t fontified nil) 1085 1086 (fontified nil) 1086 1088 (fontified nil) 1088 1093 (fontified nil) 1093 1094 (fontified nil) 1094 1109 (fontified nil) 1109 1110 (rear-nonsticky t fontified nil) 1110 1111 (fontified nil) 1111 1112 (fontified nil) 1112 1115 (fontified nil) 1115 1116 (fontified nil) 1116 1117 (fontified nil face font-lock-comment-delimiter-face) 1117 1120 (fontified nil face font-lock-comment-face) 1120 1131 (fontified nil face font-lock-comment-face) 1131 1132 (fontified nil face font-lock-comment-face) 1132 1133 (fontified nil) 1133 1136 (fontified nil) 1136 1137 (fontified nil) 1137 1140 (fontified nil) 1140 1154 (fontified nil) 1154 1155 (fontified nil) 1155 1156 (fontified nil) 1156 1158 (fontified nil) 1158 1160 (fontified nil face font-lock-builtin-face) 1160 1163 (fontified nil face font-lock-builtin-face) 1163 1164 (fontified nil) 1164 1165 (fontified nil face font-lock-keyword-face) 1165 1168 (fontified nil face font-lock-keyword-face) 1168 1169 (fontified nil) 1169 1170 (fontified nil) 1170 1172 (fontified nil) 1172 1177 (fontified nil) 1177 1185 (fontified nil) 1185 1186 (rear-nonsticky t fontified nil) 1186 1187 (fontified nil) 1187 1188 (fontified nil) 1188 1192 (fontified nil) 1192 1193 (fontified nil face font-lock-comment-delimiter-face) 1193 1208 (fontified nil face font-lock-comment-face) 1208 1210 (fontified nil face font-lock-comment-face) 1210 1214 (fontified nil face font-lock-comment-face) 1214 1215 (fontified nil face font-lock-comment-face) 1215 1216 (fontified nil face font-lock-comment-face) 1216 1220 (fontified nil) 1220 1222 (fontified nil) 1222 1223 (fontified nil) 1223 1225 (fontified nil) 1225 1228 (fontified nil) 1228 1231 (fontified nil) 1231 1232 (fontified nil syntax-table #1# face font-lock-string-face) 1232 1237 (fontified nil face font-lock-string-face) 1237 1238 (fontified nil syntax-table #1# face font-lock-string-face) 1238 1240 (fontified nil) 1240 1244 (fontified nil face font-lock-keyword-face) 1244 1245 (rear-nonsticky t fontified nil) 1245 1246 (fontified nil) 1246 1247 (fontified nil) 1247 1248 (fontified nil) 1248 1249 (rear-nonsticky t fontified nil) 1249 1250 (fontified nil) 1250 1251 (fontified nil) 1251 1255 (fontified nil) 1255 1260 (fontified nil) 1260 1265 (fontified nil) 1265 1266 (fontified nil) 1266 1270 (fontified nil) 1270 1273 (fontified nil face font-lock-keyword-face) 1273 1283 (fontified nil) 1283 1287 (fontified nil) 1287 1288 (fontified nil) 1288 1290 (fontified nil face font-lock-keyword-face) 1290 1291 (fontified nil) 1291 1294 (fontified nil face font-lock-builtin-face) 1294 1300 (fontified nil face font-lock-builtin-face) 1300 1306 (fontified nil) 1306 1308 (fontified nil) 1308 1309 (fontified nil) 1309 1315 (fontified nil) 1315 1316 (fontified nil) 1316 1322 (fontified nil) 1322 1324 (fontified nil face font-lock-comment-delimiter-face) 1324 1336 (fontified nil face font-lock-comment-face) 1336 1337 (fontified nil syntax-table #1# face font-lock-comment-face) 1337 1356 (fontified nil face font-lock-comment-face) 1356 1363 (fontified nil face font-lock-comment-face) 1363 1372 (fontified nil face font-lock-comment-face) 1372 1378 (fontified nil face font-lock-comment-face) 1378 1380 (fontified nil face font-lock-comment-face) 1380 1386 (fontified nil) 1386 1388 (fontified nil face font-lock-comment-delimiter-face) 1388 1392 (fontified nil face font-lock-comment-face) 1392 1403 (fontified nil face font-lock-comment-face) 1403 1406 (fontified nil face font-lock-comment-face) 1406 1408 (fontified nil face font-lock-comment-face) 1408 1417 (fontified nil face font-lock-comment-face) 1417 1423 (fontified nil face font-lock-comment-face) 1423 1424 (fontified nil face font-lock-comment-face) 1424 1430 (fontified nil face font-lock-comment-face) 1430 1435 (fontified nil face font-lock-comment-face) 1435 1439 (fontified nil face font-lock-comment-face) 1439 1441 (fontified nil face font-lock-comment-face) 1441 1442 (fontified nil face font-lock-comment-face) 1442 1444 (fontified nil) 1444 1448 (fontified nil) 1448 1453 (fontified nil) 1453 1454 (fontified nil) 1454 1458 (fontified nil) 1458 1459 (fontified nil) 1459 1462 (fontified nil face font-lock-builtin-face) 1462 1468 (fontified nil) 1468 1471 (fontified nil face font-lock-keyword-face) 1471 1474 (fontified nil) 1474 1476 (fontified nil face font-lock-keyword-face) 1476 1485 (fontified nil) 1485 1494 (fontified nil) 1494 1507 (fontified nil) 1507 1508 (fontified nil) 1508 1512 (fontified nil) 1512 1513 (fontified nil) 1513 1514 (fontified nil rear-nonsticky nil)) . 1216) (undo-tree-id5840 . -335) (undo-tree-id5841 . -1514) (undo-tree-id5842 . -1514) (undo-tree-id5843 . -1514) (undo-tree-id5844 . -1514) (nil fontified t 1216 . 1217) (nil fontified t 1227 . 1244) (nil fontified t 1244 . 1245) (nil fontified t 1294 . 1295) (nil fontified t 1295 . 1296) (nil fontified t 1319 . 1320) (nil fontified t 1320 . 1321) (nil fontified t 1326 . 1384) (nil fontified t 1408 . 1450) (nil fontified t 1450 . 1451) (nil fontified t 1457 . 1478) (nil fontified t 1499 . 1504) (nil fontified t 1537 . 1551) (nil fontified t 1551 . 1585) (nil fontified t 1641 . 1642) (nil fontified t 1646 . 1647) (nil fontified t 1647 . 1648) (nil fontified t 1684 . 1687) (nil fontified t 1729 . 1730) (nil fontified t 1780 . 1781) (nil fontified t 1830 . 1831) (nil fontified t 1882 . 1883) (nil fontified t 1933 . 1934) (nil fontified t 1938 . 1939) (nil fontified t 1996 . 1999) (nil fontified t 2004 . 2007) (nil fontified t 2060 . 2062) (nil fontified t 2062 . 2063) (nil fontified t 2072 . 2078) (nil fontified t 2119 . 2123) (nil fontified t 2199 . 2200) (nil fontified t 2207 . 2208) (nil fontified t 2249 . 2253) (nil fontified t 2326 . 2327) (nil fontified t 2327 . 2328) (nil fontified t 2347 . 2348) (nil fontified t 2402 . 2403) (nil fontified t 2403 . 2404) (nil fontified t 2431 . 2432) (nil fontified t 2465 . 2466) (nil fontified t 2466 . 2467) (nil fontified t 2481 . 2482) (nil fontified t 2524 . 2525) (nil fontified t 2531 . 2532) (nil fontified t 2594 . 2596) (nil fontified t 2657 . 2658) (nil fontified t 2710 . 2723) (nil fontified t 2723 . 2724) (nil rear-nonsticky t 2729 . 2730)) (24319 45595 722957 441000) 0 nil] [nil ([nil nil ((nil rear-nonsticky nil 4243 . 4244) (nil fontified nil 4237 . 4238) (nil fontified nil 4224 . 4237) (nil fontified nil 4171 . 4172) (nil fontified nil 4108 . 4110) (nil fontified nil 4045 . 4046) (nil fontified nil 4038 . 4039) (nil fontified nil 3995 . 3996) (nil fontified nil 3980 . 3981) (nil fontified nil 3979 . 3980) (nil fontified nil 3945 . 3946) (nil fontified nil 3917 . 3918) (nil fontified nil 3916 . 3917) (nil fontified nil 3861 . 3862) (nil fontified nil 3841 . 3842) (nil fontified nil 3840 . 3841) (nil fontified nil 3763 . 3767) (nil fontified nil 3721 . 3722) (nil fontified nil 3713 . 3714) (nil fontified nil 3633 . 3637) (nil fontified nil 3586 . 3592) (nil fontified nil 3576 . 3577) (nil fontified nil 3574 . 3576) (nil fontified nil 3518 . 3521) (nil fontified nil 3510 . 3513) (nil fontified nil 3452 . 3453) (nil fontified nil 3447 . 3448) (nil fontified nil 3396 . 3397) (nil fontified nil 3344 . 3345) (nil fontified nil 3294 . 3295) (nil fontified nil 3243 . 3244) (nil fontified nil 3198 . 3201) (nil fontified nil 3161 . 3162) (nil fontified nil 3160 . 3161) (nil fontified nil 3155 . 3156) (nil fontified nil 3065 . 3099) (nil fontified nil 3051 . 3065) (nil fontified nil 3013 . 3018) (nil fontified nil 2971 . 2992) (nil fontified nil 2964 . 2965) (nil fontified nil 2922 . 2964) (nil fontified nil 2840 . 2898) (nil fontified nil 2834 . 2835) (nil fontified nil 2833 . 2834) (nil fontified nil 2809 . 2810) (nil fontified nil 2808 . 2809) (nil fontified nil 2758 . 2759) (nil fontified nil 2741 . 2758) (nil fontified nil 2730 . 2731) (2730 . 4244)) ((#("
      self.face = faces[0]

  def UpdateRectColor(self, rect, rectId, color):

    (x, y, w, h) = rect

    #plot the rectangle (remember to downsize the coordinates)
    cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

    # show the face number
    cv2.putText(self.img,
                \"Face #{}\".format(rectId + 1),
                (x - 10, y - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)
    

  def faceSelectorCallback(self, val):
    if (val > 0): #0 = nothing is selected
      self.UpdateRectColor(self.img,        #image
                           self.rects[x-1], #rect
                           x-1,             #rectId
                           (0,0,255))       #color
    
  def SelectSingleFace(self, faces, downsampleWidth = 500):
    \"\"\"
    Select a single face out of all the ones available

    Arguments:
    - `faces`: the recognized rects of faces
    - `downsampleWidth`: the width of downsampled image to present if needed
    \"\"\"
    #downsample the image for easier picking
    self.img = imutils.resize(self.m_image.copy(), width=downsampleWidth)

    #resizing ratio
    r = downsampleWidth / float(self.m_image.shape[1])

    #show downsampled image
    cv2.imshow(\"FACES\", self.img)

    rects = []
    for (rectId,rect) in enumerate(faces):
      
      # convert dlib's rectangle to a OpenCV-style bounding box
      # [i.e., (x, y, w, h)], then draw the face bounding box
      rects += [(int(i*r) for i in face_utils.rect_to_bb(rect))]

      " 0 1 (fontified nil) 1 7 (fontified nil) 7 11 (fontified nil face font-lock-keyword-face) 11 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 34 (fontified nil face font-lock-keyword-face) 34 35 (fontified nil) 35 50 (fontified nil face font-lock-function-name-face) 50 51 (fontified nil) 51 55 (fontified nil face font-lock-keyword-face) 55 76 (fontified nil) 76 78 (fontified nil) 78 79 (fontified nil) 79 80 (fontified nil) 80 84 (fontified nil) 84 99 (fontified nil) 99 103 (fontified nil) 103 104 (fontified nil) 104 105 (fontified nil) 105 109 (fontified nil) 109 110 (fontified nil face font-lock-comment-delimiter-face) 110 168 (fontified nil face font-lock-comment-face) 168 185 (fontified nil) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 191 (rear-nonsticky t fontified nil) 191 192 (fontified nil) 192 234 (fontified nil) 234 235 (fontified nil) 235 239 (fontified nil) 239 241 (fontified nil face font-lock-comment-delimiter-face) 241 262 (fontified nil face font-lock-comment-face) 262 278 (fontified nil) 278 282 (fontified nil face font-lock-keyword-face) 282 283 (rear-nonsticky t fontified nil) 283 288 (fontified nil) 288 304 (fontified nil) 304 305 (fontified nil syntax-table #1# face font-lock-string-face) 305 310 (fontified nil face font-lock-string-face) 310 311 (fontified nil face font-lock-string-face) 311 313 (fontified nil face font-lock-string-face) 313 314 (fontified nil syntax-table #1# face font-lock-string-face) 314 315 (fontified nil) 315 321 (fontified nil face font-lock-builtin-face) 321 335 (fontified nil) 335 369 (fontified nil) 369 385 (fontified nil) 385 425 (fontified nil) 425 426 (fontified nil) 426 430 (fontified nil) 430 431 (fontified nil) 431 432 (fontified nil) 432 434 (fontified nil) 434 437 (fontified nil face font-lock-keyword-face) 437 438 (fontified nil) 438 458 (fontified nil face font-lock-function-name-face) 458 459 (fontified nil) 459 463 (fontified nil face font-lock-keyword-face) 463 468 (fontified nil) 468 471 (fontified nil) 471 475 (fontified nil) 475 477 (fontified nil face font-lock-keyword-face) 477 489 (fontified nil) 489 490 (fontified nil face font-lock-comment-delimiter-face) 490 500 (fontified nil face font-lock-comment-face) 500 513 (fontified nil face font-lock-comment-face) 513 514 (fontified nil face font-lock-comment-face) 514 520 (fontified nil) 520 524 (fontified nil face font-lock-keyword-face) 524 525 (fontified nil) 525 540 (fontified nil) 540 541 (fontified nil) 541 545 (fontified nil face font-lock-keyword-face) 545 549 (fontified nil) 549 554 (fontified nil) 554 555 (fontified nil) 555 558 (fontified nil) 558 559 (fontified nil face font-lock-comment-delimiter-face) 559 564 (fontified nil face font-lock-comment-face) 564 565 (fontified nil face font-lock-comment-face) 565 589 (fontified nil) 589 592 (fontified nil) 592 596 (fontified nil face font-lock-keyword-face) 596 597 (fontified nil) 597 603 (fontified nil) 603 604 (fontified nil) 604 608 (fontified nil) 608 609 (fontified nil) 609 610 (fontified nil face font-lock-comment-delimiter-face) 610 614 (fontified nil face font-lock-comment-face) 614 615 (fontified nil face font-lock-comment-face) 615 642 (fontified nil) 642 643 (fontified nil) 643 646 (fontified nil) 646 647 (fontified nil) 647 648 (fontified nil) 648 658 (fontified nil) 658 659 (fontified nil) 659 660 (fontified nil face font-lock-comment-delimiter-face) 660 666 (fontified nil face font-lock-comment-face) 666 667 (fontified nil face font-lock-comment-face) 667 694 (fontified nil) 694 702 (fontified nil) 702 703 (rear-nonsticky t fontified nil) 703 704 (rear-nonsticky t fontified nil) 704 706 (fontified nil) 706 711 (fontified nil) 711 712 (fontified nil face font-lock-comment-delimiter-face) 712 717 (fontified nil face font-lock-comment-face) 717 718 (fontified nil face font-lock-comment-face) 718 722 (fontified nil) 722 723 (fontified nil) 723 725 (fontified nil) 725 728 (fontified nil face font-lock-keyword-face) 728 729 (fontified nil) 729 739 (fontified nil face font-lock-function-name-face) 739 745 (fontified nil face font-lock-function-name-face) 745 746 (fontified nil) 746 750 (fontified nil face font-lock-keyword-face) 750 768 (fontified nil) 768 777 (fontified nil) 777 780 (fontified nil) 780 783 (fontified nil) 783 787 (fontified nil) 787 788 (fontified nil syntax-table #1# face font-lock-string-face) 788 791 (fontified nil face font-lock-string-face) 791 802 (fontified nil face font-lock-string-face) 802 805 (fontified nil face font-lock-string-face) 805 817 (fontified nil face font-lock-string-face) 817 834 (fontified nil face font-lock-string-face) 834 837 (fontified nil face font-lock-string-face) 837 842 (fontified nil face font-lock-string-face) 842 844 (fontified nil face font-lock-string-face) 844 846 (fontified nil face font-lock-string-face) 846 847 (fontified nil face font-lock-string-face) 847 851 (fontified nil face font-lock-string-face) 851 856 (fontified nil face font-lock-string-face) 856 862 (fontified nil face font-lock-string-face) 862 872 (fontified nil face font-lock-string-face) 872 874 (fontified nil face font-lock-string-face) 874 878 (fontified nil face font-lock-string-face) 878 880 (fontified nil face font-lock-string-face) 880 887 (fontified nil face font-lock-string-face) 887 903 (fontified nil face font-lock-string-face) 903 907 (fontified nil face font-lock-string-face) 907 909 (fontified nil face font-lock-string-face) 909 911 (fontified nil face font-lock-string-face) 911 914 (fontified nil face font-lock-string-face) 914 918 (fontified nil face font-lock-string-face) 918 929 (fontified nil face font-lock-string-face) 929 973 (fontified nil face font-lock-string-face) 973 976 (fontified nil face font-lock-string-face) 976 980 (fontified nil face font-lock-string-face) 980 983 (fontified nil face font-lock-string-face) 983 984 (fontified nil face font-lock-string-face) 984 990 (fontified nil face font-lock-string-face) 990 991 (fontified nil syntax-table #1# face font-lock-string-face) 991 992 (fontified nil) 992 996 (fontified nil) 996 997 (fontified nil face font-lock-comment-delimiter-face) 997 1014 (fontified nil face font-lock-comment-face) 1014 1017 (fontified nil face font-lock-comment-face) 1017 1032 (fontified nil face font-lock-comment-face) 1032 1033 (fontified nil face font-lock-comment-face) 1033 1037 (fontified nil face font-lock-comment-face) 1037 1041 (fontified nil) 1041 1045 (fontified nil face font-lock-keyword-face) 1045 1046 (fontified nil) 1046 1049 (fontified nil) 1049 1052 (fontified nil) 1052 1053 (fontified nil) 1053 1056 (fontified nil) 1056 1059 (fontified nil) 1059 1060 (fontified nil) 1060 1061 (fontified nil) 1061 1064 (fontified nil) 1064 1065 (fontified nil) 1065 1066 (fontified nil) 1066 1067 (fontified nil) 1067 1070 (fontified nil face font-lock-keyword-face) 1070 1071 (fontified nil face font-lock-keyword-face) 1071 1074 (fontified nil) 1074 1084 (fontified nil) 1084 1085 (rear-nonsticky t fontified nil) 1085 1086 (fontified nil) 1086 1088 (fontified nil) 1088 1093 (fontified nil) 1093 1094 (fontified nil) 1094 1109 (fontified nil) 1109 1110 (rear-nonsticky t fontified nil) 1110 1111 (fontified nil) 1111 1112 (fontified nil) 1112 1115 (fontified nil) 1115 1116 (fontified nil) 1116 1117 (fontified nil face font-lock-comment-delimiter-face) 1117 1120 (fontified nil face font-lock-comment-face) 1120 1131 (fontified nil face font-lock-comment-face) 1131 1132 (fontified nil face font-lock-comment-face) 1132 1133 (fontified nil) 1133 1136 (fontified nil) 1136 1137 (fontified nil) 1137 1140 (fontified nil) 1140 1154 (fontified nil) 1154 1155 (fontified nil) 1155 1156 (fontified nil) 1156 1158 (fontified nil) 1158 1160 (fontified nil face font-lock-builtin-face) 1160 1163 (fontified nil face font-lock-builtin-face) 1163 1164 (fontified nil) 1164 1165 (fontified nil face font-lock-keyword-face) 1165 1168 (fontified nil face font-lock-keyword-face) 1168 1169 (fontified nil) 1169 1170 (fontified nil) 1170 1172 (fontified nil) 1172 1177 (fontified nil) 1177 1185 (fontified nil) 1185 1186 (rear-nonsticky t fontified nil) 1186 1187 (fontified nil) 1187 1188 (fontified nil) 1188 1192 (fontified nil) 1192 1193 (fontified nil face font-lock-comment-delimiter-face) 1193 1208 (fontified nil face font-lock-comment-face) 1208 1210 (fontified nil face font-lock-comment-face) 1210 1214 (fontified nil face font-lock-comment-face) 1214 1215 (fontified nil face font-lock-comment-face) 1215 1216 (fontified nil face font-lock-comment-face) 1216 1220 (fontified nil) 1220 1222 (fontified nil) 1222 1223 (fontified nil) 1223 1225 (fontified nil) 1225 1228 (fontified nil) 1228 1231 (fontified nil) 1231 1232 (fontified nil syntax-table #1# face font-lock-string-face) 1232 1237 (fontified nil face font-lock-string-face) 1237 1238 (fontified nil syntax-table #1# face font-lock-string-face) 1238 1240 (fontified nil) 1240 1244 (fontified nil face font-lock-keyword-face) 1244 1245 (rear-nonsticky t fontified nil) 1245 1246 (fontified nil) 1246 1247 (fontified nil) 1247 1248 (fontified nil) 1248 1249 (rear-nonsticky t fontified nil) 1249 1250 (fontified nil) 1250 1251 (fontified nil) 1251 1255 (fontified nil) 1255 1260 (fontified nil) 1260 1265 (fontified nil) 1265 1266 (fontified nil) 1266 1270 (fontified nil) 1270 1273 (fontified nil face font-lock-keyword-face) 1273 1283 (fontified nil) 1283 1287 (fontified nil) 1287 1288 (fontified nil) 1288 1290 (fontified nil face font-lock-keyword-face) 1290 1291 (fontified nil) 1291 1294 (fontified nil face font-lock-builtin-face) 1294 1300 (fontified nil face font-lock-builtin-face) 1300 1306 (fontified nil) 1306 1308 (fontified nil) 1308 1309 (fontified nil) 1309 1315 (fontified nil) 1315 1316 (fontified nil) 1316 1322 (fontified nil) 1322 1324 (fontified nil face font-lock-comment-delimiter-face) 1324 1336 (fontified nil face font-lock-comment-face) 1336 1337 (fontified nil syntax-table #1# face font-lock-comment-face) 1337 1356 (fontified nil face font-lock-comment-face) 1356 1363 (fontified nil face font-lock-comment-face) 1363 1372 (fontified nil face font-lock-comment-face) 1372 1378 (fontified nil face font-lock-comment-face) 1378 1380 (fontified nil face font-lock-comment-face) 1380 1386 (fontified nil) 1386 1388 (fontified nil face font-lock-comment-delimiter-face) 1388 1392 (fontified nil face font-lock-comment-face) 1392 1403 (fontified nil face font-lock-comment-face) 1403 1406 (fontified nil face font-lock-comment-face) 1406 1408 (fontified nil face font-lock-comment-face) 1408 1417 (fontified nil face font-lock-comment-face) 1417 1423 (fontified nil face font-lock-comment-face) 1423 1424 (fontified nil face font-lock-comment-face) 1424 1430 (fontified nil face font-lock-comment-face) 1430 1435 (fontified nil face font-lock-comment-face) 1435 1439 (fontified nil face font-lock-comment-face) 1439 1441 (fontified nil face font-lock-comment-face) 1441 1442 (fontified nil face font-lock-comment-face) 1442 1444 (fontified nil) 1444 1448 (fontified nil) 1448 1453 (fontified nil) 1453 1454 (fontified nil) 1454 1458 (fontified nil) 1458 1459 (fontified nil) 1459 1462 (fontified nil face font-lock-builtin-face) 1462 1468 (fontified nil) 1468 1471 (fontified nil face font-lock-keyword-face) 1471 1474 (fontified nil) 1474 1476 (fontified nil face font-lock-keyword-face) 1476 1485 (fontified nil) 1485 1494 (fontified nil) 1494 1507 (fontified nil) 1507 1508 (fontified nil) 1508 1512 (fontified nil) 1512 1513 (fontified nil) 1513 1514 (fontified nil rear-nonsticky nil)) . 2730) (undo-tree-id5872 . -1131) (undo-tree-id5873 . -1131) (undo-tree-id5874 . -1186) (undo-tree-id5875 . -1186) (undo-tree-id5876 . -1187) (undo-tree-id5877 . -1187) (undo-tree-id5878 . -1215) (undo-tree-id5879 . -1215) (undo-tree-id5880 . -1249) (undo-tree-id5881 . -1249) (undo-tree-id5882 . -1250) (undo-tree-id5883 . -1250) (undo-tree-id5884 . -1265) (undo-tree-id5885 . -1265) (undo-tree-id5886 . -1308) (undo-tree-id5887 . -1308) (undo-tree-id5888 . -1315) (undo-tree-id5889 . -1315) (undo-tree-id5890 . -1379) (undo-tree-id5891 . -1379) (undo-tree-id5892 . -1441) (undo-tree-id5893 . -1441) (undo-tree-id5894 . -1506) (undo-tree-id5895 . -1506) (undo-tree-id5896 . -1507) (undo-tree-id5897 . -1507) (nil fontified t 2730 . 2731) (nil fontified t 2741 . 2758) (nil fontified t 2758 . 2759) (nil fontified t 2808 . 2809) (nil fontified t 2809 . 2810) (nil fontified t 2833 . 2834) (nil fontified t 2834 . 2835) (nil fontified t 2840 . 2898) (nil fontified t 2922 . 2964) (nil fontified t 2964 . 2965) (nil fontified t 2971 . 2992) (nil fontified t 3013 . 3018) (nil fontified t 3051 . 3065) (nil fontified t 3065 . 3099) (nil fontified t 3155 . 3156) (nil fontified t 3160 . 3161) (nil fontified t 3161 . 3162) (nil fontified t 3198 . 3201) (nil fontified t 3243 . 3244) (nil fontified t 3294 . 3295) (nil fontified t 3344 . 3345) (nil fontified t 3396 . 3397) (nil fontified t 3447 . 3448) (nil fontified t 3452 . 3453) (nil fontified t 3510 . 3513) (nil fontified t 3518 . 3521) (nil fontified t 3574 . 3576) (nil fontified t 3576 . 3577) (nil fontified t 3586 . 3592) (nil fontified t 3633 . 3637) (nil fontified t 3713 . 3714) (nil fontified t 3721 . 3722) (nil fontified t 3763 . 3767) (nil fontified t 3840 . 3841) (nil fontified t 3841 . 3842) (nil fontified t 3861 . 3862) (nil fontified t 3916 . 3917) (nil fontified t 3917 . 3918) (nil fontified t 3945 . 3946) (nil fontified t 3979 . 3980) (nil fontified t 3980 . 3981) (nil fontified t 3995 . 3996) (nil fontified t 4038 . 4039) (nil fontified t 4045 . 4046) (nil fontified t 4108 . 4110) (nil fontified t 4171 . 4172) (nil fontified t 4224 . 4237) (nil fontified t 4237 . 4238) (nil rear-nonsticky t 4243 . 4244)) (24319 45603 690059 503000) 0 nil]) ((nil rear-nonsticky nil 2729 . 2730) (nil fontified nil 2723 . 2724) (nil fontified nil 2710 . 2723) (nil fontified nil 2657 . 2658) (nil fontified nil 2594 . 2596) (nil fontified nil 2531 . 2532) (nil fontified nil 2524 . 2525) (nil fontified nil 2481 . 2482) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2431 . 2432) (nil fontified nil 2403 . 2404) (nil fontified nil 2402 . 2403) (nil fontified nil 2347 . 2348) (nil fontified nil 2327 . 2328) (nil fontified nil 2326 . 2327) (nil fontified nil 2249 . 2253) (nil fontified nil 2207 . 2208) (nil fontified nil 2199 . 2200) (nil fontified nil 2119 . 2123) (nil fontified nil 2072 . 2078) (nil fontified nil 2062 . 2063) (nil fontified nil 2060 . 2062) (nil fontified nil 2004 . 2007) (nil fontified nil 1996 . 1999) (nil fontified nil 1938 . 1939) (nil fontified nil 1933 . 1934) (nil fontified nil 1882 . 1883) (nil fontified nil 1830 . 1831) (nil fontified nil 1780 . 1781) (nil fontified nil 1729 . 1730) (nil fontified nil 1684 . 1687) (nil fontified nil 1647 . 1648) (nil fontified nil 1646 . 1647) (nil fontified nil 1641 . 1642) (nil fontified nil 1551 . 1585) (nil fontified nil 1537 . 1551) (nil fontified nil 1499 . 1504) (nil fontified nil 1457 . 1478) (nil fontified nil 1450 . 1451) (nil fontified nil 1408 . 1450) (nil fontified nil 1326 . 1384) (nil fontified nil 1320 . 1321) (nil fontified nil 1319 . 1320) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1244 . 1245) (nil fontified nil 1227 . 1244) (nil fontified nil 1216 . 1217) (1216 . 2730)) ((#("
      self.face = faces[0]

  def UpdateRectColor(self, rect, rectId, color):

    (x, y, w, h) = rect

    #plot the rectangle (remember to downsize the coordinates)
    cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

    # show the face number
    cv2.putText(self.img,
                \"Face #{}\".format(rectId + 1),
                (x - 10, y - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)
    

  def faceSelectorCallback(self, val):
    if (val > 0): #0 = nothing is selected
      self.UpdateRectColor(self.img,        #image
                           self.rects[x-1], #rect
                           x-1,             #rectId
                           (0,0,255))       #color
    
  def SelectSingleFace(self, faces, downsampleWidth = 500):
    \"\"\"
    Select a single face out of all the ones available

    Arguments:
    - `faces`: the recognized rects of faces
    - `downsampleWidth`: the width of downsampled image to present if needed
    \"\"\"
    #downsample the image for easier picking
    self.img = imutils.resize(self.m_image.copy(), width=downsampleWidth)

    #resizing ratio
    r = downsampleWidth / float(self.m_image.shape[1])

    #show downsampled image
    cv2.imshow(\"FACES\", self.img)

    rects = []
    for (rectId,rect) in enumerate(faces):
      
      # convert dlib's rectangle to a OpenCV-style bounding box
      # [i.e., (x, y, w, h)], then draw the face bounding box
      rects += [(int(i*r) for i in face_utils.rect_to_bb(rect))]

      " 0 1 (fontified nil) 1 7 (fontified nil) 7 11 (fontified nil face font-lock-keyword-face) 11 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 34 (fontified nil face font-lock-keyword-face) 34 35 (fontified nil) 35 50 (fontified nil face font-lock-function-name-face) 50 51 (fontified nil) 51 55 (fontified nil face font-lock-keyword-face) 55 76 (fontified nil) 76 78 (fontified nil) 78 79 (fontified nil) 79 80 (fontified nil) 80 84 (fontified nil) 84 99 (fontified nil) 99 103 (fontified nil) 103 104 (fontified nil) 104 105 (fontified nil) 105 109 (fontified nil) 109 110 (fontified nil face font-lock-comment-delimiter-face) 110 168 (fontified nil face font-lock-comment-face) 168 185 (fontified nil) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 191 (rear-nonsticky t fontified nil) 191 192 (fontified nil) 192 234 (fontified nil) 234 235 (fontified nil) 235 239 (fontified nil) 239 241 (fontified nil face font-lock-comment-delimiter-face) 241 262 (fontified nil face font-lock-comment-face) 262 278 (fontified nil) 278 282 (fontified nil face font-lock-keyword-face) 282 283 (rear-nonsticky t fontified nil) 283 288 (fontified nil) 288 304 (fontified nil) 304 305 (fontified nil syntax-table #1# face font-lock-string-face) 305 310 (fontified nil face font-lock-string-face) 310 311 (fontified nil face font-lock-string-face) 311 313 (fontified nil face font-lock-string-face) 313 314 (fontified nil syntax-table #1# face font-lock-string-face) 314 315 (fontified nil) 315 321 (fontified nil face font-lock-builtin-face) 321 335 (fontified nil) 335 369 (fontified nil) 369 385 (fontified nil) 385 425 (fontified nil) 425 426 (fontified nil) 426 430 (fontified nil) 430 431 (fontified nil) 431 432 (fontified nil) 432 434 (fontified nil) 434 437 (fontified nil face font-lock-keyword-face) 437 438 (fontified nil) 438 458 (fontified nil face font-lock-function-name-face) 458 459 (fontified nil) 459 463 (fontified nil face font-lock-keyword-face) 463 468 (fontified nil) 468 471 (fontified nil) 471 472 (fontified nil) 472 475 (fontified nil) 475 477 (fontified nil face font-lock-keyword-face) 477 489 (fontified nil) 489 490 (fontified nil face font-lock-comment-delimiter-face) 490 500 (fontified nil face font-lock-comment-face) 500 513 (fontified nil face font-lock-comment-face) 513 514 (fontified nil face font-lock-comment-face) 514 520 (fontified nil) 520 524 (fontified nil face font-lock-keyword-face) 524 525 (fontified nil) 525 540 (fontified nil) 540 541 (fontified nil) 541 545 (fontified nil face font-lock-keyword-face) 545 549 (fontified nil) 549 554 (fontified nil) 554 555 (fontified nil) 555 558 (fontified nil) 558 559 (fontified nil face font-lock-comment-delimiter-face) 559 564 (fontified nil face font-lock-comment-face) 564 565 (fontified nil face font-lock-comment-face) 565 589 (fontified nil) 589 592 (fontified nil) 592 596 (fontified nil face font-lock-keyword-face) 596 597 (fontified nil) 597 603 (fontified nil) 603 604 (fontified nil) 604 608 (fontified nil) 608 609 (fontified nil) 609 610 (fontified nil face font-lock-comment-delimiter-face) 610 614 (fontified nil face font-lock-comment-face) 614 615 (fontified nil face font-lock-comment-face) 615 642 (fontified nil) 642 643 (fontified nil) 643 646 (fontified nil) 646 647 (fontified nil) 647 648 (fontified nil) 648 658 (fontified nil) 658 659 (fontified nil) 659 660 (fontified nil face font-lock-comment-delimiter-face) 660 666 (fontified nil face font-lock-comment-face) 666 667 (fontified nil face font-lock-comment-face) 667 694 (fontified nil) 694 702 (fontified nil) 702 703 (rear-nonsticky t fontified nil) 703 704 (rear-nonsticky t fontified nil) 704 706 (fontified nil) 706 711 (fontified nil) 711 712 (fontified nil face font-lock-comment-delimiter-face) 712 717 (fontified nil face font-lock-comment-face) 717 718 (fontified nil face font-lock-comment-face) 718 722 (fontified nil) 722 723 (fontified nil) 723 725 (fontified nil) 725 728 (fontified nil face font-lock-keyword-face) 728 729 (fontified nil) 729 739 (fontified nil face font-lock-function-name-face) 739 745 (fontified nil face font-lock-function-name-face) 745 746 (fontified nil) 746 750 (fontified nil face font-lock-keyword-face) 750 768 (fontified nil) 768 777 (fontified nil) 777 780 (fontified nil) 780 783 (fontified nil) 783 787 (fontified nil) 787 788 (fontified nil syntax-table #1# face font-lock-string-face) 788 791 (fontified nil face font-lock-string-face) 791 802 (fontified nil face font-lock-string-face) 802 805 (fontified nil face font-lock-string-face) 805 817 (fontified nil face font-lock-string-face) 817 834 (fontified nil face font-lock-string-face) 834 837 (fontified nil face font-lock-string-face) 837 842 (fontified nil face font-lock-string-face) 842 844 (fontified nil face font-lock-string-face) 844 846 (fontified nil face font-lock-string-face) 846 847 (fontified nil face font-lock-string-face) 847 851 (fontified nil face font-lock-string-face) 851 856 (fontified nil face font-lock-string-face) 856 862 (fontified nil face font-lock-string-face) 862 872 (fontified nil face font-lock-string-face) 872 874 (fontified nil face font-lock-string-face) 874 878 (fontified nil face font-lock-string-face) 878 880 (fontified nil face font-lock-string-face) 880 887 (fontified nil face font-lock-string-face) 887 903 (fontified nil face font-lock-string-face) 903 907 (fontified nil face font-lock-string-face) 907 909 (fontified nil face font-lock-string-face) 909 911 (fontified nil face font-lock-string-face) 911 914 (fontified nil face font-lock-string-face) 914 918 (fontified nil face font-lock-string-face) 918 929 (fontified nil face font-lock-string-face) 929 973 (fontified nil face font-lock-string-face) 973 976 (fontified nil face font-lock-string-face) 976 980 (fontified nil face font-lock-string-face) 980 983 (fontified nil face font-lock-string-face) 983 984 (fontified nil face font-lock-string-face) 984 990 (fontified nil face font-lock-string-face) 990 991 (fontified nil syntax-table #1# face font-lock-string-face) 991 992 (fontified nil) 992 996 (fontified nil) 996 997 (fontified nil face font-lock-comment-delimiter-face) 997 1014 (fontified nil face font-lock-comment-face) 1014 1017 (fontified nil face font-lock-comment-face) 1017 1032 (fontified nil face font-lock-comment-face) 1032 1033 (fontified nil face font-lock-comment-face) 1033 1037 (fontified nil face font-lock-comment-face) 1037 1041 (fontified nil) 1041 1045 (fontified nil face font-lock-keyword-face) 1045 1046 (fontified nil) 1046 1049 (fontified nil) 1049 1052 (fontified nil) 1052 1053 (fontified nil) 1053 1056 (fontified nil) 1056 1059 (fontified nil) 1059 1060 (fontified nil) 1060 1061 (fontified nil) 1061 1064 (fontified nil) 1064 1065 (fontified nil) 1065 1066 (fontified nil) 1066 1067 (fontified nil) 1067 1070 (fontified nil face font-lock-keyword-face) 1070 1071 (fontified nil face font-lock-keyword-face) 1071 1074 (fontified nil) 1074 1084 (fontified nil) 1084 1085 (rear-nonsticky t fontified nil) 1085 1086 (fontified nil) 1086 1088 (fontified nil) 1088 1093 (fontified nil) 1093 1094 (fontified nil) 1094 1109 (fontified nil) 1109 1110 (rear-nonsticky t fontified nil) 1110 1111 (fontified nil) 1111 1112 (fontified nil) 1112 1115 (fontified nil) 1115 1116 (fontified nil) 1116 1117 (fontified nil face font-lock-comment-delimiter-face) 1117 1120 (fontified nil face font-lock-comment-face) 1120 1131 (fontified nil face font-lock-comment-face) 1131 1132 (fontified nil face font-lock-comment-face) 1132 1133 (fontified nil) 1133 1136 (fontified nil) 1136 1137 (fontified nil) 1137 1140 (fontified nil) 1140 1154 (fontified nil) 1154 1155 (fontified nil) 1155 1156 (fontified nil) 1156 1158 (fontified nil) 1158 1160 (fontified nil face font-lock-builtin-face) 1160 1163 (fontified nil face font-lock-builtin-face) 1163 1164 (fontified nil) 1164 1165 (fontified nil face font-lock-keyword-face) 1165 1168 (fontified nil face font-lock-keyword-face) 1168 1169 (fontified nil) 1169 1170 (fontified nil) 1170 1172 (fontified nil) 1172 1177 (fontified nil) 1177 1185 (fontified nil) 1185 1186 (rear-nonsticky t fontified nil) 1186 1187 (fontified nil) 1187 1188 (fontified nil) 1188 1192 (fontified nil) 1192 1193 (fontified nil face font-lock-comment-delimiter-face) 1193 1208 (fontified nil face font-lock-comment-face) 1208 1210 (fontified nil face font-lock-comment-face) 1210 1214 (fontified nil face font-lock-comment-face) 1214 1215 (fontified nil face font-lock-comment-face) 1215 1216 (fontified nil face font-lock-comment-face) 1216 1220 (fontified nil) 1220 1222 (fontified nil) 1222 1223 (fontified nil) 1223 1225 (fontified nil) 1225 1228 (fontified nil) 1228 1231 (fontified nil) 1231 1232 (fontified nil syntax-table #1# face font-lock-string-face) 1232 1237 (fontified nil face font-lock-string-face) 1237 1238 (fontified nil syntax-table #1# face font-lock-string-face) 1238 1240 (fontified nil) 1240 1244 (fontified nil face font-lock-keyword-face) 1244 1245 (rear-nonsticky t fontified nil) 1245 1246 (fontified nil) 1246 1247 (fontified nil) 1247 1248 (fontified nil) 1248 1249 (rear-nonsticky t fontified nil) 1249 1250 (fontified nil) 1250 1251 (fontified nil) 1251 1255 (fontified nil) 1255 1260 (fontified nil) 1260 1265 (fontified nil) 1265 1266 (fontified nil) 1266 1270 (fontified nil) 1270 1273 (fontified nil face font-lock-keyword-face) 1273 1283 (fontified nil) 1283 1287 (fontified nil) 1287 1288 (fontified nil) 1288 1290 (fontified nil face font-lock-keyword-face) 1290 1291 (fontified nil) 1291 1294 (fontified nil face font-lock-builtin-face) 1294 1300 (fontified nil face font-lock-builtin-face) 1300 1306 (fontified nil) 1306 1308 (fontified nil) 1308 1309 (fontified nil) 1309 1315 (fontified nil) 1315 1316 (fontified nil) 1316 1322 (fontified nil) 1322 1324 (fontified nil face font-lock-comment-delimiter-face) 1324 1336 (fontified nil face font-lock-comment-face) 1336 1337 (fontified nil syntax-table #1# face font-lock-comment-face) 1337 1356 (fontified nil face font-lock-comment-face) 1356 1363 (fontified nil face font-lock-comment-face) 1363 1372 (fontified nil face font-lock-comment-face) 1372 1378 (fontified nil face font-lock-comment-face) 1378 1380 (fontified nil face font-lock-comment-face) 1380 1386 (fontified nil) 1386 1388 (fontified nil face font-lock-comment-delimiter-face) 1388 1392 (fontified nil face font-lock-comment-face) 1392 1403 (fontified nil face font-lock-comment-face) 1403 1406 (fontified nil face font-lock-comment-face) 1406 1408 (fontified nil face font-lock-comment-face) 1408 1417 (fontified nil face font-lock-comment-face) 1417 1423 (fontified nil face font-lock-comment-face) 1423 1424 (fontified nil face font-lock-comment-face) 1424 1430 (fontified nil face font-lock-comment-face) 1430 1435 (fontified nil face font-lock-comment-face) 1435 1439 (fontified nil face font-lock-comment-face) 1439 1441 (fontified nil face font-lock-comment-face) 1441 1442 (fontified nil face font-lock-comment-face) 1442 1444 (fontified nil) 1444 1448 (fontified nil) 1448 1453 (fontified nil) 1453 1454 (fontified nil) 1454 1458 (fontified nil) 1458 1459 (fontified nil) 1459 1462 (fontified nil face font-lock-builtin-face) 1462 1468 (fontified nil) 1468 1471 (fontified nil face font-lock-keyword-face) 1471 1474 (fontified nil) 1474 1476 (fontified nil face font-lock-keyword-face) 1476 1485 (fontified nil) 1485 1494 (fontified nil) 1494 1507 (fontified nil) 1507 1508 (fontified nil) 1508 1512 (fontified nil) 1512 1513 (fontified nil) 1513 1514 (fontified nil rear-nonsticky nil)) . 1216) (undo-tree-id5919 . -1514) (undo-tree-id5920 . -1508) (undo-tree-id5921 . -1514) (undo-tree-id5922 . -1514) (undo-tree-id5923 . -1514) (undo-tree-id5924 . -335) (undo-tree-id5925 . -1514) (undo-tree-id5926 . -1514) (undo-tree-id5927 . -335) (nil fontified t 1216 . 1217) (nil fontified t 1227 . 1244) (nil fontified t 1244 . 1245) (nil fontified t 1294 . 1295) (nil fontified t 1295 . 1296) (nil fontified t 1319 . 1320) (nil fontified t 1320 . 1321) (nil fontified t 1326 . 1384) (nil fontified t 1408 . 1450) (nil fontified t 1450 . 1451) (nil fontified t 1457 . 1478) (nil fontified t 1499 . 1504) (nil fontified t 1537 . 1551) (nil fontified t 1551 . 1585) (nil fontified t 1641 . 1642) (nil fontified t 1646 . 1647) (nil fontified t 1647 . 1648) (nil fontified t 1684 . 1687) (nil fontified t 1729 . 1730) (nil fontified t 1780 . 1781) (nil fontified t 1830 . 1831) (nil fontified t 1882 . 1883) (nil fontified t 1933 . 1934) (nil fontified t 1938 . 1939) (nil fontified t 1996 . 1999) (nil fontified t 2004 . 2007) (nil fontified t 2060 . 2062) (nil fontified t 2062 . 2063) (nil fontified t 2072 . 2078) (nil fontified t 2119 . 2123) (nil fontified t 2199 . 2200) (nil fontified t 2207 . 2208) (nil fontified t 2249 . 2253) (nil fontified t 2326 . 2327) (nil fontified t 2327 . 2328) (nil fontified t 2347 . 2348) (nil fontified t 2402 . 2403) (nil fontified t 2403 . 2404) (nil fontified t 2431 . 2432) (nil fontified t 2465 . 2466) (nil fontified t 2466 . 2467) (nil fontified t 2481 . 2482) (nil fontified t 2524 . 2525) (nil fontified t 2531 . 2532) (nil fontified t 2594 . 2596) (nil fontified t 2657 . 2658) (nil fontified t 2710 . 2723) (nil fontified t 2723 . 2724) (nil rear-nonsticky t 2729 . 2730)) (24319 45608 519201 596000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#8=[nil nil ((nil rear-nonsticky nil 969 . 970) (nil fontified nil 969 . 970) (nil fontified nil 955 . 969) (nil fontified nil 954 . 955) (nil fontified nil 950 . 954) (950 . 970)) nil (24320 965 601543 765000) 0 nil]) ((947 . 950)) nil (24320 965 601589 948000) 0 nil]) ((#(" " 0 1 (fontified t)) . 921) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (#("/" 0 1 (fontified t)) . 921) (#(" " 0 1 (fontified t)) . 921)) nil (24320 965 601667 71000) 0 nil]) ((#("self.downsampleWidth" 0 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t) 5 19 (fontified t) 19 20 (fontified t)) . 921) (undo-tree-id9706 . -20) (undo-tree-id9707 . -15) (undo-tree-id9708 . -15) (undo-tree-id9709 . -5) (undo-tree-id9710 . -15) (undo-tree-id9711 . -5) (undo-tree-id9712 . -5) (undo-tree-id9713 . -4) (undo-tree-id9714 . -4) (undo-tree-id9715 . -20) (undo-tree-id9716 . -4) (undo-tree-id9717 . -20) (undo-tree-id9718 . -20) (undo-tree-id9719 . -20) (undo-tree-id9720 . -20) (undo-tree-id9721 . -20) (undo-tree-id9722 . -20) (undo-tree-id9723 . -20) (undo-tree-id9724 . -20) (undo-tree-id9725 . -20) (undo-tree-id9726 . -20) (undo-tree-id9727 . -20) (undo-tree-id9728 . -20) (undo-tree-id9729 . -20) (undo-tree-id9730 . -20) (undo-tree-id9731 . -20) (undo-tree-id9732 . -20) (undo-tree-id9733 . -20) (undo-tree-id9734 . -20) (undo-tree-id9735 . -20) (undo-tree-id9736 . -20) (undo-tree-id9737 . -15) (undo-tree-id9738 . -20) (undo-tree-id9739 . -15) (undo-tree-id9740 . -5) (undo-tree-id9741 . -15) (undo-tree-id9742 . -5) (undo-tree-id9743 . -5)) nil (24320 965 602042 513000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 941) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (#("/" 0 1 (fontified t)) . 941) (#(" " 0 1 (fontified t)) . 941)) ((941 . 942) (941 . 942) (941 . 942)) (24320 960 840825 395000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("*" 0 1 (fontified t)) . 1282) (undo-tree-id9676 . -1)) ((1282 . 1283) (t 24320 951 678056 244000)) (24320 951 584771 468000) 0 nil]) ((1281 . 1282)) ((#("/" 0 1 (fontified t)) . 1281) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1)) (24320 953 641100 496000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1222)) ((1222 . 1223)) (24320 953 832791 122000) 0 nil]) ((1221 . 1222)) ((#("/" 0 1 (fontified t)) . 1221) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1)) (24320 954 17238 508000) 0 nil]) ((1161 . 1162)) ((#("/" 0 1 (fontified t)) . 1161)) (24320 954 198523 737000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1161)) ((1161 . 1162)) (24320 954 353286 25000) 0 nil]) ((1101 . 1102)) ((#("/" 0 1 (fontified t)) . 1101)) (24320 954 545362 990000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1101) (t 24320 902 479473 89000)) ((1101 . 1102)) (24320 954 753334 846000) 0 nil] [nil nil ((#(" #TODO: Face Selection?" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 8 (fontified t face font-lock-comment-face) 8 23 (fontified t face font-lock-comment-face)) . 1594) (undo-tree-id9588 . -23) (undo-tree-id9590 . -23) (undo-tree-id9592 . -23) (undo-tree-id9594 . -23) (undo-tree-id9595 . -23) (undo-tree-id9597 . -13) (undo-tree-id9599 . -13) (undo-tree-id9601 . -13) (undo-tree-id9603 . -2) (undo-tree-id9605 . -2) (undo-tree-id9607 . -2) (undo-tree-id9609 . -1)) ((1594 . 1617) (t 24320 895 246681 386000)) (24320 895 133231 51000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1551)) nil (24320 960 841928 431000) 0 nil]) ((#("    " 0 4 (fontified t)) . -1551) (undo-tree-id9610 . -4) (undo-tree-id9611 . -4) (undo-tree-id9612 . -4) (undo-tree-id9613 . -4) (undo-tree-id9614 . -4) (undo-tree-id9615 . -4) 1555) nil (24320 895 133382 831000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1551) (#("
" 0 1 (fontified t)) . 1551) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1)) nil (24320 895 133808 826000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1552) (#("
" 0 1 (fontified t)) . 1552)) nil (24320 895 133895 993000) 0 nil]) ((#("   " 0 3 (fontified t)) . -1552) (undo-tree-id9660 . -3) (undo-tree-id9661 . -3) (undo-tree-id9662 . -3) (undo-tree-id9663 . -3) (undo-tree-id9664 . -3) (undo-tree-id9665 . -3) 1555) nil (24320 895 133972 429000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1552) (#(" " 0 1 (fontified t)) . 1552) (#(" " 0 1 (fontified t)) . 1552) (#("
" 0 1 (fontified t)) . 1552) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1)) nil (24320 895 134037 45000) 0 nil]) ((#("      #Try in a smaller(?) image?" 0 6 (fontified t) 6 7 (fontified t face font-lock-comment-delimiter-face) 7 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face)) . -1552) (undo-tree-id9669 . -33) (undo-tree-id9670 . -33) (undo-tree-id9671 . -33) (undo-tree-id9672 . -33) (undo-tree-id9673 . -33) (undo-tree-id9674 . -33) 1585 (t 24320 796 15539 97000)) nil (24320 895 134125 825000) 0 nil]) ((#("e" 0 1 (fontified t)) . 2384)) ((2384 . 2385) (t 24320 796 15539 97000)) (24320 830 775022 726000) 0 nil]) ((#("a" 0 1 (fontified t)) . 2383)) nil (24320 830 412533 826000) 0 nil]) ((#("." 0 1 (fontified t)) . 2381) (#("f" 0 1 (fontified t)) . 2381) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (#("l" 0 1 (fontified t)) . 2381) (#("e" 0 1 (fontified t)) . 2381) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . 2381) (t 24320 790 253705 31000)) nil (24320 795 918455 738000) 0 nil]) ((#("e" 0 1 (fontified t)) . 2296)) nil (24320 790 142507 298000) 0 nil]) ((#("a" 0 1 (fontified t)) . 2295)) nil (24320 790 142548 275000) 0 nil]) ((#("." 0 1 (fontified t)) . 2293) (#("f" 0 1 (fontified t)) . 2293) (#("l" 0 1 (fontified t)) . 2293) (#("e" 0 1 (fontified t)) . 2293) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . 2293) (t 24320 782 99939 843000)) nil (24320 790 142596 662000) 0 nil]) ((1721 . 1725) (t 24320 777 495072 455000)) nil (24320 781 998723 759000) 0 nil]) ((1888 . 1893) (t 24320 752 874781 487000)) nil (24320 777 390815 271000) 0 nil]) ((#("e" 0 1 (fontified t)) . 1423)) nil (24320 752 775583 258000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1422)) nil (24320 752 775626 215000) 0 nil]) ((#("." 0 1 (fontified t)) . 1420) (#("f" 0 1 (fontified t)) . 1420) (#("l" 0 1 (fontified t)) . 1420) (#("e" 0 1 (fontified t)) . 1420) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . 1420) (t 24320 742 165089 906000)) nil (24320 752 775685 137000) 0 nil]) ((1308 . 1313) (t 24320 731 973383 143000)) nil (24320 742 55900 304000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 843)) nil (24320 731 895244 416000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 842)) nil (24320 731 895257 334000) 0 nil]) ((1002 . 1008)) nil (24320 731 895263 660000) 0 nil] [nil nil ((840 . 845)) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 840) (undo-tree-id9570 . -5) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -2) (undo-tree-id9574 . -1) (undo-tree-id9575 . -2) (undo-tree-id9576 . -3) (undo-tree-id9577 . -2) (undo-tree-id9578 . -3) (undo-tree-id9579 . -4) (undo-tree-id9580 . -3) (undo-tree-id9581 . -4) (undo-tree-id9582 . -5) (undo-tree-id9583 . -4) (undo-tree-id9584 . -5)) (24320 720 606997 810000) 0 nil]) ((845 . 848) (t 24320 692 137522 622000)) ((#("500" 0 3 (fontified t face font-lock-variable-name-face)) . 845) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -2) (undo-tree-id9564 . -1) (undo-tree-id9565 . -2) (undo-tree-id9566 . -3) (undo-tree-id9567 . -2) (undo-tree-id9568 . -3) (undo-tree-id9569 . -3)) (24320 720 607302 498000) 0 nil]) ((792 . 795)) nil (24320 714 632851 383000) 0 nil]) ((#("g" 0 1 (fontified t)) . -792) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) 793) nil (24320 692 33299 258000) 0 nil]) ((785 . 793) (t 24320 681 503826 792000)) nil (24320 692 33334 619000) 0 nil]) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -830) (undo-tree-id9548 . -5) (undo-tree-id9549 . -4) (undo-tree-id9550 . -4) (undo-tree-id9551 . -4) (undo-tree-id9552 . -5) (undo-tree-id9553 . -4) (undo-tree-id9554 . -4) (undo-tree-id9555 . -5) (undo-tree-id9556 . -4) (undo-tree-id9557 . -5) 835 (t 24320 650 510713 329000)) nil (24320 681 409997 645000) 0 nil]) ((1271 . 1272) (1211 . 1212) (1151 . 1152) (1091 . 1092) 1268) nil (24320 650 402548 973000) 0 nil]) ((1244 . 1248) (1185 . 1189) (1126 . 1130) (1067 . 1071) (t 24320 623 769478 236000) 1232) nil (24320 650 402623 920000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1137) (#(" " 0 1 (fontified t)) . 1137)) nil (24320 623 675236 643000) 0 nil]) ((1135 . 1137) (t 24320 603 151068 8000)) nil (24320 623 675284 365000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 1254)) ((1254 . 1255) (t 24320 602 107097 870000)) (24320 602 3848 582000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1254) (undo-tree-id9542 . -2) (undo-tree-id9543 . -2) (undo-tree-id9544 . -2) (undo-tree-id9545 . -2) (undo-tree-id9546 . -2) (undo-tree-id9547 . -2) 1256) nil (24320 602 637395 710000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1254) (t 24320 597 323234 709000)) nil (24320 602 4006 109000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1254) (#("
" 0 1 (fontified t)) . 1254)) nil (24320 597 242770 968000) 0 nil]) ((#("      self.face.part(i).y *= r" 0 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 14 (fontified t) 14 15 (rear-nonsticky t fontified t) 15 23 (fontified t) 23 25 (fontified t face font-lock-variable-name-face) 25 29 (fontified t) 29 30 (fontified t)) . 1254) (undo-tree-id9532 . -30) (undo-tree-id9533 . -30) (undo-tree-id9534 . -30) (undo-tree-id9535 . -30) (undo-tree-id9536 . -30) (undo-tree-id9537 . -30) (undo-tree-id9538 . -30) (undo-tree-id9539 . -30) (undo-tree-id9540 . -30) (undo-tree-id9541 . -30) (t 24320 592 137383 48000)) nil (24320 597 242814 614000) 0 nil]) ((1083 . 1085)) nil (24320 592 36115 489000) 0 nil]) ((1136 . 1138)) nil (24320 592 36156 708000) 0 nil]) ((1190 . 1191)) nil (24320 592 36184 850000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1248) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1)) nil (24320 592 36322 819000) 0 nil]) ((1248 . 1249)) nil (24320 592 36367 209000) 0 nil]) ((1246 . 1248)) nil (24320 592 36387 200000) 0 nil]) ((#("4" 0 1 (fontified t)) . -1246) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) 1247) nil (24320 592 36479 393000) 0 nil]) ((1227 . 1247)) nil (24320 592 36518 275000) 0 nil]) ((1193 . 1227)) nil (24320 592 36541 985000) 0 nil]) ((1183 . 1193)) nil (24320 592 36565 690000) 0 nil]) ((1175 . 1183)) nil (24320 592 36589 828000) 0 nil]) ((#("f" 0 1 (fontified t)) . -1175) (undo-tree-id9527 . -1) 1176) nil (24320 592 36630 14000) 0 nil]) ((1173 . 1176)) nil (24320 592 36653 702000) 0 nil]) ((1139 . 1173)) nil (24320 592 36670 697000) 0 nil]) ((1129 . 1139)) nil (24320 592 36686 804000) 0 nil]) ((1086 . 1120) (#(" " 0 1 (fontified t)) . 1086) (undo-tree-id9528 . -1) 1087) nil (24320 592 36775 841000) 0 nil]) ((1093 . 1096)) nil (24320 592 36798 308000) 0 nil]) ((1092 . 1093)) nil (24320 592 36814 494000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1092) (undo-tree-id9529 . -1) (#("o" 0 1 (fontified t)) . -1093) (undo-tree-id9530 . -1) 1094) nil (24320 592 36856 949000) 0 nil]) ((1085 . 1094)) nil (24320 592 36880 820000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1084)) nil (24320 592 36897 321000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1083)) nil (24320 592 36914 254000) 0 nil]) ((#("=" 0 1 (fontified t)) . 1085)) nil (24320 592 36930 896000) 0 nil]) ((1056 . 1076)) nil (24320 592 36947 787000) 0 nil]) ((1052 . 1056)) nil (24320 592 36963 739000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . -1052) (undo-tree-id9531 . -4) 1056) nil (24320 592 36993 293000) 0 nil]) ((1049 . 1056) (t 24320 459 108188 247000)) nil (24320 592 37016 384000) 0 nil]) ((1053 . 1056)) nil (24320 458 999877 883000) 0 nil]) ((1050 . 1053)) nil (24320 458 999919 335000) 0 nil]) ((#("part(i).x" 0 7 (fontified t) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (rear-nonsticky t fontified t face font-lock-variable-name-face)) . -1050) (undo-tree-id9502 . -9) (undo-tree-id9503 . -9) (undo-tree-id9504 . -6) (undo-tree-id9505 . -7) (undo-tree-id9506 . -6) (undo-tree-id9507 . -7) (undo-tree-id9508 . -8) (undo-tree-id9509 . -7) (undo-tree-id9510 . -8) (undo-tree-id9511 . -9) (undo-tree-id9512 . -8) (undo-tree-id9513 . -9) 1058 (t 24320 448 77503 774000)) nil (24320 459 115 183000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1071) (undo-tree-id9449 . -2)) nil (24320 447 991261 326000) 0 nil]) ((#("        " 0 8 (fontified t)) . -1040) (undo-tree-id9450 . -8)) nil (24320 447 991284 843000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1040) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1)) nil (24320 447 991319 256000) 0 nil]) ((#("for i in range(0, self.face.num_parts):" 0 3 (fontified t face font-lock-keyword-face) 3 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 14 (fontified t face font-lock-builtin-face) 14 18 (fontified t) 18 22 (fontified t face font-lock-keyword-face) 22 27 (fontified t) 27 39 (fontified t)) . -1040) (undo-tree-id9457 . -18) (undo-tree-id9458 . -27) (undo-tree-id9459 . -22) (undo-tree-id9460 . -22) (undo-tree-id9461 . -22) (undo-tree-id9462 . -39) (undo-tree-id9463 . -39) (undo-tree-id9464 . -39) (undo-tree-id9465 . -5) (undo-tree-id9466 . -5) (undo-tree-id9467 . -5) (undo-tree-id9468 . -5) (undo-tree-id9469 . -5) (undo-tree-id9470 . -8) (undo-tree-id9471 . -5) (undo-tree-id9472 . -8) (undo-tree-id9473 . -14) (undo-tree-id9474 . -8) (undo-tree-id9475 . -14) (undo-tree-id9476 . -16) (undo-tree-id9477 . -14) (undo-tree-id9478 . -16) (undo-tree-id9479 . -22) (undo-tree-id9480 . -16) (undo-tree-id9481 . -22) (undo-tree-id9482 . -18) (undo-tree-id9483 . -22) (undo-tree-id9484 . -18) (undo-tree-id9485 . -15) (undo-tree-id9486 . -18) (undo-tree-id9487 . -15) (undo-tree-id9488 . -9) (undo-tree-id9489 . -15) (undo-tree-id9490 . -9) (undo-tree-id9491 . -6) (undo-tree-id9492 . -9) (undo-tree-id9493 . -6) (undo-tree-id9494 . -4) (undo-tree-id9495 . -6) (undo-tree-id9496 . -4) (undo-tree-id9497 . -4) (undo-tree-id9498 . -23) (undo-tree-id9499 . -39) (undo-tree-id9500 . -39) (undo-tree-id9501 . -39) 1079 (t 24320 360 946996 74000)) nil (24320 447 991498 793000) 0 nil]) ((1113 . 1121)) nil (24320 360 803204 853000) 0 nil]) ((#("        " 0 8 (fontified t)) . 1113) (undo-tree-id9426 . -8) (undo-tree-id9427 . -8) (undo-tree-id9428 . -8) (undo-tree-id9429 . -8) (undo-tree-id9430 . -8) (undo-tree-id9431 . -8) (undo-tree-id9432 . -8) (undo-tree-id9433 . -8) (undo-tree-id9434 . -8)) nil (24320 360 803343 623000) 0 nil]) ((1080 . 1088)) nil (24320 360 803383 737000) 0 nil]) ((#("	" 0 1 (fontified t)) . 1080) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (t 24320 350 77306 995000)) nil (24320 360 803534 887000) 0 nil]) ((1103 . 1104)) nil (24320 349 978844 514000) 0 nil]) ((1134 . 1136)) nil (24320 349 978881 481000) 0 nil]) ((1132 . 1133)) nil (24320 349 978906 915000) 0 nil]) ((1102 . 1103)) nil (24320 349 978928 784000) 0 nil]) ((1100 . 1101)) nil (24320 349 978950 857000) 0 nil]) ((#("shape.part(i).y = " 0 13 (fontified t) 13 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t) 16 18 (fontified t)) . -1111) (undo-tree-id9414 . -18) (undo-tree-id9415 . -18) (undo-tree-id9416 . -18) (undo-tree-id9417 . -18) (undo-tree-id9418 . -18) (undo-tree-id9419 . -18) 1129) nil (24320 349 979058 500000) 0 nil]) ((#("shape.part(i).x = " 0 13 (fontified t) 13 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t)) . 1081) (undo-tree-id9420 . -18) (undo-tree-id9421 . -15) (undo-tree-id9422 . -18) (undo-tree-id9423 . -18) (undo-tree-id9424 . -18) (undo-tree-id9425 . -18) (t 24320 317 134249 309000)) nil (24320 349 979165 311000) 0 nil]) ((nil rear-nonsticky nil 1155 . 1156) (nil fontified nil 1151 . 1156) (nil fontified nil 1147 . 1151) (1147 . 1156)) nil (24320 317 42909 93000) 0 nil]) ((#("shape" 0 5 (fontified t)) . -1147) (undo-tree-id9401 . -5) (undo-tree-id9402 . -5) (undo-tree-id9403 . -5) (undo-tree-id9404 . -5)) nil (24320 317 42960 91000) 0 nil]) ((nil rear-nonsticky nil 1107 . 1108) (nil fontified nil 1103 . 1108) (nil fontified nil 1099 . 1103) (1099 . 1108)) nil (24320 317 42983 724000) 0 nil]) ((#("shape" 0 5 (fontified t)) . -1099) (undo-tree-id9405 . -5) (undo-tree-id9406 . -5) (undo-tree-id9407 . -5) (undo-tree-id9408 . -5) (undo-tree-id9409 . -5) (undo-tree-id9410 . -5) (undo-tree-id9411 . -5)) nil (24320 317 43033 47000) 0 nil]) ((1058 . 1067)) nil (24320 317 43050 612000) 0 nil]) ((#("shape" 0 5 (fontified t)) . -1058) (undo-tree-id9412 . -5) (undo-tree-id9413 . -5) (t 24320 292 371957 616000)) nil (24320 317 43072 797000) 0 nil] [nil nil ((1075 . 1084) (t 24320 292 371957 616000)) ((#("
        " 0 9 (fontified t)) . 1075) (undo-tree-id9393 . -9) (undo-tree-id9394 . 9) (undo-tree-id9395 . -9) (undo-tree-id9396 . -9) (undo-tree-id9397 . -9) (undo-tree-id9398 . -9) (undo-tree-id9399 . -9) (undo-tree-id9400 . -9)) (24320 300 755414 186000) 0 nil]) ((1154 . 1155)) nil (24320 300 756648 420000) 0 nil]) ((1153 . 1154)) nil (24320 292 260585 27000) 0 nil]) ((#("x" 0 1 (fontified t rear-nonsticky t)) . -1153) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) 1154) nil (24320 292 260659 357000) 0 nil]) ((nil rear-nonsticky nil 1153 . 1154) (nil fontified nil 1152 . 1154) (nil fontified nil 1139 . 1152) (1139 . 1154)) nil (24320 292 260718 138000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1137)) nil (24320 292 260740 126000) 0 nil]) ((1110 . 1111)) nil (24320 292 260757 163000) 0 nil]) ((nil rear-nonsticky nil 1109 . 1110) (nil fontified nil 1108 . 1110) (nil fontified nil 1095 . 1108) (1095 . 1110)) nil (24320 292 260784 79000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1093) (t 24320 263 678778 363000)) nil (24320 292 260807 906000) 0 nil]) ((nil rear-nonsticky nil 919 . 920) (nil fontified nil 919 . 920) (nil fontified nil 915 . 919) (915 . 920) (t 24320 256 115994 691000)) nil (24320 263 588357 833000) 0 nil] [nil ([nil nil ((#("downsampleWidth = " 0 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t)) . -714) (undo-tree-id9369 . -18) (undo-tree-id9371 . -1) (undo-tree-id9373 . -18) (undo-tree-id9375 . -10) (undo-tree-id9377 . -10) (undo-tree-id9379 . -15) (undo-tree-id9381 . -18) 732) ((714 . 732) (t 24320 252 669093 286000)) (24320 252 572974 803000) 0 nil]) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 714) (undo-tree-id9382 . -5) (undo-tree-id9384 . -5) (undo-tree-id9386 . -5) (undo-tree-id9387 . -5) (undo-tree-id9389 . -5) (t 24320 238 345503 5000)) ((714 . 719)) (24320 254 676555 34000) 0 nil]) ((810 . 817)) nil (24320 254 981324 451000) 0 nil]) ((#("smaller" 0 7 (fontified t face font-lock-comment-face)) . -810) (undo-tree-id9365 . -7) (undo-tree-id9366 . -7) (undo-tree-id9367 . -7) (undo-tree-id9368 . -7) (t 24320 231 318704 1000)) nil (24320 238 253309 649000) 0 nil]) ((959 . 966)) nil (24320 231 205101 29000) 0 nil]) ((911 . 915)) nil (24320 231 205114 761000) 0 nil]) ((nil fontified nil 954 . 955) (nil fontified nil 953 . 954) (nil fontified nil 946 . 953) (nil fontified nil 941 . 946) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 937 . 938) (nil fontified nil 936 . 937) (nil fontified nil 935 . 936) (nil fontified nil 934 . 935) (nil fontified nil 931 . 934) (nil fontified nil 929 . 931) (nil fontified nil 927 . 929) (nil fontified nil 926 . 927) (nil fontified nil 925 . 926) (nil fontified nil 911 . 925) (911 . 955)) nil (24320 231 205147 29000) 0 nil]) ((#(" " 0 1 (fontified nil)) . 911) (undo-tree-id9363 . -1) (910 . 911) (#(" " 0 1 (fontified nil)) . 909) (910 . 911) 911) nil (24320 231 205177 277000) 0 nil]) ((904 . 911) (#(" " 0 1 (fontified t)) . 904) (undo-tree-id9364 . -1) 905 (t 24320 212 310247 721000)) nil (24320 231 205195 240000) 0 nil]) ((1057 . 1060)) ((#("= r" 0 3 (fontified t)) . 1057) (undo-tree-id9360 . -3) (undo-tree-id9361 . -3) (undo-tree-id9362 . -3) (t 24320 212 310247 721000)) (24320 220 832673 71000) 0 nil]) ((1055 . 1057)) nil (24320 220 398621 634000) 0 nil]) ((#(")" 0 1 (rear-nonsticky t fontified t)) . 1055) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1)) nil (24320 212 213939 171000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1040) (#("," 0 1 (fontified t)) . 1040)) nil (24320 212 213952 88000) 0 nil]) ((1031 . 1040)) nil (24320 212 213960 707000) 0 nil]) ((1026 . 1031)) nil (24320 212 213967 477000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1011) (undo-tree-id9356 . 1) (undo-tree-id9357 . -1)) nil (24320 212 213981 250000) 0 nil]) ((#("coords[i] = " 0 6 (fontified t face font-lock-variable-name-face) 6 12 (fontified t)) . -1011) (undo-tree-id9358 . -12) (undo-tree-id9359 . -12) 1023) nil (24320 212 213998 74000) 0 nil]) ((#("	" 0 1 (fontified t)) . -1011) 1010 (t 24320 177 263250 215000)) nil (24320 212 214009 250000) 0 nil]) ((956 . 967)) nil (24320 177 151502 869000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -956) (undo-tree-id9347 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -957) (undo-tree-id9348 . -1) 958) nil (24320 177 151577 637000) 0 nil]) ((937 . 958)) nil (24320 177 151609 541000) 0 nil]) ((930 . 937)) nil (24320 177 151628 590000) 0 nil]) ((nil rear-nonsticky nil 1020 . 1021) (nil fontified nil 981 . 1021) (nil fontified nil 975 . 981) (nil fontified nil 951 . 975) (nil fontified nil 946 . 951) (nil fontified nil 945 . 946) (nil fontified nil 943 . 945) (nil fontified nil 940 . 943) (nil fontified nil 937 . 940) (937 . 1021)) nil (24320 177 151685 289000) 0 nil]) ((#("print (type(self.face), self.face)" 0 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 11 (fontified t face font-lock-builtin-face) 11 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 24 (fontified t) 24 28 (fontified t face font-lock-keyword-face) 28 34 (fontified t)) . -937) (undo-tree-id9349 . -34) (undo-tree-id9350 . -34) 971 (t 24320 115 770009 180000)) nil (24320 177 151766 911000) 0 nil]) ((#("x" 0 1 (fontified nil)) . 797) (#("e" 0 1 (fontified nil)) . 797) (#(" " 0 1 (fontified t)) . 797) (undo-tree-id9346 . -1)) ((797 . 798) (797 . 798) (797 . 798) (t 24320 115 770009 180000)) (24320 166 880351 223000) 0 nil]) ((#("Exception " 0 9 (fontified t face font-lock-type-face) 9 10 (fontified t)) . 798) (undo-tree-id9307 . -10) (undo-tree-id9308 . -10) (undo-tree-id9309 . -9) (undo-tree-id9310 . -10) (undo-tree-id9311 . -10) (undo-tree-id9312 . -10) (undo-tree-id9313 . -10) (undo-tree-id9314 . -10) (undo-tree-id9315 . -10) (undo-tree-id9316 . -10) (undo-tree-id9317 . -10) (undo-tree-id9318 . -10) (undo-tree-id9319 . -10) (undo-tree-id9320 . -10) (undo-tree-id9321 . -10) (undo-tree-id9322 . -10) (undo-tree-id9323 . -10) (undo-tree-id9324 . -9) (undo-tree-id9325 . -10) (undo-tree-id9326 . -9) (undo-tree-id9327 . -10) (undo-tree-id9328 . -9) (undo-tree-id9329 . -10) (undo-tree-id9330 . -10) (undo-tree-id9331 . -10) (undo-tree-id9332 . -10) (undo-tree-id9333 . -10) (undo-tree-id9334 . -10) (t 24320 70 681298 915000)) nil (24320 166 512128 636000) 0 nil]) ((798 . 808) (t 24320 45 537018 153000)) nil (24320 70 602846 308000) 0 nil]) ((962 . 974)) nil (24320 45 427423 868000) 0 nil]) ((946 . 962)) nil (24320 45 427462 436000) 0 nil]) ((#("typ" 0 3 (fontified t)) . -946) (undo-tree-id9303 . -3) 949) nil (24320 45 427519 789000) 0 nil]) ((940 . 949)) nil (24320 45 427545 168000) 0 nil]) ((#("for " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -940) (undo-tree-id9304 . -4) (undo-tree-id9305 . -4) (undo-tree-id9306 . -4)) nil (24320 45 427594 655000) 0 nil]) ((940 . 944)) ((#("for " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 940) (undo-tree-id9301 . -4) (undo-tree-id9302 . -4)) (24320 32 611394 93000) 0 nil]) ((933 . 940) (#("      " 0 6 (fontified t)) . 933) (undo-tree-id9300 . -6) 939) nil (24320 32 259735 656000) 0 nil]) ((932 . 939) (t 24320 11 940979 147000)) nil (24320 32 259203 905000) 0 nil]) ((#("
" 0 1 (fontified t)) . 933)) nil (24320 11 860494 78000) 0 nil]) ((#("   " 0 2 (fontified t) 2 3 (fontified t)) . -933) (undo-tree-id9285 . -3) (undo-tree-id9286 . -2) (undo-tree-id9287 . -2) (undo-tree-id9288 . -2) (undo-tree-id9289 . -2) (undo-tree-id9290 . -2) (undo-tree-id9291 . -3) (undo-tree-id9292 . -3) (undo-tree-id9293 . -2) (undo-tree-id9294 . -2) (undo-tree-id9295 . -2) (undo-tree-id9296 . -2) (undo-tree-id9297 . -3) (undo-tree-id9298 . -3) (undo-tree-id9299 . -3) 936) nil (24320 11 860690 199000) 0 nil]) ((#(" " 0 1 (fontified t)) . 935) (#("
" 0 1 (fontified t)) . 935) (t 24320 1 980264 61000)) nil (24320 11 860766 770000) 0 nil]) ((886 . 891) (t 24319 65529 588504 103000)) nil (24320 1 900659 92000) 0 nil]) ((#("down" 0 4 (fontified t)) . -737) (741 . 756) 741) nil (24319 65529 478285 218000) 0 nil]) ((734 . 741)) nil (24319 65529 478328 857000) 0 nil]) ((nil fontified t 724 . 734) (#("downsample" 0 10 (fontified t)) . -719) (729 . 744) 729) nil (24319 65529 478364 94000) 0 nil]) ((#("down" 0 4 (fontified t)) . -719) (723 . 733) 723) nil (24319 65529 478394 922000) 0 nil]) ((721 . 723)) nil (24319 65529 478415 428000) 0 nil]) ((#("e" 0 1 (fontified t)) . -721) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) 722) nil (24319 65529 478494 727000) 0 nil]) ((714 . 722)) nil (24319 65529 478520 976000) 0 nil]) ((709 . 714) (#("    " 0 4 (fontified t)) . 709) (undo-tree-id9277 . -4) (undo-tree-id9278 . -4) (undo-tree-id9279 . -4) (undo-tree-id9280 . -4) (undo-tree-id9281 . -4) (undo-tree-id9282 . -4) (undo-tree-id9283 . -4) (undo-tree-id9284 . -4) 713) nil (24319 65529 478616 34000) 0 nil]) ((708 . 713) (t 24319 65517 246857 132000)) nil (24319 65529 478651 275000) 0 nil]) ((555 . 557)) nil (24319 65517 157223 353000) 0 nil]) ((#("0" 0 1 (fontified t face font-lock-doc-face)) . -555) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (#("]" 0 1 (fontified t face font-lock-doc-face)) . -556) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . 1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (#("]" 0 1 (fontified t face font-lock-doc-face)) . -557) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . 1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) 558) nil (24319 65517 157623 208000) 0 nil]) ((554 . 558)) nil (24319 65517 157727 939000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-doc-face)) . -554) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (#("-" 0 1 (fontified t face font-lock-doc-face)) . -555) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (#("]" 0 1 (fontified t face font-lock-doc-face)) . -556) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . 1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) 557) nil (24319 65517 158056 854000) 0 nil]) ((551 . 557)) nil (24319 65517 158130 411000) 0 nil]) ((538 . 551)) nil (24319 65517 158146 650000) 0 nil]) ((510 . 516)) nil (24319 65517 158162 652000) 0 nil]) ((#("size " 0 5 (fontified t face font-lock-doc-face)) . 510) (undo-tree-id9226 . -5) (undo-tree-id9227 . -5) (undo-tree-id9228 . -5) (undo-tree-id9229 . -5) (undo-tree-id9230 . -5) (undo-tree-id9231 . -5) (undo-tree-id9232 . -5) (undo-tree-id9233 . -5) 515) nil (24319 65517 158251 760000) 0 nil]) ((529 . 537)) nil (24319 65517 158282 39000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-doc-face)) . -529) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) 530) nil (24319 65517 158344 807000) 0 nil]) ((518 . 530)) nil (24319 65517 158370 529000) 0 nil]) ((510 . 518)) nil (24319 65517 158386 396000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-doc-face)) . -510) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) 511) nil (24319 65517 158449 184000) 0 nil]) ((506 . 511)) nil (24319 65517 158474 767000) 0 nil]) ((#("the image in cv2 format" 0 22 (fontified t face font-lock-doc-face) 22 23 (fontified t rear-nonsticky t face font-lock-doc-face)) . -506) (undo-tree-id9244 . -23) (undo-tree-id9245 . -23) (undo-tree-id9246 . -23) (undo-tree-id9247 . -17) (undo-tree-id9248 . -23) (undo-tree-id9249 . -17) (undo-tree-id9250 . -13) (undo-tree-id9251 . -17) (undo-tree-id9252 . -13) (undo-tree-id9253 . -10) (undo-tree-id9254 . -13) (undo-tree-id9255 . -10) (undo-tree-id9256 . -4) (undo-tree-id9257 . -10) (undo-tree-id9258 . -4) (undo-tree-id9259 . -4) (undo-tree-id9260 . -23) (undo-tree-id9261 . -23) (undo-tree-id9262 . -3) (undo-tree-id9263 . -3) (undo-tree-id9264 . -3) (undo-tree-id9265 . -23) (undo-tree-id9266 . -23) (undo-tree-id9267 . -23)) nil (24319 65517 158705 966000) 0 nil]) ((#("down" 0 4 (fontified t face font-lock-doc-face)) . -488) (492 . 507) 492) nil (24319 65517 158764 179000) 0 nil]) ((488 . 492)) nil (24319 65517 158783 120000) 0 nil]) ((#("image" 0 1 (fontified t face font-lock-doc-face) 1 5 (fontified t face font-lock-doc-face)) . -488) (undo-tree-id9268 . -5) (undo-tree-id9269 . -5) (undo-tree-id9270 . -5) (undo-tree-id9271 . -5)) nil (24319 65517 158833 626000) 0 nil]) ((nil rear-nonsticky nil 518 . 519) (nil fontified nil 493 . 519) (nil fontified nil 489 . 493) (nil fontified nil 488 . 489) (nil fontified nil 485 . 488) (485 . 519)) nil (24319 65517 158873 806000) 0 nil]) ((480 . 485) (t 24319 65488 506679 228000)) nil (24319 65517 158900 124000) 0 nil]) ((406 . 412)) nil (24319 65488 398104 186000) 0 nil]) ((#("down" 0 4 (fontified t)) . -391) (395 . 410) 395) nil (24319 65488 398152 453000) 0 nil]) ((389 . 395) (t 24319 65480 371911 915000)) nil (24319 65488 398185 912000) 0 nil]) ((#("down" 0 4 (fontified t)) . -1745) (1749 . 1764) 1749) nil (24319 65480 262326 125000) 0 nil]) ((1740 . 1749)) nil (24319 65480 262368 723000) 0 nil]) ((1737 . 1740)) nil (24319 65480 262392 734000) 0 nil]) ((#("down" 0 4 (fontified t)) . -1722) (1726 . 1741) 1726) nil (24319 65480 262418 27000) 0 nil]) ((1722 . 1726)) nil (24319 65480 262439 63000) 0 nil]) ((1715 . 1722)) nil (24319 65480 262455 362000) 0 nil]) ((1707 . 1715)) nil (24319 65480 262471 388000) 0 nil]) ((#("=" 0 1 (fontified t)) . -1707) (undo-tree-id9151 . -1) (#("=" 0 1 (fontified t)) . -1708) (undo-tree-id9152 . -1) (#(" " 0 1 (fontified t)) . -1709) (undo-tree-id9153 . -1) 1710) nil (24319 65480 262541 769000) 0 nil]) ((1706 . 1710)) nil (24319 65480 262569 785000) 0 nil]) ((nil fontified t 1695 . 1706) (#("downsampleW" 0 11 (fontified t)) . -1691) (1702 . 1717) 1702) nil (24319 65480 262596 821000) 0 nil]) ((1701 . 1702)) nil (24319 65480 262617 744000) 0 nil]) ((#("down" 0 4 (fontified t)) . -1691) (1695 . 1705) 1695) nil (24319 65480 262640 556000) 0 nil]) ((1691 . 1695)) nil (24319 65480 262659 746000) 0 nil]) ((#("s" 0 1 (fontified t)) . -1691) (undo-tree-id9154 . -1) 1692) nil (24319 65480 262688 85000) 0 nil]) ((1688 . 1692)) nil (24319 65480 262725 391000) 0 nil]) ((1683 . 1688) (t 24319 65458 663532 867000)) nil (24319 65480 262744 715000) 0 nil] [nil nil ((1429 . 1434) (t 24319 65458 663532 867000)) ((#("
    " 0 5 (fontified t)) . 1429) (undo-tree-id9139 . -5) (undo-tree-id9140 . 5) (undo-tree-id9141 . -5) (undo-tree-id9142 . -5) (undo-tree-id9143 . -5) (undo-tree-id9144 . -5) (undo-tree-id9145 . -5) (undo-tree-id9146 . -5) (undo-tree-id9147 . -5) (undo-tree-id9148 . -5) (undo-tree-id9149 . -5) (undo-tree-id9150 . -5)) (24319 65460 70149 319000) 0 nil]) ((1423 . 1427)) nil (24319 65460 71359 825000) 0 nil]) ((#("500" 0 3 (fontified t)) . 1423) (undo-tree-id9115 . -3) (undo-tree-id9116 . -3) (undo-tree-id9117 . -3) (undo-tree-id9118 . -3) (undo-tree-id9119 . -3) (undo-tree-id9120 . -3) (undo-tree-id9121 . -3) (undo-tree-id9122 . -3) (undo-tree-id9123 . -3) (undo-tree-id9124 . -3) (undo-tree-id9125 . -3) (undo-tree-id9126 . -3) (undo-tree-id9127 . -3) (undo-tree-id9128 . -3) (undo-tree-id9129 . -3) (undo-tree-id9130 . -3) (undo-tree-id9131 . -3) (undo-tree-id9132 . -3) (undo-tree-id9133 . -3) (undo-tree-id9134 . -3) (undo-tree-id9135 . -3) (undo-tree-id9136 . -3) (undo-tree-id9137 . -3) (undo-tree-id9138 . -3) 1426 (t 24319 65443 957953 511000)) nil (24319 65458 583188 222000) 0 nil]) ((nil fontified nil 757 . 758) (nil fontified nil 742 . 757) (nil fontified nil 741 . 742) (nil fontified nil 736 . 741) (nil fontified nil 734 . 736) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 722 . 732) (nil fontified nil 721 . 722) (nil fontified nil 720 . 721) (nil fontified nil 717 . 720) (nil fontified nil 716 . 717) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 711 . 714) (nil fontified nil 710 . 711) (nil fontified nil 709 . 710) (nil fontified nil 707 . 709) (nil fontified nil 706 . 707) (nil fontified nil 703 . 706) (nil fontified nil 702 . 703) (702 . 758)) nil (24319 65443 879420 391000) 0 nil]) ((701 . 702)) nil (24319 65443 879489 788000) 0 nil]) ((701 . 702)) ((#(" " 0 1 (fontified t)) . 701) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1)) (24319 65440 383151 616000) 0 nil]) ((696 . 701)) nil (24319 65440 88370 560000) 0 nil]) ((#("g" 0 1 (fontified t)) . -696) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (#("g" 0 1 (fontified t)) . -697) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (#("e" 0 1 (fontified t)) . -698) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) 699) nil (24319 65440 87120 623000) 0 nil]) ((697 . 699)) nil (24319 65440 87214 162000) 0 nil]) ((#("a" 0 1 (fontified t)) . -697) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) 698) nil (24319 65440 87278 865000) 0 nil]) ((697 . 698)) nil (24319 65440 87304 840000) 0 nil]) ((#("a" 0 1 (fontified t)) . -697) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) 698) nil (24319 65440 87367 497000) 0 nil]) ((694 . 698) (t 24319 65428 86407 506000)) nil (24319 65440 87396 895000) 0 nil]) ((693 . 694)) nil (24319 65428 7838 510000) 0 nil]) ((689 . 693)) nil (24319 65428 7877 479000) 0 nil]) ((682 . 689)) nil (24319 65428 7901 371000) 0 nil]) ((703 . 706)) nil (24319 65428 7919 949000) 0 nil]) ((#("v" 0 1 (fontified t)) . -703) (undo-tree-id9049 . -1) 704) nil (24319 65428 7967 589000) 0 nil]) ((689 . 704)) nil (24319 65428 7989 371000) 0 nil]) ((#("image = " 0 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t)) . -689) (undo-tree-id9050 . -8) (undo-tree-id9051 . -8)) nil (24319 65428 8026 598000) 0 nil]) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 689) (undo-tree-id9052 . -5) (undo-tree-id9053 . -5)) nil (24319 65428 8065 219000) 0 nil]) ((689 . 702)) nil (24319 65428 8084 802000) 0 nil]) ((682 . 689) (t 24319 65402 465140 390000)) nil (24319 65428 8104 56000) 0 nil]) ((664 . 682)) nil (24319 65402 384502 766000) 0 nil]) ((657 . 664) (t 24319 65396 308316 501000)) nil (24319 65402 384546 572000) 0 nil]) ((647 . 648)) nil (24319 65396 232773 847000) 0 nil]) ((#("E" 0 1 (fontified t)) . 647)) nil (24319 65396 232812 390000) 0 nil]) ((#("i" 0 1 (fontified t)) . -653) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (#("o" 0 1 (fontified t)) . -654) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -655) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) 656) nil (24319 65396 233130 880000) 0 nil]) ((#("Exc" 0 3 (fontified t)) . -647) (650 . 659) 650) nil (24319 65396 233209 606000) 0 nil]) ((647 . 650)) nil (24319 65396 233230 789000) 0 nil]) ((#("catch" 0 5 (fontified t)) . -647) (undo-tree-id9007 . -5) (undo-tree-id9008 . -5) (undo-tree-id9009 . -5) (undo-tree-id9010 . -5) (undo-tree-id9011 . -5) (undo-tree-id9012 . -5) (undo-tree-id9013 . -5)) nil (24319 65396 233308 128000) 0 nil]) ((#("  " 0 2 (fontified t)) . -659) (undo-tree-id9014 . -2) (undo-tree-id9015 . -2) (undo-tree-id9016 . -2) (undo-tree-id9017 . -2) (undo-tree-id9018 . -2) (undo-tree-id9019 . -2) (undo-tree-id9020 . -2) 661) nil (24319 65396 233400 140000) 0 nil]) ((657 . 661)) nil (24319 65396 233428 320000) 0 nil]) ((#("  " 0 2 (fontified t)) . -657) (undo-tree-id9021 . -2) (undo-tree-id9022 . -2) (undo-tree-id9023 . -2) (undo-tree-id9024 . -2) (undo-tree-id9025 . -2) (undo-tree-id9026 . -2) (undo-tree-id9027 . -2) (undo-tree-id9028 . -2) (undo-tree-id9029 . -2) (undo-tree-id9030 . -2) (undo-tree-id9031 . -2) (undo-tree-id9032 . -2) (undo-tree-id9033 . -2) (undo-tree-id9034 . -2) (undo-tree-id9035 . -2) (undo-tree-id9036 . -2) 659) nil (24319 65396 233587 709000) 0 nil]) ((#("  " 0 2 (fontified t)) . -659) (undo-tree-id9037 . -2) (undo-tree-id9038 . -2) (undo-tree-id9039 . -2) (undo-tree-id9040 . -2) (undo-tree-id9041 . -2) (undo-tree-id9042 . -2) (undo-tree-id9043 . -2) (undo-tree-id9044 . -2) (undo-tree-id9045 . -2) (undo-tree-id9046 . -2) (undo-tree-id9047 . -2) (undo-tree-id9048 . -2) 661) nil (24319 65396 233749 204000) 0 nil]) ((656 . 661) (t 24319 65381 743733 114000)) nil (24319 65396 233788 790000) 0 nil]) ((#(")" 0 1 (fontified t)) . 655) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1)) nil (24319 65381 665180 508000) 0 nil]) ((#("Exception(" 0 9 (fontified t face font-lock-type-face) 9 10 (fontified t)) . 653) (undo-tree-id8956 . -10) (undo-tree-id8957 . -9) (undo-tree-id8958 . -9) (undo-tree-id8959 . -9) (undo-tree-id8960 . -9) (undo-tree-id8961 . -9) (undo-tree-id8962 . -9) (undo-tree-id8963 . -9) (undo-tree-id8964 . -9) (undo-tree-id8965 . -9) (undo-tree-id8966 . -10) (undo-tree-id8967 . -9) (undo-tree-id8968 . -10) (undo-tree-id8969 . -10) (undo-tree-id8970 . -10) (undo-tree-id8971 . -10) (undo-tree-id8972 . -10) (undo-tree-id8973 . -10) (undo-tree-id8974 . -10) (undo-tree-id8975 . -10) (undo-tree-id8976 . -10)) nil (24319 65381 665406 595000) 0 nil]) ((665 . 666)) nil (24319 65381 665462 443000) 0 nil]) ((662 . 663)) nil (24319 65381 665480 876000) 0 nil]) ((#(" " 0 1 (fontified t)) . 662) (t 24319 65374 871929 677000)) nil (24319 65381 665501 403000) 0 nil]) ((#("  " 0 2 (fontified t)) . -669) (undo-tree-id8948 . -2) (undo-tree-id8949 . -2) (undo-tree-id8950 . -2) 671) nil (24319 65374 793365 972000) 0 nil]) ((667 . 671)) nil (24319 65374 793409 720000) 0 nil]) ((#("  " 0 2 (fontified t)) . -667) (undo-tree-id8951 . -2) 669) nil (24319 65374 793448 801000) 0 nil]) ((#("  " 0 2 (fontified t)) . -669) (undo-tree-id8952 . -2) 671) nil (24319 65374 793484 931000) 0 nil]) ((666 . 671)) nil (24319 65374 793505 334000) 0 nil]) ((665 . 666)) nil (24319 65374 793521 633000) 0 nil]) ((662 . 665)) nil (24319 65374 793537 640000) 0 nil]) ((#("Exc" 0 3 (fontified t)) . -653) (656 . 665) 656) nil (24319 65374 793561 191000) 0 nil]) ((653 . 656)) nil (24319 65374 793580 315000) 0 nil]) ((#("  " 0 2 (fontified t)) . -647) 655) nil (24319 65374 793599 716000) 0 nil]) ((654 . 655)) nil (24319 65374 793617 338000) 0 nil]) ((649 . 654)) nil (24319 65374 793632 701000) 0 nil]) ((642 . 649)) nil (24319 65374 793648 345000) 0 nil]) ((623 . 625) 619) nil (24319 65374 793667 629000) 0 nil]) ((614 . 618)) nil (24319 65374 793685 21000) 0 nil]) ((609 . 614)) nil (24319 65374 793719 645000) 0 nil]) ((937 . 944) (t 24319 65345 919757 838000)) nil (24319 65374 793739 576000) 0 nil]) ((932 . 937)) nil (24319 65345 842117 66000) 0 nil]) ((911 . 932)) nil (24319 65345 842156 148000) 0 nil]) ((#("Y" 0 1 (fontified t face font-lock-comment-face)) . -911) (undo-tree-id8924 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -912) (undo-tree-id8925 . -1) 913) nil (24319 65345 842224 778000) 0 nil]) ((910 . 913)) nil (24319 65345 842252 681000) 0 nil]) ((903 . 910) (#("      " 0 6 (fontified t)) . 903) (undo-tree-id8926 . -6) (undo-tree-id8927 . -6) (undo-tree-id8928 . -6) (undo-tree-id8929 . -6) (undo-tree-id8930 . -6) (undo-tree-id8931 . -6) (undo-tree-id8932 . -6) (undo-tree-id8933 . -6) (undo-tree-id8934 . -6) 909) nil (24319 65345 842356 624000) 0 nil]) ((#("
      cv2.putText(grayImg, \"No faces found!\", (10, 30), cv2.FONT_HERSHEY_SIMPLEX,
		  0.7, (0, 0, 255), 2)      
      cv2.imshow(\"Cannot Find\", grayImg)
      cv2.waitKey(0)
      cv2.destroyWindow(\"Cannot Find\")" 0 1 (fontified t) 1 7 (fontified t) 7 10 (fontified t) 10 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t) 17 26 (fontified t) 26 28 (fontified t) 28 29 (syntax-table #1# fontified t face font-lock-string-face) 29 44 (fontified t face font-lock-string-face) 44 45 (syntax-table #1# fontified t face font-lock-string-face) 45 47 (fontified t) 47 51 (fontified t) 51 58 (fontified t) 58 61 (fontified t) 61 73 (fontified t) 73 75 (fontified t) 75 77 (fontified t) 77 83 (fontified t) 83 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 94 (fontified t) 94 96 (fontified t) 96 98 (fontified t) 98 100 (fontified t) 100 101 (fontified t) 101 104 (fontified t) 104 106 (fontified t) 106 107 (rear-nonsticky t fontified t) 107 113 (fontified t) 113 114 (fontified t) 114 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (syntax-table #1# fontified t face font-lock-string-face) 132 143 (fontified t face font-lock-string-face) 143 144 (syntax-table #1# fontified t face font-lock-string-face) 144 146 (fontified t) 146 153 (fontified t) 153 154 (rear-nonsticky t fontified t) 154 155 (fontified t) 155 165 (fontified t) 165 176 (fontified t) 176 182 (fontified t) 182 200 (fontified t) 200 201 (syntax-table #1# fontified t face font-lock-string-face) 201 212 (fontified t face font-lock-string-face) 212 213 (syntax-table #1# fontified t face font-lock-string-face) 213 214 (rear-nonsticky t fontified t)) . -909) (undo-tree-id8935 . -124) (undo-tree-id8936 . -7) (undo-tree-id8937 . -19) (undo-tree-id8938 . -172) (undo-tree-id8939 . -29) (undo-tree-id8940 . -182) (undo-tree-id8941 . -214) (undo-tree-id8942 . -200) (undo-tree-id8943 . -214) (undo-tree-id8944 . 1) (undo-tree-id8945 . -214) (undo-tree-id8946 . 15) (undo-tree-id8947 . -200) 1123) nil (24319 65345 842505 853000) 0 nil]) ((903 . 909)) nil (24319 65345 842542 747000) 0 nil]) ((903 . 904) (t 24319 65319 93525 182000)) nil (24319 65345 842562 102000) 0 nil]) ((#("
" 0 1 (fontified t)) . 798)) nil (24319 65319 18889 945000) 0 nil]) ((#("    " 0 4 (fontified t)) . -798) (undo-tree-id8831 . -4) (undo-tree-id8832 . -4) (undo-tree-id8833 . -4) (undo-tree-id8834 . -4) (undo-tree-id8835 . -4) (undo-tree-id8836 . -4) (undo-tree-id8837 . -4) (undo-tree-id8838 . -4) (undo-tree-id8839 . -4) (undo-tree-id8840 . -4) (undo-tree-id8841 . -4) (undo-tree-id8842 . -4) (undo-tree-id8843 . -4) (undo-tree-id8844 . -4) (undo-tree-id8845 . -4) (undo-tree-id8846 . -4) (undo-tree-id8847 . -4) (undo-tree-id8848 . -4) (undo-tree-id8849 . -4) (undo-tree-id8850 . -4) (undo-tree-id8851 . -4) (undo-tree-id8852 . -4) (undo-tree-id8853 . -4) (undo-tree-id8854 . -4) (undo-tree-id8855 . -4) (undo-tree-id8856 . -4) (undo-tree-id8857 . -4) (undo-tree-id8858 . -4) (undo-tree-id8859 . -4) (undo-tree-id8860 . -4) (undo-tree-id8861 . -4) (undo-tree-id8862 . -4) (undo-tree-id8863 . -4) (undo-tree-id8864 . -4) (undo-tree-id8865 . -4) (undo-tree-id8866 . -4) (undo-tree-id8867 . -4) (undo-tree-id8868 . -4) (undo-tree-id8869 . -4) (undo-tree-id8870 . -4) (undo-tree-id8871 . -4) (undo-tree-id8872 . -4) (undo-tree-id8873 . -4) (undo-tree-id8874 . -4) (undo-tree-id8875 . -4) (undo-tree-id8876 . -4) (undo-tree-id8877 . -4) (undo-tree-id8878 . -4) (undo-tree-id8879 . -4) (undo-tree-id8880 . -4) (undo-tree-id8881 . -4) (undo-tree-id8882 . -4) 802) nil (24319 65319 19524 157000) 0 nil]) ((#("print (grayImg.shape)" 0 5 (fontified t face font-lock-keyword-face) 5 21 (fontified t)) . -802) (undo-tree-id8883 . -16) (undo-tree-id8884 . -16) (undo-tree-id8885 . -20) (undo-tree-id8886 . -19) (undo-tree-id8887 . -20) (undo-tree-id8888 . -20) (undo-tree-id8889 . -20) (undo-tree-id8890 . -20) (undo-tree-id8891 . -20) (undo-tree-id8892 . -20) (undo-tree-id8893 . -20) (undo-tree-id8894 . -20) (undo-tree-id8895 . -20) (undo-tree-id8896 . -20) (undo-tree-id8897 . -20) (undo-tree-id8898 . -20) (undo-tree-id8899 . -20) (undo-tree-id8900 . -20) (undo-tree-id8901 . -20) (undo-tree-id8902 . -20) (undo-tree-id8903 . -20) (undo-tree-id8904 . -21) (undo-tree-id8905 . -21) (undo-tree-id8906 . -20) (undo-tree-id8907 . -20) (undo-tree-id8908 . -20) (undo-tree-id8909 . -21) (undo-tree-id8910 . -20) (undo-tree-id8911 . -20) (undo-tree-id8912 . -20) (undo-tree-id8913 . -19) (undo-tree-id8914 . -20) (undo-tree-id8915 . -19) (undo-tree-id8916 . -19) (undo-tree-id8917 . -21) (undo-tree-id8918 . -21) (undo-tree-id8919 . 1) (undo-tree-id8920 . -21) (undo-tree-id8921 . 15) (undo-tree-id8922 . -7) (undo-tree-id8923 . -21) 823 (t 24319 65293 428259 321000)) nil (24319 65319 20007 844000) 0 nil]) ((818 . 822)) nil (24319 65293 315625 100000) 0 nil]) ((#("e" 0 1 (fontified t)) . 818) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (#("z" 0 1 (fontified t)) . 818) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (#("i" 0 1 (fontified t)) . 818) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (t 24319 65231 715025 117000)) nil (24319 65293 315915 747000) 0 nil]) ((#(")" 0 1 (fontified t)) . 821)) nil (24319 65231 637333 493000) 0 nil]) ((#("(" 0 1 (fontified t)) . 821) (undo-tree-id8806 . 1) (undo-tree-id8807 . -1) (t 24319 65211 436606 940000)) nil (24319 65231 637414 201000) 0 nil]) ((823 . 824)) nil (24319 65211 325969 517000) 0 nil]) ((802 . 823)) nil (24319 65211 326009 194000) 0 nil]) ((797 . 802) (#("    " 0 4 (fontified t)) . 797) (undo-tree-id8801 . -4) (undo-tree-id8802 . -4) (undo-tree-id8803 . -4) (undo-tree-id8804 . -4) (undo-tree-id8805 . -4) 801 (t 24319 65100 729783 373000)) nil (24319 65211 326131 446000) 0 nil] [nil nil ((1020 . 1021) (t 24319 65100 729783 373000)) ((#("
" 0 1 (fontified t)) . 1020) (undo-tree-id8800 . 1)) (24319 65133 279391 85000) 0 nil]) ((1106 . 1119)) nil (24319 65133 280453 288000) 0 nil]) ((#("self.faceSelectionWin" 0 4 (fontified t face font-lock-keyword-face) 4 21 (fontified t)) . 1106) (undo-tree-id8736 . -21) (undo-tree-id8737 . -21) (undo-tree-id8738 . -21) (undo-tree-id8739 . -21) (undo-tree-id8740 . -21) (undo-tree-id8741 . -21) (undo-tree-id8742 . -21) (undo-tree-id8743 . -18) (undo-tree-id8744 . -21) (undo-tree-id8745 . -18) (undo-tree-id8746 . -9) (undo-tree-id8747 . -18) (undo-tree-id8748 . -9) (undo-tree-id8749 . -5) (undo-tree-id8750 . -9) (undo-tree-id8751 . -5) (undo-tree-id8752 . -5) 1111) nil (24319 65100 617429 554000) 0 nil]) ((nil fontified nil 1127 . 1128) (nil fontified nil 1110 . 1127) (nil fontified nil 1106 . 1110) (nil fontified nil 1088 . 1106) (1088 . 1128)) nil (24319 65100 617516 417000) 0 nil]) ((1082 . 1088)) nil (24319 65100 617549 205000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1082) (undo-tree-id8753 . -2) (undo-tree-id8754 . -2) (undo-tree-id8755 . -2) (undo-tree-id8756 . -2) (undo-tree-id8757 . -2) (undo-tree-id8758 . -2) (undo-tree-id8759 . -2) (undo-tree-id8760 . -2) (undo-tree-id8761 . -2) (undo-tree-id8762 . -2) (undo-tree-id8763 . -2) (undo-tree-id8764 . -2) (undo-tree-id8765 . -2) (undo-tree-id8766 . -2) (undo-tree-id8767 . -2) (undo-tree-id8768 . -2) (undo-tree-id8769 . -2) (undo-tree-id8770 . -2) 1084) nil (24319 65100 617814 338000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1084) (undo-tree-id8771 . -2) (undo-tree-id8772 . -2) (undo-tree-id8773 . -2) (undo-tree-id8774 . -2) (undo-tree-id8775 . -2) (undo-tree-id8776 . -2) (undo-tree-id8777 . -2) (undo-tree-id8778 . -2) (undo-tree-id8779 . -2) (undo-tree-id8780 . -2) (undo-tree-id8781 . -2) (undo-tree-id8782 . -2) (undo-tree-id8783 . -2) 1086) nil (24319 65100 618035 782000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1086) (undo-tree-id8784 . -2) (undo-tree-id8785 . -2) (undo-tree-id8786 . -2) (undo-tree-id8787 . -2) (undo-tree-id8788 . -2) (undo-tree-id8789 . -2) (undo-tree-id8790 . -2) (undo-tree-id8791 . -2) 1088) nil (24319 65100 618187 864000) 0 nil]) ((1082 . 1088)) nil (24319 65100 618231 426000) 0 nil]) ((1082 . 1089) (#("      " 0 6 (fontified t)) . 1082) (undo-tree-id8792 . -6) (undo-tree-id8793 . -6) (undo-tree-id8794 . -6) (undo-tree-id8795 . -6) (undo-tree-id8796 . -6) (undo-tree-id8797 . -6) (undo-tree-id8798 . -6) (undo-tree-id8799 . -6) 1088) nil (24319 65100 618358 391000) 0 nil]) ((1081 . 1088) (t 24319 65081 640331 89000)) nil (24319 65100 618409 683000) 0 nil] [nil nil ((3667 . 3675) (#("    " 0 4 (fontified t)) . 3667) (undo-tree-id8730 . -4) (undo-tree-id8731 . -4) (t 24319 65081 640331 89000)) ((3667 . 3671) (#("        " 0 8 (fontified t)) . 3667) (undo-tree-id8732 . -8) (undo-tree-id8733 . -8) (undo-tree-id8734 . -8) (undo-tree-id8735 . -8)) (24319 65082 664849 804000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3667)) nil (24319 65082 666036 909000) 0 nil]) ((#("       " 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t)) . -3667) (undo-tree-id8721 . -7) (undo-tree-id8722 . -7) (undo-tree-id8723 . -7) (undo-tree-id8724 . -7) (undo-tree-id8725 . -7) (undo-tree-id8726 . -7) (undo-tree-id8727 . -7) (undo-tree-id8728 . -7) (undo-tree-id8729 . -7) 3674) nil (24319 65081 561740 832000) 0 nil]) ((#(" " 0 1 (fontified t)) . 3667) (#("
" 0 1 (fontified t)) . 3667) (t 24319 65075 472508 55000)) nil (24319 65081 561789 548000) 0 nil]) ((3699 . 3720) (t 24319 65025 921929 757000)) nil (24319 65075 337837 135000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1082)) ((1082 . 1083) (t 24319 65025 921929 757000)) (24319 65045 542750 682000) 0 nil]) ((#("      " 0 6 (fontified t)) . 1082) (undo-tree-id8715 . -6) (undo-tree-id8716 . -6) (undo-tree-id8717 . -6) (undo-tree-id8718 . -6)) nil (24319 65045 191557 647000) 0 nil]) ((#("c" 0 1 (fontified t)) . -1088) (undo-tree-id8719 . -1) (#("v" 0 1 (fontified t)) . -1089) (undo-tree-id8720 . -1) 1090) nil (24319 65025 843430 120000) 0 nil]) ((1088 . 1090)) nil (24319 65025 843458 733000) 0 nil]) ((1081 . 1088) (t 24319 64945 956224 153000)) nil (24319 65025 843481 618000) 0 nil]) ((1078 . 1081)) nil (24319 64945 877441 710000) 0 nil]) ((#("wait" 0 4 (fontified t)) . -1071) (1075 . 1082) 1075) nil (24319 64945 877489 493000) 0 nil]) ((1067 . 1075)) nil (24319 64945 877518 300000) 0 nil]) ((1060 . 1067) (t 24319 64932 402613 32000)) nil (24319 64945 877541 111000) 0 nil]) ((938 . 950)) nil (24319 64932 293898 64000) 0 nil]) ((935 . 938)) nil (24319 64932 293939 149000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -935) (undo-tree-id8705 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -936) (undo-tree-id8706 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -937) (undo-tree-id8707 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -938) (undo-tree-id8708 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -939) (undo-tree-id8709 . -1) 940) nil (24319 64932 294072 658000) 0 nil]) ((935 . 940)) nil (24319 64932 294125 16000) 0 nil]) ((#("RET/SPC to select, q/SEC to quit" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 23 (fontified t face font-lock-string-face) 23 32 (fontified t face font-lock-string-face)) . -935) (undo-tree-id8710 . -32) (undo-tree-id8711 . -32) 962) nil (24319 64932 294181 392000) 0 nil]) ((928 . 932)) nil (24319 64932 294212 417000) 0 nil]) ((#("u" 0 1 (fontified t)) . -928) (undo-tree-id8712 . -1) 929) nil (24319 64932 294254 818000) 0 nil]) ((925 . 929)) nil (24319 64932 294281 230000) 0 nil]) ((#("self.img500" 0 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t) 5 10 (fontified t) 10 11 (rear-nonsticky t fontified t)) . -925) (undo-tree-id8713 . -11) (undo-tree-id8714 . -11) 929) nil (24319 64932 294332 418000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1034)) nil (24319 64932 294359 782000) 0 nil]) ((nil fontified nil 1033 . 1034) (nil fontified nil 1031 . 1033) (nil fontified nil 1028 . 1031) (nil fontified nil 1027 . 1028) (nil fontified nil 1025 . 1027) (nil fontified nil 1023 . 1025) (nil fontified nil 1021 . 1023) (nil fontified nil 1016 . 1021) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1010 . 1014) (nil fontified nil 1004 . 1010) (nil fontified nil 1002 . 1004) (nil fontified nil 1000 . 1002) (nil fontified nil 988 . 1000) (nil fontified nil 985 . 988) (nil fontified nil 978 . 985) (nil fontified nil 974 . 978) (nil fontified nil 972 . 974) (nil fontified nil 971 . 972) (nil fontified nil 962 . 971) (nil fontified nil 941 . 962) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 936 . 938) (nil fontified nil 935 . 936) (nil fontified nil 930 . 935) (nil fontified nil 929 . 930) (nil fontified nil 925 . 929) (nil fontified nil 923 . 925) (nil fontified nil 922 . 923) (nil fontified nil 917 . 922) (nil fontified nil 916 . 917) (nil fontified nil 913 . 916) (913 . 1034)) nil (24319 64932 294551 421000) 0 nil]) ((906 . 913)) nil (24319 64932 294642 811000) 0 nil]) ((906 . 913) (t 24319 64896 48656 93000)) ((#("
      " 0 7 (fontified t)) . 906) (undo-tree-id8696 . 7) (undo-tree-id8697 . -7) (undo-tree-id8698 . -7) (undo-tree-id8699 . -7) (undo-tree-id8700 . -7) (undo-tree-id8701 . -7) (undo-tree-id8702 . -7) (undo-tree-id8703 . -7) (undo-tree-id8704 . -7)) (24319 64913 783773 180000) 0 nil]) ((#("grayI" 0 5 (fontified t)) . -939) (944 . 951) 944) nil (24319 64913 446731 893000) 0 nil]) ((939 . 944)) nil (24319 64895 934935 957000) 0 nil]) ((#("self.img500" 0 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t) 5 10 (fontified t) 10 11 (rear-nonsticky t fontified t)) . -939) (undo-tree-id8686 . -11) (undo-tree-id8687 . -4) (undo-tree-id8688 . -4) (undo-tree-id8689 . -4) (undo-tree-id8690 . -11) (undo-tree-id8691 . -4) (undo-tree-id8692 . -4) (undo-tree-id8693 . -11) (undo-tree-id8694 . -4) (undo-tree-id8695 . -11) 943 (t 24319 64890 656810 795000)) nil (24319 64895 935074 510000) 0 nil]) ((924 . 937)) nil (24319 64890 551048 364000) 0 nil]) ((#("self.faceSelectionWin" 0 4 (fontified t face font-lock-keyword-face) 4 21 (fontified t)) . 924) (undo-tree-id8681 . -21) (undo-tree-id8682 . -21) 929) nil (24319 64890 551125 262000) 0 nil]) ((nil fontified nil 958 . 959) (nil fontified nil 957 . 958) (nil fontified nil 952 . 957) (nil fontified nil 951 . 952) (nil fontified nil 947 . 951) (nil fontified nil 945 . 947) (nil fontified nil 928 . 945) (nil fontified nil 924 . 928) (nil fontified nil 923 . 924) (nil fontified nil 922 . 923) (nil fontified nil 921 . 922) (nil fontified nil 919 . 921) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (917 . 959)) nil (24319 64890 551206 485000) 0 nil]) ((#("imshow" 0 6 (fontified t)) . 917) (undo-tree-id8683 . -6) (undo-tree-id8684 . -6) (undo-tree-id8685 . -6) 923) nil (24319 64890 551277 91000) 0 nil] [nil nil ((nil fontified nil 964 . 965) (nil fontified nil 963 . 964) (nil fontified nil 958 . 963) (nil fontified nil 957 . 958) (nil fontified nil 953 . 957) (nil fontified nil 951 . 953) (nil fontified nil 934 . 951) (nil fontified nil 930 . 934) (nil fontified nil 929 . 930) (nil fontified nil 928 . 929) (nil fontified nil 927 . 928) (nil fontified nil 925 . 927) (nil fontified nil 924 . 925) (nil fontified nil 923 . 924) (923 . 965)) ((#("imshow(self.faceSelectionWin, self.img500)" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 11 (fontified nil face font-lock-keyword-face) 11 28 (fontified nil) 28 30 (fontified nil) 30 34 (fontified nil face font-lock-keyword-face) 34 35 (rear-nonsticky t fontified nil) 35 40 (fontified nil) 40 41 (rear-nonsticky t fontified nil) 41 42 (rear-nonsticky t fontified nil)) . 923) (undo-tree-id8672 . -42) (undo-tree-id8673 . -42) (undo-tree-id8674 . 1) (undo-tree-id8675 . -42) (undo-tree-id8676 . 36) (undo-tree-id8677 . -7) (undo-tree-id8678 . -42) (undo-tree-id8679 . -42) (undo-tree-id8680 . -42) (nil fontified t 964 . 965)) (24319 64883 814455 31000) 0 nil]) ((#("(" 0 1 (fontified t)) . 923) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . 1) (undo-tree-id8671 . -1)) nil (24319 64883 815476 86000) 0 nil]) ((923 . 924)) ((#("(" 0 1 (fontified t)) . 923)) (24319 64881 670805 143000) 0 nil]) ((#("ims" 0 3 (fontified t)) . -917) (920 . 926) 920) nil (24319 64881 222926 299000) 0 nil]) ((913 . 920)) nil (24319 64881 222511 775000) 0 nil]) ((906 . 913) (t 24319 64718 590747 711000)) nil (24319 64881 222533 727000) 0 nil]) ((#(" " 0 1 (fontified t)) . 5209) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1)) ((5209 . 5210) (t 24319 64718 590747 711000)) (24319 64748 499200 662000) 0 nil]) ((5209 . 5210) (t 24319 64703 497180 791000)) nil (24319 64748 51188 572000) 0 nil]) ((5171 . 5180)) nil (24319 64703 388290 268000) 0 nil]) ((#("Image" 0 5 (fontified t face font-lock-string-face)) . -5171) (undo-tree-id8642 . -5) (undo-tree-id8643 . -5) (undo-tree-id8644 . -5) (undo-tree-id8645 . -5) (t 24319 64697 30366 340000)) nil (24319 64703 388387 679000) 0 nil]) ((#("shape" 0 5 (fontified t)) . -5153) (undo-tree-id8635 . -5) (undo-tree-id8636 . -5) (undo-tree-id8637 . -5) (undo-tree-id8638 . -5) (undo-tree-id8639 . -5) (undo-tree-id8640 . -5) (undo-tree-id8641 . -5) 5158) nil (24319 64696 948581 136000) 0 nil]) ((5142 . 5153)) nil (24319 64696 948631 97000) 0 nil]) ((5130 . 5135)) nil (24319 64696 948653 870000) 0 nil]) ((5178 . 5180) 5192) nil (24319 64696 948675 977000) 0 nil]) ((5146 . 5148) 5160) nil (24319 64696 948715 692000) 0 nil]) ((nil rear-nonsticky nil 5189 . 5190) (nil fontified nil 5176 . 5190) (nil fontified nil 5174 . 5176) (nil fontified nil 5164 . 5174) (nil fontified nil 5163 . 5164) (nil fontified nil 5158 . 5163) (nil fontified nil 5157 . 5158) (nil fontified nil 5146 . 5157) (nil fontified nil 5144 . 5146) (nil fontified nil 5112 . 5144) (nil fontified nil 5089 . 5112) (nil fontified nil 5083 . 5089) (5083 . 5190)) nil (24319 64696 948777 140000) 0 nil]) ((5078 . 5083) (t 24319 64634 917148 480000)) nil (24319 64696 948814 564000) 0 nil] [nil nil ((#("  " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . -6281) (undo-tree-id8618 . -2) (undo-tree-id8619 . -2) (undo-tree-id8620 . -2) (undo-tree-id8621 . -2) (undo-tree-id8622 . -2) (undo-tree-id8623 . -2) (undo-tree-id8624 . -2) (undo-tree-id8625 . -2) (undo-tree-id8626 . -2) (undo-tree-id8627 . -2) (undo-tree-id8628 . -2) (undo-tree-id8629 . -2) (undo-tree-id8630 . -2) (undo-tree-id8631 . -2) (undo-tree-id8632 . -2) (t 24319 64634 917148 480000)) ((6281 . 6283)) (24319 64674 20555 457000) 0 nil]) ((nil rear-nonsticky nil 4240 . 4241) (4235 . 4241)) ((#("img500" 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 4235) (undo-tree-id8634 . -6) (nil rear-nonsticky t 4240 . 4241) (t 24319 64634 917148 480000)) (24319 64681 607895 126000) 0 nil]) ((#("img" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -4235) (undo-tree-id8588 . -3) (undo-tree-id8589 . -3) (undo-tree-id8590 . -3) (undo-tree-id8591 . -3) (undo-tree-id8592 . -3) (undo-tree-id8593 . -3) (undo-tree-id8594 . -3) (undo-tree-id8595 . -3)) nil (24319 64681 85122 691000) 0 nil]) ((nil rear-nonsticky nil 4042 . 4043) (nil fontified nil 4037 . 4043) (4037 . 4043)) nil (24319 64634 838559 608000) 0 nil]) ((#("img" 0 3 (fontified t)) . -4037) (undo-tree-id8596 . -3) (undo-tree-id8597 . -3) (undo-tree-id8598 . -3) (undo-tree-id8599 . -3) (undo-tree-id8600 . -3) (undo-tree-id8601 . -3) (undo-tree-id8602 . -3) (undo-tree-id8603 . -3)) nil (24319 64634 838713 236000) 0 nil]) ((nil rear-nonsticky nil 3943 . 3944) (nil fontified nil 3938 . 3944) (3938 . 3944)) nil (24319 64634 838767 531000) 0 nil]) ((#("img" 0 1 (fontified t) 1 3 (fontified t)) . -3938) (undo-tree-id8604 . -3) (undo-tree-id8605 . -3) (undo-tree-id8606 . -3) (undo-tree-id8607 . -3) (undo-tree-id8608 . -3) (undo-tree-id8609 . -3) (undo-tree-id8610 . -3) (undo-tree-id8611 . -3) (undo-tree-id8612 . -3)) nil (24319 64634 838904 461000) 0 nil]) ((nil rear-nonsticky nil 2052 . 2053) (nil fontified nil 2047 . 2053) (2047 . 2053)) nil (24319 64634 838958 772000) 0 nil]) ((#("img" 0 3 (fontified t)) . -2047) (undo-tree-id8613 . -3) (undo-tree-id8614 . -3)) nil (24319 64634 839008 4000) 0 nil]) ((1492 . 1495)) nil (24319 64634 839038 11000) 0 nil]) ((#("D" 0 1 (fontified t)) . -1492) (undo-tree-id8615 . -1) (#("o" 0 1 (fontified t)) . -1493) (undo-tree-id8616 . -1) (#("w" 0 1 (fontified t)) . -1494) (undo-tree-id8617 . -1) 1495) nil (24319 64634 839115 578000) 0 nil]) ((1492 . 1495)) nil (24319 64634 839155 42000) 0 nil] [nil nil ((#("." 0 1 (fontified t face font-lock-variable-name-face)) . 1484) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . 1484) (undo-tree-id8586 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . 1484) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 1484) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . 1484) (t 24319 64543 235779 0)) ((1484 . 1485) (1484 . 1485) (1484 . 1485) (1484 . 1485) (1484 . 1485) (t 24319 64609 221885 733000)) (24319 64609 103213 718000) 0 nil]) ((#("pass" 0 4 (fontified t face font-lock-keyword-face)) . -5068) (undo-tree-id8577 . -4) (undo-tree-id8578 . -4) (undo-tree-id8579 . -4) (undo-tree-id8580 . -4) (undo-tree-id8581 . -4) (undo-tree-id8582 . -4) (undo-tree-id8583 . -4) (undo-tree-id8584 . -4) 5072 (t 24319 64540 64869 979000)) nil (24319 64615 408484 976000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4964) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1)) nil (24319 64539 985034 535000) 0 nil]) ((#("    print (shape)" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 17 (fontified t)) . -4964) (undo-tree-id8560 . -17) (undo-tree-id8561 . -17) (undo-tree-id8562 . -17) (undo-tree-id8563 . -17) (undo-tree-id8564 . -12) (undo-tree-id8565 . -12) (undo-tree-id8566 . -12) (undo-tree-id8567 . -15) (undo-tree-id8568 . -15) (undo-tree-id8569 . -15) (undo-tree-id8570 . -17) (undo-tree-id8571 . -17) (undo-tree-id8572 . 1) (undo-tree-id8573 . -17) (undo-tree-id8574 . 7) (undo-tree-id8575 . -11) (undo-tree-id8576 . -17) 4981) nil (24319 64539 985228 556000) 0 nil]) ((#("e" 0 1 (fontified t)) . 4903) (#("p" 0 1 (fontified t)) . 4903) (#("a" 0 1 (fontified t)) . 4903) (#("h" 0 1 (fontified t)) . 4903) (#("s" 0 1 (fontified t)) . 4903)) nil (24319 64539 985294 932000) 0 nil]) ((4892 . 4903) (t 24319 64499 851023 795000)) nil (24319 64539 985326 649000) 0 nil]) ((#("shape = " 0 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t)) . -4900) (undo-tree-id8548 . -8) (undo-tree-id8549 . -5) (undo-tree-id8550 . -5) (undo-tree-id8551 . -5) (undo-tree-id8552 . -8) (undo-tree-id8553 . -5) (undo-tree-id8554 . -5) (undo-tree-id8555 . -5) (undo-tree-id8556 . -8) (undo-tree-id8557 . -8) 4908 (t 24319 64390 987147 312000)) nil (24319 64499 738352 493000) 0 nil]) ((4964 . 4965)) nil (24319 64390 909197 415000) 0 nil]) ((#("shape)" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t)) . 4931) (undo-tree-id8540 . -6) (undo-tree-id8541 . -6) (undo-tree-id8542 . -6) (undo-tree-id8543 . -6) (undo-tree-id8544 . -6) (undo-tree-id8545 . -6) (undo-tree-id8546 . -6) (undo-tree-id8547 . -6)) nil (24319 64390 909324 942000) 0 nil]) ((nil rear-nonsticky nil 4936 . 4937) (nil fontified nil 4931 . 4937) (nil fontified nil 4930 . 4931) (nil fontified nil 4929 . 4930) (nil fontified nil 4928 . 4929) (nil fontified nil 4925 . 4928) (nil fontified nil 4923 . 4925) (nil fontified nil 4911 . 4923) (nil fontified nil 4910 . 4911) (nil fontified nil 4905 . 4910) (nil fontified nil 4903 . 4905) (nil fontified nil 4902 . 4903) (nil fontified nil 4900 . 4902) (4900 . 4937) (t 24319 64331 678848 981000)) nil (24319 64390 909414 188000) 0 nil] [nil nil ((#("  " 0 2 (fontified t face font-lock-string-face)) . 5297) (undo-tree-id8533 . -2) (undo-tree-id8534 . -2) (undo-tree-id8535 . -2) (undo-tree-id8536 . -2) (undo-tree-id8537 . -2) (undo-tree-id8538 . -2) (undo-tree-id8539 . -2) (t 24319 64331 678848 981000)) ((5297 . 5299)) (24319 64375 517763 961000) 0 nil]) ((4900 . 4905) (t 24319 64320 462170 812000)) nil (24319 64376 813902 272000) 0 nil]) ((#("  " 0 2 (fontified t)) . -5051) (undo-tree-id8508 . -2)) nil (24319 64320 383283 710000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . -5043) (undo-tree-id8509 . -2) (undo-tree-id8510 . -2) (undo-tree-id8511 . -2) (undo-tree-id8512 . -2) 5045) nil (24319 64320 383383 607000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . -4987) (undo-tree-id8513 . -2) (undo-tree-id8514 . -2) (undo-tree-id8515 . -2) (undo-tree-id8516 . -2) 4989) nil (24319 64320 383479 321000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4979) 4977) nil (24319 64320 383521 623000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4950) (undo-tree-id8517 . -2) (undo-tree-id8518 . -2) (undo-tree-id8519 . -2) (undo-tree-id8520 . -2) (undo-tree-id8521 . -2) (undo-tree-id8522 . -2) (undo-tree-id8523 . -2) (undo-tree-id8524 . -2) (undo-tree-id8525 . -2) (undo-tree-id8526 . -2) 4952) nil (24319 64320 383674 773000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4933)) nil (24319 64320 383739 514000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4892) (undo-tree-id8527 . -2)) nil (24319 64320 383779 983000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4833) (undo-tree-id8528 . -2)) nil (24319 64320 383821 97000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4798)) nil (24319 64320 383848 3000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . -4741) (undo-tree-id8529 . -2) 4743) nil (24319 64320 383890 934000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . -4791) (undo-tree-id8530 . -2) 4793) nil (24319 64320 383938 187000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4733) 4731) nil (24319 64320 383972 500000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4702) (undo-tree-id8531 . -2) 4704) nil (24319 64320 384017 802000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4704) (undo-tree-id8532 . -2) 4706) nil (24319 64320 384065 83000) 0 nil]) ((4704 . 4706) 4700 (t 24319 64259 394922 952000)) nil (24319 64320 384103 621000) 0 nil]) ((6389 . 6392)) nil (24319 64259 264031 653000) 0 nil]) ((5089 . 5092)) nil (24319 64259 264043 489000) 0 nil]) ((#("###" 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5089) (undo-tree-id8497 . -3) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -2) (undo-tree-id8501 . -1) (undo-tree-id8502 . -2) (undo-tree-id8503 . -3) (undo-tree-id8504 . -2) (undo-tree-id8505 . -3) (undo-tree-id8506 . -3) (undo-tree-id8507 . -3) 5092) nil (24319 64259 264111 15000) 0 nil]) ((5089 . 5092) (t 24319 64239 863483 349000)) nil (24319 64259 264121 581000) 0 nil]) ((4961 . 4962)) nil (24319 64239 753486 191000) 0 nil]) ((4955 . 4956) (t 24319 64232 447696 122000)) nil (24319 64239 753532 450000) 0 nil]) ((4949 . 4960)) nil (24319 64232 337801 509000) 0 nil]) ((4942 . 4949) (t 24319 64222 177990 780000)) nil (24319 64232 337848 901000) 0 nil]) ((4933 . 4938) (t 24319 64219 804058 892000)) nil (24319 64222 65999 125000) 0 nil]) ((4933 . 4936)) nil (24319 64219 698234 415000) 0 nil]) ((#("rect" 0 4 (fontified t)) . -4933) (undo-tree-id8493 . -4) (undo-tree-id8494 . -4) (undo-tree-id8495 . -4) (undo-tree-id8496 . -4)) nil (24319 64219 698328 63000) 0 nil]) ((4928 . 4931)) nil (24319 64219 698360 967000) 0 nil]) ((nil rear-nonsticky nil 4934 . 4935) (nil fontified nil 4928 . 4935) (nil fontified nil 4927 . 4928) (nil fontified nil 4923 . 4927) (nil fontified nil 4917 . 4923) (nil fontified nil 4911 . 4917) (nil fontified nil 4907 . 4911) (nil fontified nil 4906 . 4907) (4906 . 4935)) nil (24319 64219 698407 924000) 0 nil]) ((4899 . 4906) (t 24319 64209 530353 664000)) nil (24319 64219 698439 697000) 0 nil]) ((4829 . 4838)) nil (24319 64209 450373 793000) 0 nil]) ((4801 . 4802) (t 24319 64206 102452 18000)) nil (24319 64209 450419 526000) 0 nil]) ((4824 . 4828)) nil (24319 64205 970503 326000) 0 nil]) ((4811 . 4824)) nil (24319 64205 970545 276000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -4811) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -4812) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) 4813) nil (24319 64205 970759 363000) 0 nil]) ((4807 . 4813)) nil (24319 64205 970810 430000) 0 nil]) ((4801 . 4807)) nil (24319 64205 970830 18000) 0 nil]) ((4801 . 4802)) nil (24319 64205 970846 392000) 0 nil] [nil nil ((4801 . 4802)) ((#("
" 0 1 (fontified t)) . 4801) (undo-tree-id8476 . 1)) (24319 64198 553886 526000) 0 nil]) ((nil fontified nil 4860 . 4861) (nil fontified nil 4835 . 4860) (nil fontified nil 4834 . 4835) (nil fontified nil 4830 . 4834) (nil fontified nil 4825 . 4830) (nil fontified nil 4814 . 4825) (nil fontified nil 4807 . 4814) (4807 . 4861)) nil (24319 64198 554574 366000) 0 nil]) ((4801 . 4807)) ((#("      " 0 6 (fontified t)) . 4801)) (24319 64195 614119 403000) 0 nil]) ((5122 . 5124) (t 24319 64086 469894 733000)) nil (24319 64195 210552 98000) 0 nil]) ((#(";" 0 1 (fontified t)) . -4920) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) 4921) nil (24319 64086 357982 465000) 0 nil]) ((4916 . 4921)) nil (24319 64086 358035 260000) 0 nil]) ((4909 . 4916) (t 24319 64083 489980 510000)) nil (24319 64086 358068 309000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . -4848) (undo-tree-id8415 . -2) (undo-tree-id8416 . -2) (undo-tree-id8417 . -2) (undo-tree-id8418 . -2) (undo-tree-id8419 . -2) (undo-tree-id8420 . -2) (undo-tree-id8421 . -2) 4850) nil (24319 64083 414026 832000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . -4908) (undo-tree-id8422 . -2) (undo-tree-id8423 . -2) (undo-tree-id8424 . -2) (undo-tree-id8425 . -2) (undo-tree-id8426 . -2) (undo-tree-id8427 . -2) (undo-tree-id8428 . -2) 4910) nil (24319 64083 414142 802000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4838) (undo-tree-id8429 . -2) (undo-tree-id8430 . -2) (undo-tree-id8431 . -2) (undo-tree-id8432 . -2) (undo-tree-id8433 . -2) 4836) nil (24319 64083 414229 571000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4807) (undo-tree-id8434 . -2) (undo-tree-id8435 . -2) (undo-tree-id8436 . -2) (undo-tree-id8437 . -2) (undo-tree-id8438 . -2) (undo-tree-id8439 . -2) (undo-tree-id8440 . -2) (undo-tree-id8441 . -2) (undo-tree-id8442 . -2) (undo-tree-id8443 . -2) (undo-tree-id8444 . -2) (undo-tree-id8445 . -2) (undo-tree-id8446 . -2) (undo-tree-id8447 . -2) 4809) nil (24319 64083 414383 214000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4918) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1)) nil (24319 64083 414440 228000) 0 nil]) ((#(" " 0 1 (fontified t)) . -4918) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) 4919) nil (24319 64083 414515 634000) 0 nil]) ((#(" " 0 1 (fontified t)) . 4918) (#("
" 0 1 (fontified t)) . 4918)) nil (24319 64083 414546 311000) 0 nil]) ((#("  " 0 2 (fontified t)) . -4918) (undo-tree-id8456 . -2) (undo-tree-id8457 . -2) (undo-tree-id8458 . -2) (undo-tree-id8459 . -2) (undo-tree-id8460 . -2) (undo-tree-id8461 . -2) 4920) nil (24319 64083 414620 906000) 0 nil]) ((#(" " 0 1 (fontified t)) . 4918) (#(" " 0 1 (fontified t)) . 4918) (#(" " 0 1 (fontified t)) . 4918) (#(" " 0 1 (fontified t)) . 4918) (#("
" 0 1 (fontified t)) . 4918)) nil (24319 64083 414662 324000) 0 nil]) ((#("        " 0 8 (fontified t)) . -4918) (undo-tree-id8462 . -8) (undo-tree-id8463 . -8) (undo-tree-id8464 . -8) (undo-tree-id8465 . -8) (undo-tree-id8466 . -8) (undo-tree-id8467 . -8) (undo-tree-id8468 . -8) (undo-tree-id8469 . -8) (undo-tree-id8470 . -8) 4926 (t 24319 64073 271274 654000)) nil (24319 64083 414789 110000) 0 nil]) ((4896 . 4905)) nil (24319 64073 181418 177000) 0 nil]) ((4875 . 4896)) nil (24319 64073 181434 390000) 0 nil]) ((4854 . 4875)) nil (24319 64073 181443 784000) 0 nil]) ((4846 . 4854)) nil (24319 64073 181451 142000) 0 nil]) ((#("        
        Arguments:
        - `self`:" 0 8 (fontified t face font-lock-doc-face) 8 39 (fontified t face font-lock-doc-face) 39 40 (fontified t face font-lock-doc-face) 40 43 (fontified t face font-lock-doc-face) 43 45 (fontified t face font-lock-doc-face)) . -4846) (undo-tree-id8397 . -45) (undo-tree-id8398 . -45) 4891) nil (24319 64073 181472 447000) 0 nil]) ((apply yas--snippet-revive 4809 4912 #7=#s(yas--snippet (#s(yas--field 1 (4813 . #<marker in no buffer>) (4826 . #<marker in no buffer>) nil nil nil t #4=#s(yas--field 2 (4827 . #<marker in no buffer>) (4831 . #<marker in no buffer>) nil (#3=#s(yas--mirror (4854 . #<marker in no buffer>) (4903 . #<marker in no buffer>) (let* ((indent (concat "
" (make-string (current-column) 32))) (args (mapconcat (quote (lambda (x) (if (not (string= (nth 0 x) #2="")) (concat "- " (char-to-string 96) (nth 0 x) (char-to-string 96) ":")))) (mapcar (quote (lambda (x) (mapcar (quote (lambda (x) (replace-regexp-in-string "[[:blank:]]*$" #2# (replace-regexp-in-string "^[[:blank:]]*" #2# x)))) x))) (mapcar (quote (lambda (x) (split-string x "="))) (split-string yas-text ","))) indent))) (if (string= args #2#) (make-string 3 34) (mapconcat (quote identity) (list #2# "Arguments:" args (make-string 3 34)) indent))) nil #6=#s(yas--exit (4912 . #<marker in no buffer>) nil) nil)) nil t #5=#s(yas--field 3 (4845 . #<marker in no buffer>) (4845 . #<marker in no buffer>) nil nil nil nil #3#))) #4# #5#) #6# 9 #<overlay in no buffer> #5# nil nil))) nil (24319 64073 181481 878000) 0 nil]) ((#("
        Arguments:
        - `sel`:
        \"\"\"" 0 31 (fontified t face font-lock-doc-face) 31 32 (fontified t face font-lock-doc-face) 32 34 (fontified t face font-lock-doc-face) 34 47 (fontified t face font-lock-doc-face) 47 48 (syntax-table #1# fontified t face font-lock-doc-face)) . 4903) (undo-tree-id8399 . -48) (undo-tree-id8400 . -48) (undo-tree-id8401 . -48) (4854 . 4903) (4830 . 4831) (#("
        Arguments:
        - `se`:
        \"\"\"" 0 31 (fontified t face font-lock-doc-face) 31 32 (fontified t face font-lock-doc-face) 32 33 (fontified t face font-lock-doc-face) 33 46 (fontified t face font-lock-doc-face) 46 47 (syntax-table #1# fontified t face font-lock-doc-face)) . 4901) (undo-tree-id8402 . -47) (undo-tree-id8403 . -47) (undo-tree-id8404 . -47) (4853 . 4901) (4829 . 4830) (#("
        Arguments:
        - `s`:
        \"\"\"" 0 31 (fontified t face font-lock-doc-face) 31 32 (fontified t face font-lock-doc-face) 32 45 (fontified t face font-lock-doc-face) 45 46 (syntax-table #1# fontified t face font-lock-doc-face)) . 4899) (undo-tree-id8405 . -46) (undo-tree-id8406 . -46) (undo-tree-id8407 . -46) (4852 . 4899) (4828 . 4829) (#("\"\"\"" 0 2 (fontified t face font-lock-doc-face) 2 3 (syntax-table #1# fontified t face font-lock-doc-face)) . 4897) (undo-tree-id8408 . -3) (undo-tree-id8409 . -3) (undo-tree-id8410 . -3) (4851 . 4897) (4827 . 4828)) nil (24319 64073 181543 550000) 0 nil]) ((4814 . 4826) (#("name" 0 4 (fontified nil face font-lock-function-name-face)) . 4814) (undo-tree-id8411 . -4) (4813 . 4814)) nil (24319 64073 181569 932000) 0 nil]) ((apply yas--take-care-of-redo 4809 4853 #7#) (4809 . 4853) (#("def" 0 3 (fontified nil)) . 4809) (4809 . 4812) (#("def" 0 3 (fontified t face font-lock-keyword-face)) . -4809) (undo-tree-id8412 . -3) 4812) nil (24319 64073 181590 335000) 0 nil]) ((4809 . 4812)) nil (24319 64073 181602 206000) 0 nil]) ((4802 . 4809) (#("      " 0 6 (fontified t)) . 4802) (undo-tree-id8413 . -6) 4808) nil (24319 64073 181615 928000) 0 nil]) ((4801 . 4808) (#("      " 0 6 (fontified t)) . 4801) (undo-tree-id8414 . -6) 4807) nil (24319 64073 181629 889000) 0 nil]) ((4800 . 4807) (t 24319 64044 538101 737000)) nil (24319 64073 181638 987000) 0 nil]) ((4680 . 4698)) nil (24319 64044 375068 863000) 0 nil]) ((4678 . 4680)) nil (24319 64044 375114 368000) 0 nil]) ((4671 . 4678)) nil (24319 64044 375141 193000) 0 nil]) ((4670 . 4671)) nil (24319 64044 375161 509000) 0 nil]) ((#("doPr" 0 4 (fontified t)) . -4655) (4659 . 4674) 4659) nil (24319 64044 375187 825000) 0 nil]) ((4652 . 4659)) nil (24319 64044 375211 774000) 0 nil]) ((#("i" 0 1 (fontified t)) . -4652) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -4653) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) 4654) nil (24319 64044 375400 595000) 0 nil]) ((4652 . 4654)) nil (24319 64044 375445 327000) 0 nil]) ((4647 . 4652) (#("    " 0 4 (fontified t)) . 4647) (undo-tree-id8389 . -4) (undo-tree-id8390 . -4) (undo-tree-id8391 . -4) (undo-tree-id8392 . -4) (undo-tree-id8393 . -4) (undo-tree-id8394 . -4) (undo-tree-id8395 . -4) (undo-tree-id8396 . -4) 4651) nil (24319 64044 375544 231000) 0 nil]) ((4646 . 4651) (t 24319 64026 5635 194000)) nil (24319 64044 375581 407000) 0 nil]) ((4382 . 4390)) nil (24319 64025 927606 238000) 0 nil]) ((#("doPre" 0 5 (fontified t)) . -4367) (4372 . 4387) 4372) nil (24319 64025 927658 927000) 0 nil]) ((4365 . 4372)) nil (24319 64025 927711 488000) 0 nil]) ((#(" " 0 1 (fontified t)) . -4365) (undo-tree-id8372 . -1) 4366) nil (24319 64025 927769 648000) 0 nil]) ((4365 . 4366) (t 24319 63985 817791 995000)) nil (24319 64025 927805 637000) 0 nil]) ((6769 . 6770)) nil (24319 63985 704746 188000) 0 nil]) ((#(")" 0 1 (fontified t)) . 6769) (undo-tree-id8342 . 1) (#(" " 0 1 (fontified t)) . 6769) (undo-tree-id8343 . -1) (undo-tree-id8344 . 1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (#(" " 0 1 (fontified t)) . 6769) (undo-tree-id8348 . 1) (#("
" 0 1 (fontified t)) . 6769) (undo-tree-id8349 . 1)) nil (24319 63985 704885 578000) 0 nil]) ((6765 . 6766)) nil (24319 63985 704930 658000) 0 nil]) ((#("t" 0 1 (fontified t)) . 6765) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1)) nil (24319 63985 704975 486000) 0 nil]) ((6760 . 6769)) nil (24319 63985 704997 539000) 0 nil]) ((6747 . 6760)) nil (24319 63985 705014 174000) 0 nil]) ((6705 . 6706)) nil (24319 63985 705030 66000) 0 nil]) ((6705 . 6746)) nil (24319 63985 705046 106000) 0 nil]) ((6705 . 6708)) nil (24319 63985 705061 440000) 0 nil]) ((6657 . 6698) (#(" " 0 1 (fontified t)) . 6657) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) 6658) nil (24319 63985 705138 344000) 0 nil]) ((6610 . 6651) (#(" " 0 1 (fontified t)) . 6610) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) 6611 (t 24319 63957 634603 242000)) nil (24319 63985 705290 765000) 0 nil]) ((6609 . 6611)) nil (24319 63957 521553 251000) 0 nil]) ((nil rear-nonsticky nil 6608 . 6609) (nil fontified nil 6608 . 6609) (nil fontified nil 6607 . 6608) (nil fontified nil 6592 . 6607) (nil fontified nil 6591 . 6592) (nil fontified nil 6586 . 6591) (6586 . 6609)) nil (24319 63957 521625 669000) 0 nil] [nil ([nil ([nil nil ((6563 . 6572) (t 24319 63937 81194 870000)) ((#(", faceROI" 0 9 (fontified t)) . 6563) (undo-tree-id8312 . -9) (undo-tree-id8313 . -6) (undo-tree-id8314 . -9) (undo-tree-id8315 . -8) (undo-tree-id8316 . -9) (undo-tree-id8317 . -9) (undo-tree-id8318 . -9) (undo-tree-id8319 . -9) (undo-tree-id8320 . -9) (undo-tree-id8321 . -9) (undo-tree-id8322 . -9) (undo-tree-id8323 . -6) (undo-tree-id8324 . -9) (undo-tree-id8325 . -6) (undo-tree-id8326 . -6) (undo-tree-id8327 . -6) (undo-tree-id8328 . -6) (t 24319 63945 430954 524000)) (24319 63945 321869 808000) 0 nil]) ((6556 . 6558)) ((#(", " 0 2 (fontified t)) . 6556)) (24319 63951 753920 230000) 0 nil]) ((nil rear-nonsticky nil 6555 . 6556) (6533 . 6556)) ((#("args[\"shape_predictor\"]" 0 5 (fontified nil) 5 6 (fontified nil syntax-table #1# face font-lock-string-face) 6 21 (fontified nil face font-lock-string-face) 21 22 (fontified nil syntax-table #1# face font-lock-string-face) 22 23 (fontified nil rear-nonsticky nil)) . 6533) (undo-tree-id8340 . -23) (undo-tree-id8341 . -23) (nil rear-nonsticky t 6555 . 6556)) (24319 63953 409474 144000) 0 nil]) ((#("
" 0 1 (fontified nil)) . 6036) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (#("
" 0 1 (fontified t)) . 6036) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1)) ((6036 . 6037) (6036 . 6037)) (24319 63953 745498 397000) 0 nil]) ((#("\"\"\"" 0 1 (syntax-table #1# fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . 6036) (undo-tree-id8299 . -3) (undo-tree-id8300 . -3) (undo-tree-id8301 . -3) (undo-tree-id8302 . -3) (undo-tree-id8303 . -3) (undo-tree-id8304 . -3) (undo-tree-id8305 . -3) (undo-tree-id8306 . -3) (undo-tree-id8307 . -3) (undo-tree-id8308 . -3) (undo-tree-id8309 . -3) (undo-tree-id8310 . -3) (undo-tree-id8311 . -3) (t 24319 63923 72598 105000)) nil (24319 63952 513412 700000) 0 nil]) ((#(" help=\"path to input image\")" 0 1 (fontified t) 1 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 7 (fontified t syntax-table #1# face font-lock-string-face) 7 13 (fontified t face font-lock-string-face) 13 15 (fontified t face font-lock-string-face) 15 20 (fontified t face font-lock-string-face) 20 26 (fontified t face font-lock-string-face) 26 27 (fontified t syntax-table #1# face font-lock-string-face) 27 28 (rear-nonsticky t fontified t)) . -4589) (undo-tree-id8271 . -28) (undo-tree-id8272 . -7) (undo-tree-id8273 . -7) (undo-tree-id8274 . -7) (undo-tree-id8275 . -7) (undo-tree-id8276 . -7) (undo-tree-id8277 . -7) (undo-tree-id8278 . -7) (undo-tree-id8279 . -7) (undo-tree-id8280 . -7) (undo-tree-id8281 . -28) (undo-tree-id8282 . -28) (undo-tree-id8283 . -7) (undo-tree-id8284 . 1) (undo-tree-id8285 . -28) (undo-tree-id8286 . -28) (undo-tree-id8287 . -28) (undo-tree-id8288 . -28) 4617) nil (24319 63922 994745 660000) 0 nil]) ((4579 . 4588) (t 24319 63911 885920 114000)) nil (24319 63922 994816 695000) 0 nil]) ((4344 . 4355)) nil (24319 63911 810828 313000) 0 nil]) ((#("args[\"shape_predictor\"]" 0 5 (fontified t) 5 6 (fontified t syntax-table #1# face font-lock-string-face) 6 21 (fontified t face font-lock-string-face) 21 22 (fontified t syntax-table #1# face font-lock-string-face) 22 23 (fontified t)) . 4568) (undo-tree-id8250 . -23) (undo-tree-id8251 . -4) (undo-tree-id8252 . -4) (undo-tree-id8253 . -4) (undo-tree-id8254 . -23) (undo-tree-id8255 . -4) (undo-tree-id8256 . -4) (undo-tree-id8257 . -11) (undo-tree-id8258 . -4) (undo-tree-id8259 . -11) (undo-tree-id8260 . -21) (undo-tree-id8261 . -11) (undo-tree-id8262 . -21) (undo-tree-id8263 . -21) (undo-tree-id8264 . -23) (undo-tree-id8265 . 1) (undo-tree-id8266 . -23) (undo-tree-id8267 . 19) (undo-tree-id8268 . -5) (undo-tree-id8269 . -23) (undo-tree-id8270 . -23) 4591 (t 24319 63898 237312 985000)) nil (24319 63911 811077 586000) 0 nil]) ((4530 . 4535)) nil (24319 63898 131230 934000) 0 nil]) ((nil fontified nil 4614 . 4615) (nil fontified nil 4613 . 4614) (nil fontified nil 4607 . 4613) (nil fontified nil 4602 . 4607) (nil fontified nil 4600 . 4602) (nil fontified nil 4594 . 4600) (nil fontified nil 4593 . 4594) (nil fontified nil 4592 . 4593) (nil fontified nil 4588 . 4592) (nil fontified nil 4587 . 4588) (nil fontified nil 4586 . 4587) (nil fontified nil 4585 . 4586) (nil fontified nil 4584 . 4585) (nil fontified nil 4569 . 4584) (nil fontified nil 4568 . 4569) (nil fontified nil 4563 . 4568) (nil fontified nil 4562 . 4563) (nil fontified nil 4548 . 4562) (nil fontified nil 4543 . 4548) (nil fontified nil 4539 . 4543) (nil fontified nil 4533 . 4539) (nil fontified nil 4532 . 4533) (nil fontified nil 4530 . 4532) (4530 . 4615)) nil (24319 63898 131356 442000) 0 nil]) ((4525 . 4530) (#("    " 0 4 (fontified t)) . 4525) (undo-tree-id8228 . -4) (undo-tree-id8229 . -4) (undo-tree-id8230 . -4) (undo-tree-id8231 . -4) (undo-tree-id8232 . -4) (undo-tree-id8233 . -4) (undo-tree-id8234 . -4) (undo-tree-id8235 . -4) 4529) nil (24319 63898 131510 596000) 0 nil]) ((4524 . 4529)) nil (24319 63898 131547 535000) 0 nil]) ((#("predictor = dlib.shape_predictor(args[\"shape_predictor\"]) help=\"path to input image\")" 0 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 9 (fontified t face font-lock-variable-name-face) 9 13 (fontified t) 13 18 (fontified t) 18 32 (fontified t) 32 33 (fontified t) 33 38 (fontified t) 38 39 (fontified t syntax-table #1# face font-lock-string-face) 39 54 (fontified t face font-lock-string-face) 54 55 (fontified t syntax-table #1# face font-lock-string-face) 55 56 (fontified t) 56 57 (rear-nonsticky t fontified t) 57 58 (fontified t) 58 62 (fontified t face font-lock-builtin-face) 62 63 (fontified t) 63 64 (fontified t syntax-table #1# face font-lock-string-face) 64 70 (fontified t face font-lock-string-face) 70 72 (fontified t face font-lock-string-face) 72 77 (fontified t face font-lock-string-face) 77 83 (fontified t face font-lock-string-face) 83 84 (fontified t syntax-table #1# face font-lock-string-face) 84 85 (fontified t rear-nonsticky t)) . 4675) (undo-tree-id8236 . -85) (undo-tree-id8237 . -85) (undo-tree-id8238 . -85) (undo-tree-id8239 . -64) (undo-tree-id8240 . -64) (undo-tree-id8241 . -85) (undo-tree-id8242 . -85) (undo-tree-id8243 . -85) (undo-tree-id8244 . -85) (undo-tree-id8245 . -85) (undo-tree-id8246 . 1) (undo-tree-id8247 . -85) (undo-tree-id8248 . -85) (undo-tree-id8249 . -85) 4760) nil (24319 63898 131713 723000) 0 nil]) ((nil rear-nonsticky nil 4759 . 4760) (nil fontified nil 4759 . 4760) (nil fontified nil 4758 . 4759) (nil fontified nil 4752 . 4758) (nil fontified nil 4747 . 4752) (nil fontified nil 4745 . 4747) (nil fontified nil 4739 . 4745) (nil fontified nil 4738 . 4739) (nil fontified nil 4737 . 4738) (nil fontified nil 4733 . 4737) (nil fontified nil 4732 . 4733) (nil fontified nil 4731 . 4732) (nil fontified nil 4730 . 4731) (nil fontified nil 4729 . 4730) (nil fontified nil 4714 . 4729) (nil fontified nil 4713 . 4714) (nil fontified nil 4708 . 4713) (nil fontified nil 4707 . 4708) (nil fontified nil 4693 . 4707) (nil fontified nil 4688 . 4693) (nil fontified nil 4684 . 4688) (nil fontified nil 4678 . 4684) (nil fontified nil 4677 . 4678) (nil fontified nil 4675 . 4677) (4675 . 4760)) nil (24319 63898 131841 69000) 0 nil]) ((4671 . 4675) 4669 (t 24319 63854 402574 764000)) nil (24319 63898 131899 28000) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 4669) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 4669) (#("\"" 0 1 (fontified t face font-lock-string-face syntax-table #1#)) . 4669)) ((4669 . 4670) (4669 . 4670) (4669 . 4670) (t 24319 63854 402574 764000)) (24319 63885 775083 217000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("  " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 4982)) ((4982 . 4984)) (24319 63885 771599 165000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t face font-lock-string-face)) . 4869)) ((4869 . 4871)) (24319 63885 768090 542000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4658 . 4665)) ((#("
      " 0 7 (fontified t)) . 4658) (undo-tree-id7678 . -7)) (24319 63885 765199 934000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4640 . 4648)) ((#("face ROI" 0 8 (fontified t face font-lock-doc-face)) . 4640) (undo-tree-id7680 . -8)) (24319 63885 761833 551000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("gace" 0 3 (fontified nil face font-lock-doc-face) 3 4 (fontified nil face font-lock-doc-face)) . 4640) (undo-tree-id8225 . -4) (undo-tree-id8226 . -4) (undo-tree-id8227 . -4)) ((4640 . 4644)) (24319 63885 758480 330000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#(" " 0 1 (fontified nil face font-lock-doc-face)) . 4644) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1)) ((4644 . 4645)) (24319 63885 754833 172000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4643 . 4645)) ((#("e " 0 1 (fontified t face font-lock-doc-face) 1 2 (fontified t face font-lock-doc-face)) . 4643) (undo-tree-id7681 . -2) (undo-tree-id7683 . -1) (undo-tree-id7685 . -2) (undo-tree-id7687 . -2) (undo-tree-id7689 . -2)) (24319 63885 751389 666000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4635 . 4643)) ((#("in a gac" 0 5 (fontified t face font-lock-doc-face) 5 8 (fontified t face font-lock-doc-face)) . 4635) (undo-tree-id7690 . -8) (undo-tree-id7692 . -5) (undo-tree-id7694 . -8) (undo-tree-id7696 . -8) (undo-tree-id7698 . -8) (undo-tree-id7700 . -8) (undo-tree-id7702 . -8)) (24319 63885 747150 304000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("in" 0 1 (fontified t face font-lock-doc-face) 1 2 (fontified t face font-lock-doc-face)) . 4635) (undo-tree-id8221 . -2) (undo-tree-id8222 . -2)) ((4635 . 4637)) (24319 63885 743130 392000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4628 . 4637)) ((#("ks within" 0 7 (fontified t face font-lock-doc-face) 7 8 (fontified t face font-lock-doc-face) 8 9 (fontified t face font-lock-doc-face)) . 4628) (undo-tree-id7704 . -9) (undo-tree-id7706 . -7) (undo-tree-id7708 . -7) (undo-tree-id7710 . -7) (undo-tree-id7712 . -7) (undo-tree-id7714 . -7) (undo-tree-id7716 . -7) (undo-tree-id7718 . -7) (undo-tree-id7720 . -9) (undo-tree-id7722 . -9)) (24319 63885 705964 622000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("d" 0 1 (fontified t face font-lock-doc-face)) . 4628) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1)) ((4628 . 4629)) (24319 63885 689004 995000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4619 . 4629)) ((#("e landmard" 0 9 (fontified t face font-lock-doc-face) 9 10 (fontified t face font-lock-doc-face)) . 4619) (undo-tree-id7724 . -10) (undo-tree-id7726 . -9) (undo-tree-id7728 . -9) (undo-tree-id7730 . -10) (undo-tree-id7732 . -10)) (24319 63885 672264 636000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("i" 0 1 (fontified t face font-lock-doc-face)) . 4619) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1)) ((4619 . 4620)) (24319 63885 655493 207000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4605 . 4620)) ((#("Detect the faci" 0 14 (fontified t face font-lock-doc-face) 14 15 (fontified t face font-lock-doc-face)) . 4605) (undo-tree-id7734 . -15) (undo-tree-id7736 . -14) (undo-tree-id7738 . -14) (undo-tree-id7740 . -14) (undo-tree-id7742 . -14) (undo-tree-id7744 . -14) (undo-tree-id7746 . -15) (undo-tree-id7748 . -15)) (24319 63885 638645 391000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4598 . 4605)) ((#("
      " 0 1 (fontified t face font-lock-doc-face) 1 7 (fontified t face font-lock-doc-face)) . 4598) (undo-tree-id7750 . -7) (undo-tree-id7752 . -7) (undo-tree-id7754 . -7) (undo-tree-id7756 . -7) (undo-tree-id7758 . -7) (undo-tree-id7760 . -7) (undo-tree-id7762 . -7) (undo-tree-id7764 . -7) (undo-tree-id7766 . -7) (undo-tree-id7768 . -7)) (24319 63885 621443 10000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4603 . 4605)) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . 4603)) (24319 63885 604215 994000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . 4603)) ((4603 . 4605)) (24319 63885 535418 892000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4601 . 4605)) ((#("    " 0 2 (fontified t face font-lock-doc-face) 2 4 (fontified t face font-lock-doc-face)) . 4601)) (24319 63885 518358 388000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4591 . 4595)) ((#("    " 0 4 (fontified t)) . 4591) (undo-tree-id7770 . -4) (undo-tree-id7772 . -4) (undo-tree-id7774 . -4) (undo-tree-id7776 . -4) (undo-tree-id7778 . -4) (undo-tree-id7780 . -4) (undo-tree-id7782 . -4) (undo-tree-id7784 . -4) (undo-tree-id7786 . -4) (undo-tree-id7788 . -4) (undo-tree-id7790 . -4) (undo-tree-id7792 . -4) (undo-tree-id7794 . -4) (undo-tree-id7796 . -4) (undo-tree-id7798 . -4) (undo-tree-id7800 . -4) (undo-tree-id7802 . -4) (undo-tree-id7804 . -4) (undo-tree-id7806 . -4) (undo-tree-id7808 . -4)) (24319 63885 501252 491000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4582 . 4586)) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 4582)) (24319 63885 484707 979000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("Det" 0 3 (fontified nil face font-lock-function-name-face)) . 4566) (4569 . 4584)) ((#("DetectLandmarks" 0 15 (fontified nil face font-lock-function-name-face)) . 4569) (undo-tree-id7809 . -15) (4566 . 4569)) (24319 63885 443334 657000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4566 . 4569)) ((#("Det" 0 3 (fontified t face font-lock-function-name-face)) . 4566) (undo-tree-id7810 . -3) (undo-tree-id7811 . -3) (undo-tree-id7813 . -3)) (24319 63885 424244 729000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("name" 0 4 (fontified t face font-lock-function-name-face)) . 4566)) ((4566 . 4570)) (24319 63885 404636 608000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("  " 0 2 (fontified nil)) . 4562) (undo-tree-id8203 . -2) (undo-tree-id8204 . -2) (undo-tree-id8205 . -2) (undo-tree-id8206 . -2) (undo-tree-id8207 . -2) (undo-tree-id8208 . -2) (undo-tree-id8209 . -2) (undo-tree-id8210 . -2) (undo-tree-id8211 . -2) (undo-tree-id8212 . -2) (undo-tree-id8213 . -2) (undo-tree-id8214 . -2) (undo-tree-id8215 . -2) (undo-tree-id8216 . -2) (4557 . 4558)) ((#("
" 0 1 (fontified t)) . 4557) (4562 . 4564)) (24319 63885 354042 761000) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil ([nil ([nil ([nil nil ((#("def" 0 3 (fontified nil)) . 4563) (undo-tree-id7569 . -3) (4563 . 4566) (#("def" 0 3 (fontified t face font-lock-keyword-face)) . -4563) (undo-tree-id7570 . -3) (undo-tree-id7572 . -3) (undo-tree-id7573 . -3) (undo-tree-id7575 . -3) (undo-tree-id7577 . -3) (undo-tree-id7579 . -3) (undo-tree-id7581 . -3) (undo-tree-id7583 . -3) 4566) ((4563 . 4566) (#("def" 0 3 (fontified nil)) . 4563) (4563 . 4566) (t 24319 63675 360728 472000)) (24319 63675 249851 825000) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil nil ((nil fontified t 4567 . 4570) (nil face font-lock-keyword-face 4567 . 4570) (#("def" 0 3 (fontified t face font-lock-keyword-face)) . -4563) (4566 . 4573) 4566) ((#("default" 0 4 (fontified nil) 4 7 (fontified nil face font-lock-keyword-face)) . 4566) (undo-tree-id7557 . -7) (undo-tree-id7558 . -7) (undo-tree-id7559 . -7) (undo-tree-id7560 . -7) (undo-tree-id7561 . -7) (undo-tree-id7562 . -7) (undo-tree-id7563 . -7) (undo-tree-id7564 . -7) (undo-tree-id7565 . -7) (undo-tree-id7566 . -7) (undo-tree-id7567 . -7) (4563 . 4566) (nil face nil 4567 . 4570)) (24319 63672 520899 388000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((4563 . 4566)) ((#("def" 0 3 (fontified t)) . 4563) (undo-tree-id7584 . -3) (undo-tree-id7585 . -3) (undo-tree-id7586 . -3) (undo-tree-id7587 . -3) (undo-tree-id7588 . -3)) (24319 63676 705923 357000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4558 . 4563) (#("    " 0 4 (fontified t)) . 4558) (undo-tree-id7544 . -4) (undo-tree-id7546 . -4) (undo-tree-id7548 . -4) (undo-tree-id7550 . -4) 4562) ((4558 . 4562) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 4558) (undo-tree-id7589 . -5) (undo-tree-id7590 . -5) (undo-tree-id7591 . -5) (undo-tree-id7592 . -5) (undo-tree-id7593 . -5) (undo-tree-id7594 . -5) (undo-tree-id7595 . -5) (undo-tree-id7596 . -5) (undo-tree-id7597 . -5) (undo-tree-id7598 . -5) (undo-tree-id7599 . -5) (undo-tree-id7600 . -5) (undo-tree-id7601 . -5) (undo-tree-id7602 . -5)) (24319 63677 153208 527000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4557 . 4562) (#("      " 0 6 (fontified t)) . 4557) (undo-tree-id7552 . -6) (undo-tree-id7554 . -6) (undo-tree-id7556 . -6) 4563 (t 24319 63668 935913 410000)) ((4557 . 4563) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 4557) (undo-tree-id7603 . -5) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -5) (undo-tree-id7618 . -5) (undo-tree-id7619 . -5)) (24319 63677 649802 980000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4536 . 4556)) ((#("lf.DetectLandmarks()" 0 2 (fontified t face font-lock-keyword-face) 2 20 (fontified t)) . 4536) (undo-tree-id7815 . -20)) (24319 63884 619924 965000) 0 (:visualizer [1 0 2 #<marker in no buffer>])]) ((#("r" 0 1 (fontified t)) . 4536) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1)) ((4536 . 4537)) (24319 63884 600854 163000) 0 (:visualizer [1 0 2 #<marker in no buffer>])]) ((4534 . 4537)) ((#("ser" 0 2 (fontified t) 2 3 (fontified t)) . 4534) (undo-tree-id7816 . -3) (undo-tree-id7817 . -2) (undo-tree-id7819 . -2) (undo-tree-id7821 . -3) (undo-tree-id7823 . -3)) (24319 63884 580921 577000) 0 (:visualizer [1 0 2 #<marker in no buffer>])]) ((4510 . 4524)) ((#("self.roi = roi" 0 4 (fontified t face font-lock-keyword-face) 4 14 (fontified t)) . 4510) (undo-tree-id7826 . -14)) (24319 63884 561543 795000) 0 (:visualizer [1 0 2 #<marker in no buffer>])]) ((4505 . 4510)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 4505) (undo-tree-id7827 . -5) (undo-tree-id7829 . -5) (undo-tree-id7831 . -5)) (24319 63884 542041 381000) 0 (:visualizer [1 0 2 #<marker in no buffer>])]) ((4497 . 4505)) ((#(" = image" 0 8 (fontified t)) . 4497) (undo-tree-id7832 . -8) (undo-tree-id7834 . -8) (undo-tree-id7836 . -8) (undo-tree-id7838 . -8)) (24319 63884 504304 914000) 0 (:visualizer [1 0 2 #<marker in no buffer>])] [nil nil ((1610 . 1611)) ((#(" " 0 1 (fontified t)) . 1610) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1)) (24319 63640 257757 875000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("m_" 0 1 (fontified t) 1 2 (fontified t)) . 1610)) ((1610 . 1612)) (24319 63883 808437 437000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("m_" 0 2 (fontified t)) . 1515)) ((1515 . 1517)) (24319 63883 760529 53000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("m_" 0 2 (fontified t)) . 861)) ((861 . 863)) (24319 63883 744615 22000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("m_" 0 2 (fontified t)) . 770)) ((770 . 772)) (24319 63883 728673 295000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("m_" 0 2 (fontified t)) . 565)) ((565 . 567)) (24319 63883 712454 780000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("m_" 0 2 (fontified t)) . 475) (undo-tree-id8200 . -2)) ((475 . 477)) (24319 63883 695442 757000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("_" 0 1 (fontified nil)) . 4504) (#("m" 0 1 (fontified t)) . 4504)) ((4504 . 4505) (4504 . 4505)) (24319 63883 679081 672000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4504 . 4511)) ((#("m_image" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t)) . 4504) (undo-tree-id7841 . -7) (undo-tree-id7843 . -7) (undo-tree-id7845 . -7) (undo-tree-id7847 . -7) (undo-tree-id7849 . -7) (undo-tree-id7851 . -7)) (24319 63883 662683 921000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4499 . 4504)) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 4499) (undo-tree-id7852 . -5) (undo-tree-id7854 . -5) (undo-tree-id7856 . -5) (undo-tree-id7858 . -5) (undo-tree-id7860 . -5) (undo-tree-id7862 . -5) (undo-tree-id7863 . -5) (undo-tree-id7865 . -5) (undo-tree-id7867 . -5) (undo-tree-id7869 . -5) (undo-tree-id7871 . -5)) (24319 63883 646570 368000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4494 . 4499)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 4494) (undo-tree-id7873 . -5) (undo-tree-id7875 . -5) (undo-tree-id7877 . -5) (undo-tree-id7879 . -5) (undo-tree-id7881 . -5) (undo-tree-id7883 . -5) (undo-tree-id7884 . -5) (undo-tree-id7886 . -1) (undo-tree-id7888 . -5) (undo-tree-id7890 . -5) (undo-tree-id7892 . -5) (undo-tree-id7894 . -5) (undo-tree-id7896 . -5)) (24319 63883 628639 547000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4469 . 4486)) ((#("the selected face" 0 17 (fontified t face font-lock-doc-face)) . 4469) (undo-tree-id7899 . -17)) (24319 63883 610839 494000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4448 . 4469)) ((#("rectangle containing " 0 21 (fontified t face font-lock-doc-face)) . 4448) (undo-tree-id7900 . -21) (undo-tree-id7902 . -21) (undo-tree-id7904 . -21)) (24319 63883 592429 331000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4435 . 4448)) ((#("- `roi`: the " 0 13 (fontified t face font-lock-doc-face)) . 4435) (undo-tree-id7905 . -13) (undo-tree-id7907 . -13) (undo-tree-id7909 . -13) (undo-tree-id7911 . -13)) (24319 63883 552009 838000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4430 . 4435)) ((#("
    " 0 1 (fontified t face font-lock-doc-face) 1 5 (fontified t face font-lock-doc-face)) . 4430) (undo-tree-id7913 . -5) (undo-tree-id7915 . -5) (undo-tree-id7917 . -5) (undo-tree-id7919 . -5) (undo-tree-id7921 . -5) (undo-tree-id7923 . -5)) (24319 63883 481973 625000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4399 . 4400)) ((#("i" 0 1 (fontified t face font-lock-doc-face)) . 4399)) (24319 63883 463874 428000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("I" 0 1 (fontified nil face font-lock-doc-face)) . 4399) (#("v" 0 1 (fontified nil face font-lock-doc-face)) . 4399) (#("c" 0 1 (fontified t face font-lock-doc-face)) . 4399)) ((4399 . 4400) (4399 . 4400) (4399 . 4400)) (24319 63883 438295 325000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((426 . 427)) ((#("i" 0 1 (fontified t face font-lock-doc-face)) . 426)) (24319 63883 421581 841000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("I" 0 1 (fontified nil face font-lock-doc-face)) . 426) (#("v" 0 1 (fontified nil face font-lock-doc-face)) . 426) (#("c" 0 1 (fontified t face font-lock-doc-face)) . 426)) ((426 . 427) (426 . 427) (426 . 427)) (24319 63883 404370 61000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . 4383) (undo-tree-id8198 . -2) (undo-tree-id8199 . -2)) ((4383 . 4385)) (24319 63883 388152 524000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t face font-lock-doc-face)) . 4385)) ((4385 . 4387)) (24319 63883 372194 692000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((nil rear-nonsticky nil 4437 . 4438) (nil fontified nil 4383 . 4385) (nil fontified nil 4385 . 4387) (nil fontified nil 4387 . 4398) (4383 . 4438)) ((#("    Arguments:
    - `cvImage`: the image in cv2 format" 0 2 (fontified nil face font-lock-doc-face) 2 4 (fontified nil face font-lock-doc-face) 4 15 (fontified nil face font-lock-doc-face) 15 22 (fontified nil face font-lock-doc-face) 22 23 (fontified nil face font-lock-doc-face) 23 24 (fontified nil face font-lock-doc-face) 24 25 (fontified nil face font-lock-doc-face) 25 29 (fontified nil face font-lock-doc-face) 29 54 (fontified nil face font-lock-doc-face) 54 55 (rear-nonsticky nil fontified nil face font-lock-doc-face)) . 4383) (undo-tree-id7924 . -4) (undo-tree-id7926 . -55) (undo-tree-id7928 . -55) (undo-tree-id7930 . -55) (undo-tree-id7932 . -55) (undo-tree-id7934 . -55) (undo-tree-id7936 . -22) (undo-tree-id7938 . -22) (undo-tree-id7940 . -22) (undo-tree-id7942 . -22) (undo-tree-id7943 . -22) (undo-tree-id7945 . -2) (undo-tree-id7947 . -2) (undo-tree-id7949 . -4) (undo-tree-id7951 . -55) (nil fontified t 4387 . 4398) (nil fontified t 4385 . 4387) (nil fontified t 4383 . 4385) (nil rear-nonsticky t 4437 . 4438)) (24319 63883 356094 787000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4378 . 4383)) ((#("
    " 0 1 (fontified t face font-lock-doc-face) 1 5 (fontified t face font-lock-doc-face)) . 4378) (undo-tree-id7953 . -5) (undo-tree-id7955 . -5) (undo-tree-id7957 . -5) (undo-tree-id7959 . -5) (undo-tree-id7961 . -5) (undo-tree-id7963 . -5) (undo-tree-id7965 . -5) (undo-tree-id7967 . -5) (undo-tree-id7969 . -5) (undo-tree-id7971 . -5) (undo-tree-id7972 . -5) (undo-tree-id7974 . -1) (undo-tree-id7976 . -5) (undo-tree-id7978 . -5) (undo-tree-id7980 . -5) (undo-tree-id7982 . -5) (undo-tree-id7984 . -5)) (24319 63883 339723 811000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4358 . 4368)) ((#("image, roi" 0 10 (fontified t)) . 4358)) (24319 63883 322499 438000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4309 . 4329)) ((#("n an ROI of an image" 0 20 (fontified t face font-lock-doc-face)) . 4309) (undo-tree-id7987 . -20)) (24319 63883 285111 216000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4288 . 4309)) ((#("Finds face landmars i" 0 21 (fontified t face font-lock-doc-face)) . 4288) (undo-tree-id7988 . -21) (undo-tree-id7990 . -21) (undo-tree-id7992 . -21)) (24319 63883 268258 194000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4285 . 4288)) ((#("
  " 0 1 (fontified t face font-lock-doc-face) 1 3 (fontified t face font-lock-doc-face)) . 4285) (undo-tree-id7993 . -3) (undo-tree-id7995 . -3) (undo-tree-id7997 . -3) (undo-tree-id7999 . -3)) (24319 63883 251877 196000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("FaceL" 0 5 (fontified nil face font-lock-type-face)) . 4250) (4255 . 4275)) ((#("FaceLandmarkDetector" 0 20 (fontified nil face font-lock-type-face)) . 4255) (4250 . 4255)) (24319 63883 235920 844000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4250 . 4255)) ((#("FaceL" 0 5 (fontified t face font-lock-type-face)) . 4250) (undo-tree-id8001 . -5) (undo-tree-id8003 . -5)) (24319 63883 220102 327000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("ClassName" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 9 (fontified t face font-lock-type-face)) . 4250) (undo-tree-id8195 . -2) (undo-tree-id8196 . -2) (undo-tree-id8197 . -2)) ((4250 . 4259)) (24319 63883 204340 605000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#(" " 0 1 (fontified t)) . 4249)) ((4249 . 4250)) (24319 63883 188549 121000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4249 . 4250)) ((#(" " 0 1 (fontified t)) . 4249) (undo-tree-id8004 . -1) (undo-tree-id8006 . -1)) (24319 63883 173093 969000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("class" 0 5 (fontified t)) . 4244)) ((4244 . 4249)) (24319 63883 155982 626000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4244 . 4249)) ((#("class" 0 5 (fontified t)) . 4244) (undo-tree-id8007 . -5) (undo-tree-id8009 . -5)) (24319 63883 140879 571000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t)) . 4252) (undo-tree-id8193 . -2) (undo-tree-id8194 . -2)) ((4252 . 4254)) (24319 63883 124703 152000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t)) . 4254) (undo-tree-id8182 . -2) (undo-tree-id8183 . -2) (undo-tree-id8184 . -2) (undo-tree-id8185 . -2) (undo-tree-id8186 . -2) (undo-tree-id8187 . -2) (undo-tree-id8188 . -2) (undo-tree-id8189 . -2) (undo-tree-id8190 . -2) (undo-tree-id8191 . -2) (undo-tree-id8192 . -2)) ((4254 . 4256)) (24319 63883 33844 989000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("  " 0 2 (fontified t)) . 4256) (undo-tree-id8173 . -2) (undo-tree-id8174 . -2) (undo-tree-id8175 . -2) (undo-tree-id8176 . -2) (undo-tree-id8177 . -2) (undo-tree-id8178 . -2) (undo-tree-id8179 . -2) (undo-tree-id8180 . -2) (undo-tree-id8181 . -2)) ((4256 . 4258)) (24319 63883 18234 786000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4244 . 4251) (#("      " 0 6 (fontified t)) . 4244)) ((4244 . 4250) (#("class C" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face font-lock-type-face)) . 4244) (undo-tree-id8011 . -6) (undo-tree-id8013 . -6) (undo-tree-id8015 . -5) (undo-tree-id8017 . -5) (undo-tree-id8019 . -5)) (24319 63883 2852 408000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((4243 . 4250)) ((#("
      " 0 1 (fontified t) 1 7 (fontified t)) . 4243) (undo-tree-id8021 . -7) (undo-tree-id8023 . -1) (undo-tree-id8025 . -1) (undo-tree-id8027 . -1) (undo-tree-id8029 . -1) (undo-tree-id8031 . -1) (undo-tree-id8033 . -1) (undo-tree-id8035 . -1) (undo-tree-id8037 . -1) (undo-tree-id8039 . -1) (undo-tree-id8041 . -1) (undo-tree-id8043 . -1) (undo-tree-id8045 . -1) (undo-tree-id8047 . -1) (undo-tree-id8049 . -1) (undo-tree-id8051 . -1) (undo-tree-id8053 . -1) (undo-tree-id8055 . -1) (undo-tree-id8057 . -1) (undo-tree-id8059 . -1) (undo-tree-id8061 . -1) (undo-tree-id8063 . -1) (undo-tree-id8065 . -1) (undo-tree-id8067 . -7)) (24319 63882 987103 162000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((#("class ClassName(object):
  \"\"\"
  \"\"\"

  def __init__(self, ):
    \"\"\"
    \"\"\"
    
    

" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t) 6 8 (fontified t) 8 9 (fontified t) 9 15 (fontified t) 15 16 (fontified t) 16 22 (fontified t face font-lock-builtin-face) 22 25 (fontified t) 25 27 (fontified t) 27 28 (syntax-table #1# fontified t face font-lock-string-face) 28 35 (fontified t face font-lock-string-face) 35 36 (syntax-table #1# fontified t face font-lock-string-face) 36 40 (fontified t) 40 43 (fontified t face font-lock-keyword-face) 43 44 (fontified t) 44 52 (fontified t face font-lock-function-name-face) 52 53 (fontified t) 53 57 (fontified t face font-lock-keyword-face) 57 66 (fontified t) 66 67 (syntax-table #1# fontified t face font-lock-doc-face) 67 74 (fontified t face font-lock-doc-face) 74 76 (fontified t face font-lock-doc-face) 76 77 (syntax-table #1# fontified t face font-lock-doc-face) 77 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t)) . 4244) (undo-tree-id8147 . -27) (undo-tree-id8148 . -27) (undo-tree-id8149 . -27) (undo-tree-id8150 . -27) (undo-tree-id8151 . -36) (undo-tree-id8152 . -27) (undo-tree-id8153 . -24) (undo-tree-id8154 . -24) (undo-tree-id8155 . -24) (undo-tree-id8156 . -66) (undo-tree-id8157 . -66) (undo-tree-id8158 . -66) (undo-tree-id8159 . -66) (undo-tree-id8160 . -77) (undo-tree-id8161 . -66) (undo-tree-id8162 . -40) (undo-tree-id8163 . -61) (undo-tree-id8164 . -40) (undo-tree-id8165 . -61) (undo-tree-id8166 . -40) (undo-tree-id8167 . -40) (undo-tree-id8168 . -40) (undo-tree-id8169 . -40) (undo-tree-id8170 . -40) (undo-tree-id8171 . -40) (undo-tree-id8172 . -40)) ((4244 . 4333)) (24319 63882 968528 144000) 0 (:visualizer [3 0 1 #<marker in no buffer>])] [nil nil ((4244 . 4250)) ((#("      " 0 6 (fontified t)) . 4244) (undo-tree-id7469 . -6) (undo-tree-id7470 . -6) (undo-tree-id7471 . -6) (undo-tree-id7472 . -6) (undo-tree-id7473 . -6) (undo-tree-id7474 . -6) (undo-tree-id7475 . -6) (undo-tree-id7476 . -6) (undo-tree-id7477 . -6) (undo-tree-id7478 . -6) (undo-tree-id7479 . -6)) (24319 63449 182880 957000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("class" 0 5 (fontified nil)) . 4244) (4244 . 4249) (#("class" 0 5 (fontified t)) . 4244)) ((4244 . 4249) (#("class" 0 5 (fontified nil)) . 4244) (4244 . 4249)) (24319 63881 908475 827000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((4244 . 4249)) ((#("class" 0 5 (fontified t)) . 4244)) (24319 63881 891905 123000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((6073 . 6074)) ((#("
" 0 1 (face font-lock-string-face)) . 6073)) (24319 63881 876755 421000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#(" " 0 1 (fontified nil)) . 6072) (#("
" 0 1 (fontified nil)) . 6072) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (#("
" 0 1 (fontified t)) . 6072) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1)) ((6072 . 6073) (6072 . 6073) (6072 . 6073)) (24319 63881 860566 547000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#("  print (faceROI)" 0 2 (fontified t) 2 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 17 (fontified t)) . 6072) (undo-tree-id8142 . -17)) ((6072 . 6089)) (24319 63881 838680 971000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((4245 . 4252) (#("      " 0 6 (fontified t)) . 4245)) ((4245 . 4251) (#("lass Cl" 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t)) . 4245)) (24319 63881 822421 936000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((4244 . 4251) (#("      " 0 6 (fontified t)) . 4244)) ((4244 . 4250) (#("c      " 0 1 (fontified t) 1 7 (fontified t)) . 4244) (undo-tree-id8069 . -7) (undo-tree-id8071 . -7) (undo-tree-id8073 . -7)) (24319 63881 784368 200000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((4243 . 4250)) ((#("l      " 0 1 (fontified t) 1 7 (fontified t)) . 4243) (undo-tree-id8074 . -7) (undo-tree-id8076 . -1) (undo-tree-id8078 . -1) (undo-tree-id8080 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8085 . -1) (undo-tree-id8087 . -7) (undo-tree-id8089 . -7)) (24319 63881 767399 872000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((6137 . 6144)) ((#("       " 0 7 (fontified t)) . 6137)) (24319 63881 753881 56000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((6121 . 6137)) ((#("quired=True,
	  " 0 7 (fontified t) 7 11 (fontified t face font-lock-constant-face) 11 13 (fontified t) 13 16 (fontified t)) . 6121) (undo-tree-id8090 . -16) (undo-tree-id8092 . -13) (undo-tree-id8094 . -16)) (24319 63881 740483 517000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((6103 . 6121)) ((#("-i\", \"--image\", re" 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t syntax-table #1# face font-lock-string-face) 3 5 (fontified t) 5 6 (fontified t syntax-table #1# face font-lock-string-face) 6 13 (fontified t face font-lock-string-face) 13 14 (fontified t syntax-table #1# face font-lock-string-face) 14 18 (fontified t)) . 6103) (undo-tree-id8096 . -18) (undo-tree-id8098 . -18) (undo-tree-id8100 . -18) (undo-tree-id8102 . -18) (undo-tree-id8104 . -18)) (24319 63881 726586 940000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((6098 . 6103)) ((#("ent(\"" 0 4 (fontified t) 4 5 (fontified t syntax-table #1# face font-lock-string-face)) . 6098) (undo-tree-id8105 . -5) (undo-tree-id8107 . -5) (undo-tree-id8109 . -5) (undo-tree-id8111 . -5) (undo-tree-id8113 . -5) (undo-tree-id8115 . -5)) (24319 63881 712401 907000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((6084 . 6098)) ((#("  ap.add_argum" 0 2 (fontified t) 2 14 (fontified t)) . 6084) (undo-tree-id8117 . -14) (undo-tree-id8119 . -14) (undo-tree-id8121 . -14) (undo-tree-id8123 . -14) (undo-tree-id8125 . -14) (undo-tree-id8127 . -14) (undo-tree-id8129 . -14) (undo-tree-id8131 . -14)) (24319 63881 698878 50000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#("# initialize dlib's face detector (HOG-based) and then create
  # the facial landmark predictor

  predictor = dlib.shape_predictor(args[\"shape_predictor\"])" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 17 (fontified t face font-lock-comment-face) 17 18 (fontified t syntax-table #1# face font-lock-comment-face) 18 43 (fontified t face font-lock-comment-face) 43 46 (fontified t face font-lock-comment-face) 46 49 (fontified t face font-lock-comment-face) 49 52 (fontified t face font-lock-comment-face) 52 56 (fontified t face font-lock-comment-face) 56 62 (fontified t face font-lock-comment-face) 62 64 (fontified t) 64 66 (fontified t face font-lock-comment-delimiter-face) 66 88 (fontified t face font-lock-comment-face) 88 95 (fontified t face font-lock-comment-face) 95 96 (fontified t face font-lock-comment-face) 96 97 (fontified t) 97 99 (fontified t) 99 101 (fontified t face font-lock-variable-name-face) 101 102 (fontified t face font-lock-variable-name-face) 102 108 (fontified t face font-lock-variable-name-face) 108 112 (fontified t) 112 117 (fontified t) 117 131 (fontified t) 131 132 (fontified t) 132 137 (fontified t) 137 138 (syntax-table #1# face font-lock-string-face fontified t) 138 153 (face font-lock-string-face fontified t) 153 154 (syntax-table #1# face font-lock-string-face fontified t) 154 155 (fontified t) 155 156 (rear-nonsticky t fontified t)) . 6084) (undo-tree-id8140 . -99) (undo-tree-id8141 . -156)) ((6084 . 6240)) (24319 63881 676380 538000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((3216 . 3222)) (("0, 153" . 3216)) (24319 63881 659957 772000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#("3, " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 3216)) ((3216 . 3219)) (24319 63881 643198 613000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((3212 . 3219)) ((#(", 153, " 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 3212) (undo-tree-id8132 . -7) (undo-tree-id8134 . -4) (undo-tree-id8136 . -4) (undo-tree-id8138 . -7)) (24319 63881 619847 364000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((3008 . 3014)) nil (24319 63872 909469 118000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#("2" 0 1 (fontified t)) . -3008) (undo-tree-id7417 . -1) 3009) nil (24319 63274 29207 560000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((3004 . 3009) (t 24319 63237 877321 369000)) nil (24319 63274 29231 359000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((3029 . 3030)) nil (24319 63237 798085 727000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#("S" 0 1 (fontified t)) . 3029) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1)) nil (24319 63237 798170 183000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((3227 . 3228)) nil (24319 63237 798200 588000) 0 (:visualizer [4 0 1 #<marker in no buffer>])]) ((#("S" 0 1 (fontified t)) . 3227) (t 24319 63224 298712 229000)) nil (24319 63237 798237 632000) 0 (:visualizer [4 0 1 #<marker in no buffer>])] [nil nil ((3235 . 3236) (t 24319 63224 298712 229000)) ((#("\\" 0 1 (fontified t)) . 3235) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1)) (24319 63226 229103 979000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((3233 . 3235)) nil (24319 63226 229389 421000) 0 (:visualizer [5 0 1 #<marker in no buffer>])]) ((3035 . 3037) (t 24319 63207 69208 177000)) nil (24319 63224 197924 155000) 0 (:visualizer [5 0 1 #<marker in no buffer>])]) ((3199 . 3200)) nil (24319 63206 990936 769000) 0 (:visualizer [5 0 1 #<marker in no buffer>])]) ((#("2" 0 1 (fontified t)) . 3199) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1)) nil (24319 63206 991020 777000) 0 (:visualizer [5 0 1 #<marker in no buffer>])]) ((#("2" 0 1 (fontified t)) . 3004)) nil (24319 63206 991051 803000) 0 (:visualizer [5 0 1 #<marker in no buffer>])]) ((3003 . 3004)) nil (24319 63206 991070 845000) 0 nil]) ((2999 . 3000)) nil (24319 63206 991087 209000) 0 nil]) ((#("3" 0 1 (fontified t)) . 2999) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1)) nil (24319 63206 991133 523000) 0 nil]) ((3195 . 3196)) nil (24319 63206 991155 422000) 0 nil]) ((#("3" 0 1 (fontified t)) . 3195)) nil (24319 63206 991171 370000) 0 nil]) ((3359 . 3360)) nil (24319 63206 991188 422000) 0 nil]) ((#("+" 0 1 (fontified t)) . 3359) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1)) nil (24319 63206 991231 854000) 0 nil]) ((#("        " 0 2 (fontified t) 2 8 (fontified t)) . -3174) (undo-tree-id7389 . -2) (undo-tree-id7390 . -2) (undo-tree-id7391 . -2) (undo-tree-id7392 . -2) (undo-tree-id7393 . -2) (undo-tree-id7394 . -2) (undo-tree-id7395 . -2) (undo-tree-id7396 . -2) (undo-tree-id7397 . -8) (undo-tree-id7398 . -8) (undo-tree-id7399 . -8) 3220) nil (24319 63206 991354 272000) 0 nil]) ((nil rear-nonsticky nil 3369 . 3370) (nil fontified nil 3369 . 3370) (nil fontified nil 3368 . 3369) (nil fontified nil 3367 . 3368) (nil fontified nil 3366 . 3367) (nil fontified nil 3349 . 3366) (nil fontified nil 3345 . 3349) (nil fontified nil 3344 . 3345) (nil fontified nil 3343 . 3344) (nil fontified nil 3340 . 3343) (nil fontified nil 3337 . 3340) (nil fontified nil 3330 . 3337) (nil fontified nil 3329 . 3330) (nil fontified nil 3324 . 3329) (nil fontified nil 3319 . 3324) (nil fontified nil 3316 . 3319) (nil fontified nil 3310 . 3316) (nil fontified nil 3285 . 3310) (nil fontified nil 3266 . 3285) (nil fontified nil 3262 . 3266) (nil fontified nil 3261 . 3262) (nil fontified nil 3260 . 3261) (nil fontified nil 3257 . 3260) (nil fontified nil 3254 . 3257) (nil fontified nil 3247 . 3254) (nil fontified nil 3246 . 3247) (nil fontified nil 3221 . 3246) (nil fontified nil 3212 . 3221) (nil fontified nil 3211 . 3212) (nil fontified nil 3200 . 3211) (nil fontified nil 3198 . 3200) (nil fontified nil 3186 . 3198) (nil fontified nil 3182 . 3186) (nil fontified nil 3176 . 3182) (3176 . 3370)) nil (24319 63206 991509 613000) 0 nil]) ((3167 . 3176) (#("        " 0 8 (fontified t)) . 3167) (undo-tree-id7400 . -8) (undo-tree-id7401 . -8) (undo-tree-id7402 . -8) (undo-tree-id7403 . -8) (undo-tree-id7404 . -8) (undo-tree-id7405 . -8) (undo-tree-id7406 . -8) (undo-tree-id7407 . -8) 3175) nil (24319 63206 991653 694000) 0 nil]) ((3166 . 3175)) nil (24319 63206 991684 989000) 0 nil]) ((3165 . 3166)) nil (24319 63206 991714 632000) 0 nil]) ((3163 . 3164)) nil (24319 63206 991730 469000) 0 nil]) ((#("-" 0 1 (fontified t)) . 3163)) nil (24319 63206 991746 744000) 0 nil]) ((nil fontified nil 3162 . 3163) (nil fontified nil 3145 . 3162) (nil fontified nil 3141 . 3145) (nil fontified nil 3140 . 3141) (nil fontified nil 3139 . 3140) (nil fontified nil 3136 . 3139) (nil fontified nil 3133 . 3136) (nil fontified nil 3126 . 3133) (nil fontified nil 3125 . 3126) (nil fontified nil 3120 . 3125) (nil fontified nil 3115 . 3120) (nil fontified nil 3112 . 3115) (nil fontified nil 3106 . 3112) (3106 . 3163)) nil (24319 63206 991810 256000) 0 nil]) ((3080 . 3106)) nil (24319 63206 991844 895000) 0 nil]) ((3079 . 3080)) nil (24319 63206 991860 410000) 0 nil]) ((#(")" 0 1 (rear-nonsticky t fontified t)) . 3079)) nil (24319 63206 991875 951000) 0 nil]) ((nil fontified nil 3081 . 3082) (nil fontified nil 3080 . 3081) (nil fontified nil 3079 . 3080) (nil fontified nil 3062 . 3079) (nil fontified nil 3058 . 3062) (nil fontified nil 3057 . 3058) (nil fontified nil 3056 . 3057) (nil fontified nil 3053 . 3056) (nil fontified nil 3050 . 3053) (nil fontified nil 3043 . 3050) (nil fontified nil 3042 . 3043) (3042 . 3082)) nil (24319 63206 992041 81000) 0 nil]) ((#("'" 0 1 (fontified t syntax-table #1# face font-lock-string-face)) . 3042)) nil (24319 63206 992074 746000) 0 nil]) ((3042 . 3043)) ((#("'" 0 1 (fontified t syntax-table #1# face font-lock-string-face)) . 3042) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1)) (24319 63142 88376 793000) 0 nil]) ((3035 . 3042)) nil (24319 63141 720857 437000) 0 nil]) ((3025 . 3035)) nil (24319 63141 720124 657000) 0 nil]) ((3016 . 3025)) nil (24319 63141 720144 806000) 0 nil]) ((3000 . 3016)) nil (24319 63141 720162 858000) 0 nil]) ((2994 . 3000)) nil (24319 63141 720180 566000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2978) (undo-tree-id7377 . -5)) nil (24319 63141 720224 879000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2978)) nil (24319 63141 720245 803000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 2978)) nil (24319 63141 720263 580000) 0 nil]) ((2972 . 2978) (t 24319 63050 246688 479000)) nil (24319 63141 720284 611000) 0 nil] [nil nil ((3105 . 3114) (t 24319 63050 246688 479000)) ((#("
        " 0 9 (fontified t)) . 3105) (undo-tree-id7373 . -9) (undo-tree-id7374 . 9) (undo-tree-id7375 . -9) (undo-tree-id7376 . -9)) (24319 63060 522263 713000) 0 nil]) ((#("pressed" 0 7 (fontified t)) . -3095) (3102 . 3112) 3102) nil (24319 63060 523316 358000) 0 nil]) ((3093 . 3102)) nil (24319 63050 165856 132000) 0 nil]) ((3065 . 3068)) nil (24319 63050 165880 132000) 0 nil]) ((#("<" 0 1 (fontified t face font-lock-string-face)) . -3065) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) 3066) nil (24319 63050 166605 373000) 0 nil]) ((3064 . 3066) (t 24319 63028 252314 666000)) nil (24319 63050 166624 426000) 0 nil]) ((2972 . 2973) (t 24319 63026 379367 989000)) nil (24319 63028 171069 596000) 0 nil]) ((2993 . 2994)) nil (24319 63026 268092 528000) 0 nil]) ((nil fontified t 2992 . 2993) (nil rear-nonsticky t 2992 . 2993) (nil fontified t 2988 . 2992) (nil face font-lock-keyword-face 2988 . 2992) (#("elif " 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t rear-nonsticky t)) . -2978) (2983 . 2998) 2983) nil (24319 63026 268159 888000) 0 nil]) ((#("      " 0 6 (fontified t)) . -2978) (undo-tree-id7295 . -6) (undo-tree-id7296 . -6) (undo-tree-id7297 . -6) 2989) nil (24319 63026 268247 124000) 0 nil]) ((nil rear-nonsticky nil 2988 . 2989) (nil fontified nil 2988 . 2989) (nil fontified nil 2984 . 2988) (nil fontified nil 2978 . 2984) (2978 . 2989)) nil (24319 63026 268288 132000) 0 nil]) ((2972 . 2978)) nil (24319 63026 268313 664000) 0 nil]) ((2972 . 2979) (#("      " 0 6 (fontified t)) . 2972) (undo-tree-id7298 . -6) (undo-tree-id7299 . -6) (undo-tree-id7300 . -6) (undo-tree-id7301 . -6) (undo-tree-id7302 . -6) (undo-tree-id7303 . -6) (undo-tree-id7304 . -6) (undo-tree-id7305 . -6) 2978) nil (24319 63026 268414 95000) 0 nil]) ((2971 . 2978)) nil (24319 63026 268447 890000) 0 nil]) ((#("      elif " 0 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t)) . 3062) (undo-tree-id7306 . -11) (undo-tree-id7307 . -6) (undo-tree-id7308 . -6) (undo-tree-id7309 . -6) (undo-tree-id7310 . -6) (undo-tree-id7311 . -6) (undo-tree-id7312 . -6) (undo-tree-id7313 . -6) (undo-tree-id7314 . -6) (undo-tree-id7315 . -6) (undo-tree-id7316 . -6) (undo-tree-id7317 . -6) (undo-tree-id7318 . -6) (undo-tree-id7319 . -6) (undo-tree-id7320 . -6) (undo-tree-id7321 . -6) (undo-tree-id7322 . -7) (undo-tree-id7323 . -6) (undo-tree-id7324 . -7) (undo-tree-id7325 . -8) (undo-tree-id7326 . -7) (undo-tree-id7327 . -8) (undo-tree-id7328 . -9) (undo-tree-id7329 . -8) (undo-tree-id7330 . -9) (undo-tree-id7331 . -10) (undo-tree-id7332 . -9) (undo-tree-id7333 . -10) (undo-tree-id7334 . -11) (undo-tree-id7335 . -11) (undo-tree-id7336 . -11) (undo-tree-id7337 . -10) (undo-tree-id7338 . -11) (undo-tree-id7339 . -11) (undo-tree-id7340 . -11) (undo-tree-id7341 . -11) (undo-tree-id7342 . -11) (undo-tree-id7343 . -11) (undo-tree-id7344 . -11) (undo-tree-id7345 . -11) (undo-tree-id7346 . -11)) nil (24319 63026 268860 420000) 0 nil]) ((3068 . 3073)) nil (24319 63026 268940 305000) 0 nil]) ((#("  " 0 2 (fontified t)) . -3068) (undo-tree-id7347 . -2) (undo-tree-id7348 . -2) (undo-tree-id7349 . -2) (undo-tree-id7350 . -2) (undo-tree-id7351 . -2) (undo-tree-id7352 . -2) (undo-tree-id7353 . -2) (undo-tree-id7354 . -2) (undo-tree-id7355 . -2) (undo-tree-id7356 . -2) (undo-tree-id7357 . -2) (undo-tree-id7358 . -2) (undo-tree-id7359 . -2) (undo-tree-id7360 . -2) (undo-tree-id7361 . -2) 3070) nil (24319 63026 269092 923000) 0 nil]) ((3061 . 3070) (#("        " 0 8 (fontified t)) . 3061) (undo-tree-id7362 . -8) (undo-tree-id7363 . -8) (undo-tree-id7364 . -8) (undo-tree-id7365 . -8) (undo-tree-id7366 . -8) (undo-tree-id7367 . -8) (undo-tree-id7368 . -8) (undo-tree-id7369 . -8) 3069) nil (24319 63026 269215 121000) 0 nil]) ((3060 . 3069) (t 24319 52655 240038 131000)) nil (24319 63026 269252 432000) 0 nil]) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t)) . -2905) (undo-tree-id7263 . -5) (undo-tree-id7264 . -4) (undo-tree-id7265 . -4) (undo-tree-id7266 . -4) (undo-tree-id7267 . -4) (undo-tree-id7268 . -4) (undo-tree-id7269 . -4) (undo-tree-id7270 . -4) (undo-tree-id7271 . -4) (undo-tree-id7272 . -4) (undo-tree-id7273 . -4) (undo-tree-id7274 . -4) (undo-tree-id7275 . -4) (undo-tree-id7276 . -4) (undo-tree-id7277 . -4) (undo-tree-id7278 . -4) (undo-tree-id7279 . -4) (undo-tree-id7280 . -4) (undo-tree-id7281 . -4) (undo-tree-id7282 . -4) (undo-tree-id7283 . -4) (undo-tree-id7284 . -4) (undo-tree-id7285 . -4) (undo-tree-id7286 . -4) (undo-tree-id7287 . -4) (undo-tree-id7288 . -4) (undo-tree-id7289 . -5) (undo-tree-id7290 . -4) (undo-tree-id7291 . -4) (undo-tree-id7292 . -5) (undo-tree-id7293 . -4) (undo-tree-id7294 . -5) 2910 (t 24319 52630 947730 156000)) nil (24319 52655 159965 40000) 0 nil]) ((2947 . 2948) (t 24319 52608 844359 821000)) nil (24319 52630 872279 691000) 0 nil]) ((3061 . 3062)) nil (24319 52608 768937 637000) 0 nil]) ((3047 . 3051) (t 24319 52583 569079 846000)) nil (24319 52608 768981 877000) 0 nil]) ((2081 . 2082) (t 24319 52580 88179 8000)) nil (24319 52583 457732 909000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2081) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (#("\\" 0 1 (fontified t face font-lock-string-face)) . 2081) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1)) nil (24319 52580 11312 671000) 0 nil]) ((#("Please Select a single face\\n " 0 5 (fontified t face font-lock-string-face) 5 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 21 (fontified t face font-lock-string-face) 21 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 30 (fontified t face font-lock-string-face)) . 2064) (undo-tree-id7204 . -30) (undo-tree-id7205 . -30) (undo-tree-id7206 . -30) (undo-tree-id7207 . -28) (undo-tree-id7208 . -30) (undo-tree-id7209 . -28) (undo-tree-id7210 . -27) (undo-tree-id7211 . -28) (undo-tree-id7212 . -27) (undo-tree-id7213 . -27) (undo-tree-id7214 . -27) (undo-tree-id7215 . -27) (undo-tree-id7216 . -27) (undo-tree-id7217 . -27) (undo-tree-id7218 . -27) (undo-tree-id7219 . -27) (undo-tree-id7220 . -27) (undo-tree-id7221 . -27) (undo-tree-id7222 . -27) (undo-tree-id7223 . -27) (undo-tree-id7224 . -27) (undo-tree-id7225 . -27) (undo-tree-id7226 . -27) (undo-tree-id7227 . -27) (undo-tree-id7228 . -27) (undo-tree-id7229 . -27) (undo-tree-id7230 . -27) (undo-tree-id7231 . -27) (undo-tree-id7232 . -27) (undo-tree-id7233 . -27) (undo-tree-id7234 . -27) (undo-tree-id7235 . -27) (undo-tree-id7236 . -27) (undo-tree-id7237 . -29) (undo-tree-id7238 . -27) (undo-tree-id7239 . -29) (undo-tree-id7240 . -30) (undo-tree-id7241 . -29) (undo-tree-id7242 . -30) (undo-tree-id7243 . -30) (undo-tree-id7244 . -30) (undo-tree-id7245 . -30) (undo-tree-id7246 . -30) (undo-tree-id7247 . -28) (undo-tree-id7248 . -30) (undo-tree-id7249 . -28) (undo-tree-id7250 . -23) (undo-tree-id7251 . -28) (undo-tree-id7252 . -23) (undo-tree-id7253 . -16) (undo-tree-id7254 . -23) (undo-tree-id7255 . -16) (undo-tree-id7256 . -14) (undo-tree-id7257 . -16) (undo-tree-id7258 . -14) (undo-tree-id7259 . -7) (undo-tree-id7260 . -14) (undo-tree-id7261 . -7) (undo-tree-id7262 . -7) (t 24319 52551 569991 417000)) nil (24319 52580 11917 110000) 0 nil]) ((2101 . 2113)) nil (24319 52551 490532 803000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . 2101)) nil (24319 52551 490575 544000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 2093) (#("s" 0 1 (fontified t face font-lock-string-face)) . 2093) (#("e" 0 1 (fontified t face font-lock-string-face)) . 2093) (#("r" 0 1 (fontified t face font-lock-string-face)) . 2093) (#("p" 0 1 (fontified t face font-lock-string-face)) . 2093) (#(" " 0 1 (fontified t face font-lock-string-face)) . 2093) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . 2093) (#("n" 0 1 (fontified t face font-lock-string-face)) . 2093) (#("a" 0 1 (fontified t face font-lock-string-face)) . 2093) (#(" " 0 1 (fontified t face font-lock-string-face)) . 2093) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1)) nil (24319 52551 490732 504000) 0 nil]) ((2092 . 2093)) nil (24319 52551 490782 632000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -2092) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) 2093) nil (24319 52551 490832 316000) 0 nil]) ((2091 . 2093) (t 24319 52527 901665 662000)) nil (24319 52551 490861 109000) 0 nil]) ((2112 . 2124)) nil (24319 52527 827223 287000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2112) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) 2113) nil (24319 52527 827322 960000) 0 nil]) ((2109 . 2113)) nil (24319 52527 827361 227000) 0 nil]) ((2103 . 2105)) nil (24319 52527 827386 332000) 0 nil]) ((#("E" 0 1 (fontified t face font-lock-string-face)) . 2102) (#("T" 0 1 (fontified t face font-lock-string-face)) . 2102) (#("N" 0 1 (fontified t face font-lock-string-face)) . 2102) (#("E" 0 1 (fontified t face font-lock-string-face)) . 2102)) nil (24319 52527 827427 715000) 0 nil]) ((2107 . 2111)) nil (24319 52527 827462 400000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . -2107) (undo-tree-id7174 . -1) 2108) nil (24319 52527 827504 294000) 0 nil]) ((2091 . 2108) (t 24319 52483 575928 386000)) nil (24319 52527 827538 492000) 0 nil]) ((3052 . 3053)) nil (24319 52483 500412 262000) 0 nil]) ((3032 . 3042)) nil (24319 52483 500454 356000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . -3032) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) 3033) nil (24319 52483 500530 77000) 0 nil]) ((3028 . 3033)) nil (24319 52483 500560 949000) 0 nil]) ((3027 . 3028)) nil (24319 52483 500580 600000) 0 nil]) ((3015 . 3027)) nil (24319 52483 500596 808000) 0 nil]) ((2781 . 2787)) nil (24319 52483 500615 484000) 0 nil]) ((2780 . 2781)) nil (24319 52483 500635 265000) 0 nil]) ((2761 . 2772)) nil (24319 52483 500653 113000) 0 nil]) ((#("=" 0 1 (fontified t)) . -2761) (undo-tree-id7168 . -1) (#("=" 0 1 (fontified t)) . -2762) (undo-tree-id7169 . -1) (#(" " 0 1 (fontified t)) . -2763) (undo-tree-id7170 . -1) 2764) nil (24319 52483 500730 603000) 0 nil]) ((#("0" 0 1 (fontified t)) . 2764) (#("1" 0 1 (fontified t)) . 2764)) nil (24319 52483 500764 237000) 0 nil]) ((2687 . 2694)) nil (24319 52483 500783 558000) 0 nil]) ((2681 . 2682)) ((#(")" 0 1 (fontified t)) . 2681) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1)) (24319 52425 693730 919000) 0 nil]) ((2673 . 2679)) nil (24319 52425 373177 46000) 0 nil]) ((2670 . 2672)) nil (24319 52425 372883 14000) 0 nil]) ((#("=" 0 1 (fontified t)) . 2670) (#("=" 0 1 (fontified t)) . 2670) (t 24319 52389 796599 928000)) nil (24319 52425 372894 969000) 0 nil]) ((2970 . 2971)) nil (24319 52389 719070 180000) 0 nil]) ((#("`" 0 1 (fontified t)) . -2970) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) 2971) nil (24319 52389 719196 876000) 0 nil]) ((2966 . 2971)) nil (24319 52389 719235 168000) 0 nil]) ((#("~" 0 1 (fontified t)) . -2966) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (#("=" 0 1 (fontified t)) . -2967) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) 2968) nil (24319 52389 719365 605000) 0 nil]) ((2966 . 2968)) nil (24319 52389 719405 178000) 0 nil]) ((#("!" 0 1 (fontified t)) . -2966) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) 2967) nil (24319 52389 719452 706000) 0 nil]) ((2965 . 2967)) nil (24319 52389 719475 526000) 0 nil]) ((#("pre" 0 3 (fontified t)) . -2955) (2958 . 2968) 2958) nil (24319 52389 719498 754000) 0 nil]) ((2954 . 2958)) nil (24319 52389 719518 412000) 0 nil]) ((2952 . 2954)) nil (24319 52389 719534 466000) 0 nil]) ((#("s" 0 1 (fontified t)) . -2952) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -2953) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) 2954 (t 24319 52353 274640 341000)) nil (24319 52389 719614 719000) 0 nil]) ((2981 . 2982)) nil (24319 52353 183227 109000) 0 nil]) ((#("press" 0 5 (fontified t)) . -2971) (2976 . 2986) 2976) nil (24319 52353 183246 740000) 0 nil]) ((2975 . 2976)) nil (24319 52353 183257 331000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2975) (undo-tree-id7131 . -1) 2976) nil (24319 52353 183276 151000) 0 nil]) ((2964 . 2976)) nil (24319 52353 183284 87000) 0 nil]) ((2955 . 2964)) nil (24319 52353 183290 580000) 0 nil]) ((2950 . 2955)) nil (24319 52353 183297 170000) 0 nil]) ((2943 . 2950) (#("      " 0 6 (fontified t)) . 2943) (undo-tree-id7132 . -6) 2949) nil (24319 52353 183310 643000) 0 nil]) ((2942 . 2949) (t 24319 52325 15445 370000)) nil (24319 52353 183320 914000) 0 nil]) ((2936 . 2942)) nil (24319 52324 936879 202000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2936) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) 2937) nil (24319 52324 936985 321000) 0 nil]) ((2936 . 2937)) nil (24319 52324 937021 829000) 0 nil]) ((2927 . 2936)) nil (24319 52324 937039 954000) 0 nil]) ((#(";" 0 1 (fontified t)) . -2723) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) 2724) nil (24319 52324 937096 921000) 0 nil]) ((2717 . 2724)) nil (24319 52324 937121 579000) 0 nil]) ((2708 . 2717) (t 24319 52266 895101 87000)) nil (24319 52324 937140 785000) 0 nil]) ((5491 . 5492)) nil (24319 52266 786542 276000) 0 nil]) ((5483 . 5484) (t 24319 52235 867984 976000)) nil (24319 52266 786586 706000) 0 nil]) ((5477 . 5490)) nil (24319 52235 787412 432000) 0 nil]) ((5474 . 5477) (#("  " 0 2 (fontified t)) . 5474) (undo-tree-id7114 . -2) (undo-tree-id7115 . -2) (undo-tree-id7116 . -2) (undo-tree-id7117 . -2) (undo-tree-id7118 . -2) (undo-tree-id7119 . -2) (undo-tree-id7120 . -2) (undo-tree-id7121 . -2) 5476) nil (24319 52235 787548 198000) 0 nil]) ((5473 . 5476) (t 24319 52230 761130 459000)) nil (24319 52235 787593 741000) 0 nil]) ((#("m" 0 1 (fontified nil)) . 5465) (5464 . 5465) (#("a" 0 1 (fontified nil)) . 5463) (5464 . 5465) (t 24319 52229 512166 39000)) nil (24319 52230 683587 192000) 0 nil]) ((5462 . 5467)) nil (24319 52229 435612 676000) 0 nil]) ((5433 . 5436)) nil (24319 52229 435651 986000) 0 nil]) ((nil rear-nonsticky nil 5432 . 5433) (nil fontified nil 5431 . 5433) (nil fontified nil 5430 . 5431) (nil fontified nil 5425 . 5430) (nil fontified nil 5424 . 5425) (nil fontified nil 5423 . 5424) (nil fontified nil 5408 . 5423) (5408 . 5433)) nil (24319 52229 435733 607000) 0 nil]) ((5400 . 5408)) nil (24319 52229 435774 179000) 0 nil]) ((5397 . 5400)) nil (24319 52229 435794 39000) 0 nil]) ((#("cv2.imread(args[\"image\"])" 0 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t syntax-table #1# face font-lock-string-face) 17 22 (fontified t face font-lock-string-face) 22 23 (fontified t syntax-table #1# face font-lock-string-face) 23 25 (fontified t)) . 5423) (undo-tree-id7108 . -25) (undo-tree-id7109 . -25) (undo-tree-id7110 . 1) (undo-tree-id7111 . -25) (undo-tree-id7112 . 15) (undo-tree-id7113 . -11) 5448 (t 24319 52105 53711 604000)) nil (24319 52229 435911 325000) 0 nil]) ((5404 . 5407)) nil (24319 52104 943135 665000) 0 nil]) ((#("Selector" 0 8 (fontified t face font-lock-variable-name-face)) . -5404) (undo-tree-id7104 . -8) (undo-tree-id7105 . -8) (undo-tree-id7106 . -8) (undo-tree-id7107 . -8) 5412 (t 24319 52099 541868 629000)) nil (24319 52104 943240 254000) 0 nil]) ((5455 . 5456)) nil (24319 52099 463281 512000) 0 nil]) ((#("F" 0 1 (fontified t)) . 5455) (t 24319 52095 417986 110000)) nil (24319 52099 463328 145000) 0 nil]) ((#("selected" 0 8 (fontified t)) . 5455) (undo-tree-id7099 . -8) (undo-tree-id7100 . -8) (undo-tree-id7101 . -8) (undo-tree-id7102 . -8) (undo-tree-id7103 . -8)) ((5455 . 5463) (t 24319 52095 417986 110000)) (24319 52098 295289 175000) 0 nil]) ((5455 . 5467)) ((#("selectedFace" 0 12 (fontified t)) . 5455) (undo-tree-id7092 . -12) (undo-tree-id7093 . -12) (undo-tree-id7094 . -12) (t 24319 52088 786175 35000)) (24319 52097 991278 370000) 0 nil]) ((#("Selected" 0 8 (fontified t)) . -5455) (undo-tree-id7075 . -8) (undo-tree-id7076 . -8) (undo-tree-id7077 . -8) (undo-tree-id7078 . -8) (undo-tree-id7079 . -8) (undo-tree-id7080 . -8) (undo-tree-id7081 . -8) (undo-tree-id7082 . -8) (undo-tree-id7083 . -8) (undo-tree-id7084 . -8) (undo-tree-id7085 . -8) (undo-tree-id7086 . -8) (undo-tree-id7087 . -8) (undo-tree-id7088 . -8) (undo-tree-id7089 . -8) (undo-tree-id7090 . -8) (undo-tree-id7091 . -8) 5463) nil (24319 52092 775431 96000) 0 nil]) ((5455 . 5463) (#("selected" 0 8 (fontified nil)) . -5455) (nil fontified t 5455 . 5463) (#("Selectedrectid" 0 14 (fontified t)) . -5455) (5469 . 5477) 5469) nil (24319 52088 679814 670000) 0 nil]) ((5455 . 5469) (#("selectedrectid" 0 14 (fontified nil)) . -5455) (nil fontified t 5460 . 5469) (#("Selection" 0 9 (fontified t)) . -5455) (5464 . 5478) 5464) nil (24319 52088 679859 528000) 0 nil]) ((5455 . 5464) (#("selection" 0 9 (fontified nil)) . -5455) (#("Sele" 0 4 (fontified t)) . -5455) (5459 . 5468) 5459) nil (24319 52088 679899 979000) 0 nil]) ((5454 . 5459) (t 24319 52069 437726 224000)) nil (24319 52088 679927 57000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5455) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (t 24319 51995 754825 309000)) nil (24319 52069 360234 20000) 0 nil]) ((2863 . 2868)) nil (24319 51995 650187 176000) 0 nil]) ((#("rects" 0 5 (fontified t)) . 2863) (undo-tree-id7059 . -5) (undo-tree-id7060 . -5) (undo-tree-id7061 . -5) (undo-tree-id7062 . -5) (undo-tree-id7063 . -5) (undo-tree-id7064 . -5) (undo-tree-id7065 . -5) (undo-tree-id7066 . -5) (undo-tree-id7067 . -5) (undo-tree-id7068 . -5) (undo-tree-id7069 . -5) (undo-tree-id7070 . -5) (undo-tree-id7071 . -5) (undo-tree-id7072 . -5) 2868 (t 24319 51905 604386 678000)) nil (24319 51995 650375 316000) 0 nil] [nil ([nil ([nil ([nil ([nil nil ((#("l" 0 1 (fontified t)) . 2867) (2868 . 2869) 2867) ((#("s" 0 1 (fontified nil)) . 2868) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (2867 . 2868)) (24319 51991 833447 215000) 0 nil]) ((#("e" 0 1 (fontified t)) . 2866) (2867 . 2868) 2866) ((#("e" 0 1 (fontified nil)) . 2867) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (2866 . 2867)) (24319 51991 834660 724000) 0 nil]) ((#("s" 0 1 (fontified t)) . 2865) (2866 . 2867) 2865) ((#("c" 0 1 (fontified nil)) . 2866) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (2865 . 2866)) (24319 51992 218199 53000) 0 nil]) ((#("[" 0 1 (fontified t)) . 2864) (2865 . 2866) 2864) ((#("a" 0 1 (fontified nil)) . 2865) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (2864 . 2865)) (24319 51992 586135 432000) 0 nil]) ((2863 . 2864) (#("rects" 0 5 (fontified t)) . -2863) (undo-tree-id7028 . -5) (undo-tree-id7029 . -5) (undo-tree-id7030 . -5) (undo-tree-id7031 . -5) (t 24319 51905 604386 678000)) ((2863 . 2868) (#("f" 0 1 (fontified t)) . 2863) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1)) (24319 51992 938151 771000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-string-face)) . 4036)) nil (24319 51993 322782 705000) 0 nil]) ((#("    if 'inner' in name:
      continue; #ignore inner mouth" 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 21 (fontified t face font-lock-string-face) 21 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 34 (fontified t face font-lock-string-face) 34 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 49 (fontified t face font-lock-string-face) 49 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face)) . -4036) (undo-tree-id7013 . -59) (undo-tree-id7014 . -24) (undo-tree-id7015 . -24) (undo-tree-id7016 . -24) (undo-tree-id7017 . -59) (undo-tree-id7018 . -59) (undo-tree-id7019 . -59) (undo-tree-id7020 . -23) (undo-tree-id7021 . -23) (undo-tree-id7022 . -47) (undo-tree-id7023 . -23) (undo-tree-id7024 . -47) (undo-tree-id7025 . -59) (undo-tree-id7026 . -47) (undo-tree-id7027 . -59) 4095 (t 24319 51868 151439 839000)) nil (24319 51905 500923 733000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3655) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1)) nil (24319 51868 76865 557000) 0 nil]) ((#(" " 0 1 (fontified t)) . -3655) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) 3656) nil (24319 51868 76896 532000) 0 nil]) ((#(" " 0 1 (fontified t)) . 3655) (#(" " 0 1 (fontified t)) . 3655) (#(" " 0 1 (fontified t)) . 3655) (t 24319 51864 923530 605000)) nil (24319 51868 76907 162000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3655) (#("
" 0 1 (fontified t)) . 3655) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1)) nil (24319 51864 813847 54000) 0 nil]) ((#("





" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -3655) (undo-tree-id6966 . -6) (undo-tree-id6967 . -6) (undo-tree-id6968 . -6) (undo-tree-id6969 . -6) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -2) (undo-tree-id6973 . -1) (undo-tree-id6974 . -2) (undo-tree-id6975 . -3) (undo-tree-id6976 . -2) (undo-tree-id6977 . -3) (undo-tree-id6978 . -4) (undo-tree-id6979 . -3) (undo-tree-id6980 . -4) (undo-tree-id6981 . -5) (undo-tree-id6982 . -4) (undo-tree-id6983 . -5) (undo-tree-id6984 . -6) (undo-tree-id6985 . -5) (undo-tree-id6986 . -6) 3661 (t 24319 51741 439002 940000)) nil (24319 51864 814081 16000) 0 nil]) ((2974 . 2975)) nil (24319 51741 361278 578000) 0 nil]) ((2953 . 2974)) nil (24319 51741 361318 253000) 0 nil]) ((2949 . 2953)) nil (24319 51741 361344 666000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2949) (undo-tree-id6901 . -2) (undo-tree-id6902 . -2) (undo-tree-id6903 . -2) (undo-tree-id6904 . -2) (undo-tree-id6905 . -2) (undo-tree-id6906 . -2) (undo-tree-id6907 . -2) (undo-tree-id6908 . -2) 2951) nil (24319 51741 361462 202000) 0 nil]) ((2947 . 2951)) nil (24319 51741 361499 355000) 0 nil]) ((nil rear-nonsticky nil 3625 . 3626) (nil fontified nil 3625 . 3626) (nil fontified nil 3624 . 3625) (nil fontified nil 3623 . 3624) (nil fontified nil 3622 . 3623) (nil fontified nil 3621 . 3622) (nil fontified nil 3620 . 3621) (nil fontified nil 3616 . 3620) (nil fontified nil 3614 . 3616) (nil fontified nil 3597 . 3614) (nil fontified nil 3593 . 3597) (nil fontified nil 3591 . 3593) (nil fontified nil 3590 . 3591) (nil fontified nil 3588 . 3590) (nil fontified nil 3587 . 3588) (nil fontified nil 3585 . 3587) (nil fontified nil 3584 . 3585) (nil fontified nil 3582 . 3584) (nil fontified nil 3576 . 3582) (nil fontified nil 3575 . 3576) (nil fontified nil 3572 . 3575) (nil fontified nil 3571 . 3572) (nil fontified nil 3539 . 3571) (nil fontified nil 3534 . 3539) (nil fontified nil 3516 . 3534) (nil fontified nil 3480 . 3516) (nil fontified nil 3466 . 3480) (nil fontified nil 3460 . 3466) (nil fontified nil 3459 . 3460) (nil fontified nil 3458 . 3459) (nil fontified nil 3456 . 3458) (nil fontified nil 3455 . 3456) (nil fontified nil 3450 . 3455) (nil fontified nil 3449 . 3450) (nil fontified nil 3431 . 3449) (nil fontified nil 3426 . 3431) (nil fontified nil 3425 . 3426) (nil fontified nil 3421 . 3425) (nil fontified nil 3403 . 3421) (nil fontified nil 3382 . 3403) (nil fontified nil 3380 . 3382) (nil fontified nil 3374 . 3380) (nil fontified nil 3373 . 3374) (nil fontified nil 3331 . 3373) (nil fontified nil 3330 . 3331) (nil fontified nil 3329 . 3330) (nil fontified nil 3325 . 3329) (nil fontified nil 3324 . 3325) (nil fontified nil 3317 . 3324) (nil fontified nil 3305 . 3317) (nil fontified nil 3304 . 3305) (nil fontified nil 3303 . 3304) (nil fontified nil 3292 . 3303) (nil fontified nil 3283 . 3292) (nil fontified nil 3282 . 3283) (nil fontified nil 3271 . 3282) (nil fontified nil 3267 . 3271) (nil fontified nil 3246 . 3267) (nil fontified nil 3240 . 3246) (nil fontified nil 3239 . 3240) (nil fontified nil 3237 . 3239) (nil fontified nil 3224 . 3237) (nil fontified nil 3219 . 3224) (nil fontified nil 3213 . 3219) (nil fontified nil 3208 . 3213) (nil fontified nil 3193 . 3208) (nil fontified nil 3187 . 3193) (nil fontified nil 3186 . 3187) (nil fontified nil 3177 . 3186) (nil fontified nil 3173 . 3177) (nil fontified nil 3172 . 3173) (nil fontified nil 3163 . 3172) (nil fontified nil 3162 . 3163) (nil fontified nil 3160 . 3162) (nil fontified nil 3144 . 3160) (nil fontified nil 3141 . 3144) (nil fontified nil 3137 . 3141) (nil fontified nil 3136 . 3137) (nil fontified nil 3135 . 3136) (nil fontified nil 3134 . 3135) (nil fontified nil 3128 . 3134) (nil fontified nil 3073 . 3128) (nil fontified nil 3066 . 3073) (nil fontified nil 3055 . 3066) (nil fontified nil 3051 . 3055) (nil fontified nil 3050 . 3051) (nil fontified nil 3002 . 3050) (nil fontified nil 3000 . 3002) (nil fontified nil 2999 . 3000) (nil fontified nil 2998 . 2999) (nil fontified nil 2994 . 2998) (nil fontified nil 2991 . 2994) (nil fontified nil 2986 . 2991) (nil fontified nil 2975 . 2986) (nil fontified nil 2971 . 2975) (nil fontified nil 2970 . 2971) (nil fontified nil 2954 . 2970) (nil fontified nil 2953 . 2954) (nil fontified nil 2950 . 2953) (nil fontified nil 2949 . 2950) (nil fontified nil 2948 . 2949) (2948 . 3626)) nil (24319 51741 361902 650000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1176) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (#("
" 0 1 (fontified t)) . 1176)) nil (24319 51741 362113 17000) 0 nil]) ((#("   " 0 3 (fontified t)) . -1176) (undo-tree-id6914 . -3) (undo-tree-id6915 . -3) 1179) nil (24319 51741 362163 753000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1176)) nil (24319 51741 362186 78000) 0 nil]) ((#("  def UpdateRectColors(self, selectedRectId):
    \"\"\"
    Utility function for coloring selected face

    Arguments:
    - `selectedRectId`: the selected id of the face (1 based)
    \"\"\"

    for (rectId, rect) in enumerate(self.rects):

      (x, y, w, h) = rect
      color = (0,255,0) if rectId == selectedRectId-1 else (0,0,255) #selection is 1 based

      cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

      # show the face number
      cv2.putText(self.img,
                  \"Face #{}\".format(rectId + 1),
                  (x - 10, y - 10),
                  cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)

      cv2.imshow(self.faceSelectionWin, self.img)
" 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t) 23 27 (fontified t face font-lock-keyword-face) 27 38 (fontified t) 38 43 (fontified t) 43 46 (fontified t) 46 50 (fontified t) 50 51 (syntax-table #1# fontified t face font-lock-doc-face) 51 52 (fontified t face font-lock-doc-face) 52 54 (fontified t face font-lock-doc-face) 54 102 (fontified t face font-lock-doc-face) 102 103 (fontified t face font-lock-doc-face) 103 107 (fontified t face font-lock-doc-face) 107 118 (fontified t face font-lock-doc-face) 118 125 (fontified t face font-lock-doc-face) 125 180 (fontified t face font-lock-doc-face) 180 186 (fontified t face font-lock-doc-face) 186 187 (syntax-table #1# fontified t face font-lock-doc-face) 187 188 (fontified t) 188 189 (fontified t) 189 193 (fontified t) 193 196 (fontified t face font-lock-keyword-face) 196 212 (fontified t) 212 214 (fontified t face font-lock-keyword-face) 214 215 (fontified t) 215 224 (fontified t face font-lock-builtin-face) 224 225 (fontified t) 225 229 (fontified t face font-lock-keyword-face) 229 238 (fontified t) 238 239 (fontified t) 239 245 (fontified t) 245 260 (fontified t) 260 265 (fontified t) 265 271 (fontified t) 271 276 (fontified t face font-lock-variable-name-face) 276 289 (fontified t) 289 291 (fontified t face font-lock-keyword-face) 291 292 (fontified t) 292 298 (fontified t) 298 319 (fontified t) 319 323 (fontified t face font-lock-keyword-face) 323 334 (fontified t) 334 335 (fontified t face font-lock-comment-delimiter-face) 335 344 (fontified t face font-lock-comment-face) 344 355 (fontified t face font-lock-comment-face) 355 356 (fontified t face font-lock-comment-face) 356 357 (fontified t) 357 369 (fontified t) 369 376 (fontified t) 376 377 (fontified t) 377 381 (face font-lock-keyword-face fontified t) 381 382 (rear-nonsticky t fontified t) 382 383 (fontified t) 383 425 (fontified t) 425 426 (fontified t) 426 432 (fontified t) 432 434 (fontified t face font-lock-comment-delimiter-face) 434 455 (fontified t face font-lock-comment-face) 455 473 (fontified t) 473 477 (fontified t face font-lock-keyword-face) 477 478 (fontified t) 478 483 (fontified t) 483 501 (fontified t) 501 502 (syntax-table #1# fontified t face font-lock-string-face) 502 507 (fontified t face font-lock-string-face) 507 508 (fontified t face font-lock-string-face) 508 510 (fontified t face font-lock-string-face) 510 511 (syntax-table #1# fontified t face font-lock-string-face) 511 512 (fontified t) 512 518 (fontified t face font-lock-builtin-face) 518 532 (fontified t) 532 568 (fontified t) 568 586 (fontified t) 586 591 (fontified t) 591 623 (fontified t) 623 624 (fontified t) 624 627 (fontified t) 627 628 (fontified t) 628 634 (fontified t) 634 636 (fontified t) 636 637 (fontified t) 637 639 (fontified t) 639 640 (fontified t) 640 642 (fontified t) 642 643 (fontified t) 643 645 (fontified t) 645 649 (fontified t face font-lock-keyword-face) 649 666 (fontified t) 666 668 (fontified t) 668 672 (fontified t face font-lock-keyword-face) 672 673 (rear-nonsticky t fontified t) 673 674 (fontified t) 674 675 (fontified t) 675 676 (fontified t) 676 677 (rear-nonsticky t fontified t) 677 678 (fontified t)) . 1176) (undo-tree-id6916 . -243) (undo-tree-id6917 . -243) (undo-tree-id6918 . -243) (undo-tree-id6919 . -243) (undo-tree-id6920 . -243) (undo-tree-id6921 . -243) (undo-tree-id6922 . -243) (undo-tree-id6923 . -243) (undo-tree-id6924 . -243) (undo-tree-id6925 . -243) (undo-tree-id6926 . -264) (undo-tree-id6927 . -264) (undo-tree-id6928 . -264) (undo-tree-id6929 . -264) (undo-tree-id6930 . -29) (undo-tree-id6931 . -29) (undo-tree-id6932 . -29) (undo-tree-id6933 . -473) (undo-tree-id6934 . -473) (undo-tree-id6935 . -473) (undo-tree-id6936 . -473) (undo-tree-id6937 . -473) (undo-tree-id6938 . -473) (undo-tree-id6939 . -6) (undo-tree-id6940 . -239) (undo-tree-id6941 . -239) (undo-tree-id6942 . -239) (undo-tree-id6943 . -239) (undo-tree-id6944 . -237) (undo-tree-id6945 . -627) (undo-tree-id6946 . -627) (undo-tree-id6947 . -122) (undo-tree-id6948 . -678) (undo-tree-id6949 . -139) (undo-tree-id6950 . -357) (undo-tree-id6951 . -357) (undo-tree-id6952 . -678) 1854) nil (24319 51741 362537 526000) 0 nil]) ((3640 . 3645) (#("    " 0 4 (fontified t)) . 3640) (undo-tree-id6953 . -4) 3644) nil (24319 51741 362626 709000) 0 nil]) ((3639 . 3644) (#("    " 0 4 (fontified t)) . 3639) (undo-tree-id6954 . -4) 3643) nil (24319 51741 362666 230000) 0 nil]) ((3638 . 3643) (#("    " 0 4 (fontified t)) . 3638) (undo-tree-id6955 . -4) 3642) nil (24319 51741 362715 654000) 0 nil]) ((3637 . 3642) (#("    " 0 4 (fontified t)) . 3637) (undo-tree-id6956 . -4) 3641) nil (24319 51741 362756 19000) 0 nil]) ((3636 . 3641) (#("    " 0 4 (fontified t)) . 3636) (undo-tree-id6957 . -4) 3640) nil (24319 51741 362794 136000) 0 nil]) ((3635 . 3640) (#("    " 0 4 (fontified t)) . 3635) (undo-tree-id6958 . -4) 3639) nil (24319 51741 362838 808000) 0 nil]) ((3634 . 3639) (#("    " 0 4 (fontified t)) . 3634) (undo-tree-id6959 . -4) 3638) nil (24319 51741 362879 716000) 0 nil]) ((3633 . 3638) (#("    " 0 4 (fontified t)) . 3633) (undo-tree-id6960 . -4) 3637) nil (24319 51741 362917 17000) 0 nil]) ((3632 . 3637) (#("    " 0 4 (fontified t)) . 3632) (undo-tree-id6961 . -4) 3636) nil (24319 51741 362955 781000) 0 nil]) ((3631 . 3636) (#("    " 0 3 (fontified t) 3 4 (fontified t)) . 3631) (undo-tree-id6962 . -4) 3635) nil (24319 51741 362994 730000) 0 nil]) ((3630 . 3631) (t 24319 51706 410987 915000)) nil (24319 51741 363020 962000) 0 nil]) ((3532 . 3541)) nil (24319 51706 337093 743000) 0 nil]) ((3530 . 3532)) nil (24319 51706 337105 325000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . -3530) (undo-tree-id6897 . -6) (undo-tree-id6898 . -6) (undo-tree-id6899 . -6) (undo-tree-id6900 . -6)) nil (24319 51706 337144 253000) 0 nil]) ((3376 . 3387)) nil (24319 51706 337164 531000) 0 nil] [nil nil ((nil rear-nonsticky nil 3381 . 3382) (nil fontified nil 3376 . 3382) (3376 . 3382)) ((#("ntyhe " 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky nil)) . 3376) (undo-tree-id6894 . -6) (undo-tree-id6895 . -6) (undo-tree-id6896 . -6) (nil rear-nonsticky t 3381 . 3382)) (24319 51695 113736 244000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . -3376) (undo-tree-id6887 . -6) (undo-tree-id6888 . -6) (undo-tree-id6889 . -6) (undo-tree-id6890 . -6) (undo-tree-id6891 . -6) (undo-tree-id6892 . -6) (undo-tree-id6893 . -6) (t 24319 51674 649881 19000)) nil (24319 51695 114524 402000) 0 nil]) ((#("self.face = " 0 4 (fontified t face font-lock-keyword-face) 4 12 (fontified t)) . -1016) (undo-tree-id6874 . -12) (undo-tree-id6875 . -4) (undo-tree-id6876 . -4) (undo-tree-id6877 . -4) (undo-tree-id6878 . -12) (undo-tree-id6879 . -4) (undo-tree-id6880 . -4) (undo-tree-id6881 . -9) (undo-tree-id6882 . -4) (undo-tree-id6883 . -9) (undo-tree-id6884 . -9) (undo-tree-id6885 . -12) (undo-tree-id6886 . -12) 1028 (t 24319 51653 276482 29000)) nil (24319 51674 539257 630000) 0 nil]) ((3251 . 3260)) nil (24319 51653 194872 320000) 0 nil]) ((3249 . 3251)) nil (24319 51653 194887 985000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -3249) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) 3250) nil (24319 51653 194985 551000) 0 nil]) ((#("ntyhe " 0 6 (fontified t face font-lock-comment-face)) . -3250) (undo-tree-id6853 . -6) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -2) (undo-tree-id6857 . -1) (undo-tree-id6858 . -2) (undo-tree-id6859 . -3) (undo-tree-id6860 . -2) (undo-tree-id6861 . -3) (undo-tree-id6862 . -4) (undo-tree-id6863 . -3) (undo-tree-id6864 . -4) (undo-tree-id6865 . -5) (undo-tree-id6866 . -4) (undo-tree-id6867 . -5) (undo-tree-id6868 . -6) (undo-tree-id6869 . -6) (undo-tree-id6870 . -6) (undo-tree-id6871 . -5) (undo-tree-id6872 . -6) (undo-tree-id6873 . -6) 3256) nil (24319 51653 195068 388000) 0 nil]) ((3247 . 3256) (t 24319 51649 136598 436000)) nil (24319 51653 195085 794000) 0 nil]) ((nil rear-nonsticky nil 3246 . 3247) (nil fontified nil 3226 . 3247) (nil fontified nil 3225 . 3226) (nil fontified nil 3223 . 3225) (nil fontified nil 3204 . 3223) (nil fontified nil 3200 . 3204) (3200 . 3247)) nil (24319 51649 27884 982000) 0 nil]) ((3195 . 3200) (#("    " 0 4 (fontified t)) . 3195) (undo-tree-id6720 . -4) (undo-tree-id6721 . -4) (undo-tree-id6722 . -4) (undo-tree-id6723 . -4) (undo-tree-id6724 . -4) (undo-tree-id6725 . -4) (undo-tree-id6726 . -4) (undo-tree-id6727 . -4) 3199) nil (24319 51649 28026 27000) 0 nil]) ((3194 . 3199)) nil (24319 51649 28065 970000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2858)) nil (24319 51649 28084 437000) 0 nil]) ((#("     " 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t)) . -2858) (undo-tree-id6728 . -5) (undo-tree-id6729 . -5) (undo-tree-id6730 . -5) (undo-tree-id6731 . -5) (undo-tree-id6732 . -5) (undo-tree-id6733 . -5) 2863) nil (24319 51649 28161 543000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2858) (#("
" 0 1 (fontified t)) . 2858) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (#("
" 0 1 (fontified t)) . 2858) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1)) nil (24319 51649 28465 641000) 0 nil]) ((#("      " 0 6 (fontified t)) . -2858) (undo-tree-id6765 . -4) (undo-tree-id6766 . -4) (undo-tree-id6767 . -4) (undo-tree-id6768 . -4) (undo-tree-id6769 . -4) (undo-tree-id6770 . -4) (undo-tree-id6771 . -4) (undo-tree-id6772 . -4) (undo-tree-id6773 . -4) (undo-tree-id6774 . -4) (undo-tree-id6775 . -4) (undo-tree-id6776 . -4) (undo-tree-id6777 . -6) (undo-tree-id6778 . -6) (undo-tree-id6779 . -6) (undo-tree-id6780 . -6) (undo-tree-id6781 . -6) (undo-tree-id6782 . -6) (undo-tree-id6783 . -6) (undo-tree-id6784 . -6) (undo-tree-id6785 . -6) (undo-tree-id6786 . -6) (undo-tree-id6787 . -4) (undo-tree-id6788 . -6) (undo-tree-id6789 . -6) (undo-tree-id6790 . -6) (undo-tree-id6791 . -6) (undo-tree-id6792 . -6) (undo-tree-id6793 . -6) (undo-tree-id6794 . -6) (undo-tree-id6795 . -6) (undo-tree-id6796 . -6) (undo-tree-id6797 . -6) (undo-tree-id6798 . -6) (undo-tree-id6799 . -6) (undo-tree-id6800 . -6) (undo-tree-id6801 . -6) (undo-tree-id6802 . -6) (undo-tree-id6803 . -6) (undo-tree-id6804 . -6) (undo-tree-id6805 . -6) (undo-tree-id6806 . -6) (undo-tree-id6807 . -6) (undo-tree-id6808 . -6) 2864) nil (24319 51649 28931 995000) 0 nil]) ((#("self.UpdateRectColors(1) #select the first face" 0 4 (fontified t face font-lock-keyword-face) 4 23 (fontified t) 23 25 (fontified t) 25 26 (fontified t face font-lock-comment-delimiter-face) 26 47 (fontified t face font-lock-comment-face)) . 2864) (undo-tree-id6809 . -22) (undo-tree-id6810 . -22) (undo-tree-id6811 . -22) (undo-tree-id6812 . -47) (undo-tree-id6813 . -47) (undo-tree-id6814 . -47) (undo-tree-id6815 . -47) (undo-tree-id6816 . -47) (undo-tree-id6817 . -47) (undo-tree-id6818 . -47) (undo-tree-id6819 . -47) (undo-tree-id6820 . -47) (undo-tree-id6821 . -47) (undo-tree-id6822 . -47) (undo-tree-id6823 . -47) (undo-tree-id6824 . -47) (undo-tree-id6825 . -47) 2911) nil (24319 51649 29162 606000) 0 nil]) ((2862 . 2864) 2858 (t 24319 51632 343070 672000)) nil (24319 51649 29212 857000) 0 nil]) ((#(")" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . -2652) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . 1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) 2653) nil (24319 51632 236749 808000) 0 nil]) ((#("then draw the face bounding box
      # (" 0 7 (fontified t face font-lock-comment-face) 7 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 17 (fontified t face font-lock-comment-face) 17 20 (fontified t face font-lock-comment-face) 20 25 (fontified t face font-lock-comment-face) 25 29 (fontified t face font-lock-comment-face) 29 32 (fontified t face font-lock-comment-face) 32 38 (fontified t) 38 40 (fontified t face font-lock-comment-delimiter-face) 40 41 (fontified t face font-lock-comment-face)) . -2616) (undo-tree-id6700 . -41) (undo-tree-id6701 . -40) (undo-tree-id6702 . -39) (undo-tree-id6703 . -40) (undo-tree-id6704 . -40) (undo-tree-id6705 . -40) (undo-tree-id6706 . -40) (undo-tree-id6707 . -31) (undo-tree-id6708 . -40) (undo-tree-id6709 . -31) (undo-tree-id6710 . -39) (undo-tree-id6711 . -41) (undo-tree-id6712 . -31) (undo-tree-id6713 . -32) (undo-tree-id6714 . -32) (undo-tree-id6715 . -32) (undo-tree-id6716 . -41) (undo-tree-id6717 . -41) 2657) nil (24319 51632 237010 133000) 0 nil]) ((#("]" 0 1 (fontified t face font-lock-comment-face)) . 2614)) nil (24319 51632 237078 343000) 0 nil]) ((#("[" 0 1 (fontified t face font-lock-comment-face)) . 2596) (undo-tree-id6718 . 1) (undo-tree-id6719 . -1) (t 24319 51618 352464 79000)) nil (24319 51632 237133 770000) 0 nil]) ((2657 . 2658)) nil (24319 51618 236845 405000) 0 nil]) ((nil rear-nonsticky nil 2694 . 2695) (nil fontified nil 2657 . 2695) (2657 . 2695)) nil (24319 51618 236898 138000) 0 nil]) ((2656 . 2657)) nil (24319 51618 236931 84000) 0 nil]) ((2649 . 2656) (t 24319 51593 983149 338000)) nil (24319 51618 236962 77000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1545)) nil (24319 51593 909341 652000) 0 nil]) ((#("      #plot the rectangle " 0 6 (fontified t) 6 7 (fontified t face font-lock-comment-delimiter-face) 7 26 (fontified t face font-lock-comment-face)) . -1545) (undo-tree-id6604 . -26) (undo-tree-id6605 . -26) (undo-tree-id6606 . -26) (undo-tree-id6607 . -26) (undo-tree-id6608 . -26) (undo-tree-id6609 . -26) (undo-tree-id6610 . -26) (undo-tree-id6611 . -6) (undo-tree-id6612 . -6) (undo-tree-id6613 . -6) (undo-tree-id6614 . -6) (undo-tree-id6615 . -6) (undo-tree-id6616 . -6) (undo-tree-id6617 . -6) (undo-tree-id6618 . -26) (undo-tree-id6619 . -6) (undo-tree-id6620 . -26) (undo-tree-id6621 . -26) (undo-tree-id6622 . -26) (undo-tree-id6623 . -26) (undo-tree-id6624 . -26) (undo-tree-id6625 . -11) (undo-tree-id6626 . -11) (undo-tree-id6627 . -15) (undo-tree-id6628 . -11) (undo-tree-id6629 . -15) (undo-tree-id6630 . -25) (undo-tree-id6631 . -15) (undo-tree-id6632 . -25) (undo-tree-id6633 . -26) (undo-tree-id6634 . -25) (undo-tree-id6635 . -26) (undo-tree-id6636 . -26) (undo-tree-id6637 . -26) (undo-tree-id6638 . -26) (undo-tree-id6639 . -26) (undo-tree-id6640 . -26) (undo-tree-id6641 . -26) (undo-tree-id6642 . -6) (undo-tree-id6643 . -26) (undo-tree-id6644 . -26) (undo-tree-id6645 . -26) (undo-tree-id6646 . -26) (undo-tree-id6647 . -26) (undo-tree-id6648 . -26) (undo-tree-id6649 . -26) (undo-tree-id6650 . -26) (undo-tree-id6651 . -26) (undo-tree-id6652 . -26) (undo-tree-id6653 . -26) (undo-tree-id6654 . -26) (undo-tree-id6655 . -26) (undo-tree-id6656 . -26) (undo-tree-id6657 . -26) (undo-tree-id6658 . -26) 1571) nil (24319 51593 909905 786000) 0 nil]) ((#("(remember to downsize the coordinates)" 0 38 (fontified t face font-lock-comment-face)) . 1571) (undo-tree-id6659 . -38) (undo-tree-id6660 . -38) (undo-tree-id6661 . -38) (undo-tree-id6662 . -38) (undo-tree-id6663 . -38) (undo-tree-id6664 . -38) (undo-tree-id6665 . -38) (undo-tree-id6666 . -38) (undo-tree-id6667 . -38) (undo-tree-id6668 . -38) (undo-tree-id6669 . -38) (undo-tree-id6670 . -38) (undo-tree-id6671 . -38) (undo-tree-id6672 . -38) (undo-tree-id6673 . -38) (undo-tree-id6674 . -9) (undo-tree-id6675 . -9) (undo-tree-id6676 . -1) (undo-tree-id6677 . -9) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . 1) (undo-tree-id6681 . -38) (undo-tree-id6682 . 38) (undo-tree-id6683 . -1) (undo-tree-id6684 . -38) (undo-tree-id6685 . -38) (undo-tree-id6686 . -38) (undo-tree-id6687 . -38) 1609 (t 24319 51584 352420 145000)) nil (24319 51593 910268 769000) 0 nil]) ((1523 . 1532)) nil (24319 51584 245650 902000) 0 nil]) ((#("Trackbar" 0 8 (fontified t face font-lock-comment-face)) . -1523) (undo-tree-id6592 . -8) (undo-tree-id6593 . -8) (undo-tree-id6594 . -8) (undo-tree-id6595 . -8) (undo-tree-id6596 . -8) (undo-tree-id6597 . -8) (undo-tree-id6598 . -8) 1532) nil (24319 51584 245790 817000) 0 nil]) ((1372 . 1375)) nil (24319 51584 245829 718000) 0 nil]) ((1367 . 1372)) nil (24319 51584 245848 78000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-doc-face)) . -1367) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) 1368) nil (24319 51584 245912 715000) 0 nil]) ((1367 . 1368) (t 24319 51570 206817 912000)) nil (24319 51584 245942 678000) 0 nil]) ((1357 . 1367)) nil (24319 51570 126089 767000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -1357) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) 1358) nil (24319 51570 126195 366000) 0 nil]) ((1353 . 1358)) nil (24319 51570 126231 765000) 0 nil]) ((#("recta" 0 5 (fontified t face font-lock-doc-face)) . -1353) (undo-tree-id6581 . -5) (undo-tree-id6582 . -4) (undo-tree-id6583 . -5) (undo-tree-id6584 . -5) (undo-tree-id6585 . -5) (undo-tree-id6586 . -4) (undo-tree-id6587 . -5) 1358) nil (24319 51570 126316 888000) 0 nil]) ((1352 . 1358)) nil (24319 51570 126346 755000) 0 nil]) ((1348 . 1352)) nil (24319 51570 126362 801000) 0 nil]) ((1327 . 1348)) nil (24319 51570 126378 932000) 0 nil]) ((nil fontified t 1318 . 1327) (nil face font-lock-doc-face 1318 . 1327) (#("selectedR" 0 9 (fontified t face font-lock-doc-face)) . -1313) (1322 . 1336) 1322) nil (24319 51570 126409 919000) 0 nil]) ((1321 . 1322)) nil (24319 51570 126431 647000) 0 nil]) ((#("sel" 0 3 (fontified t face font-lock-doc-face)) . -1313) (1316 . 1324) 1316) nil (24319 51570 126454 641000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-doc-face)) . -1316) (undo-tree-id6588 . -1) 1317) nil (24319 51570 126487 282000) 0 nil]) ((1313 . 1317)) nil (24319 51570 126506 738000) 0 nil]) ((1310 . 1313)) nil (24319 51570 126522 578000) 0 nil]) ((#("`" 0 1 (fontified t face font-lock-doc-face)) . -1310) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) 1311) nil (24319 51570 126559 796000) 0 nil]) ((1310 . 1311)) nil (24319 51570 126580 735000) 0 nil]) ((1305 . 1310)) nil (24319 51570 126596 645000) 0 nil]) ((1304 . 1305)) nil (24319 51570 126613 36000) 0 nil]) ((#("Arg" 0 3 (fontified t face font-lock-doc-face)) . -1295) (1298 . 1307) 1298) nil (24319 51570 126636 33000) 0 nil]) ((1295 . 1298)) nil (24319 51570 126655 969000) 0 nil]) ((1290 . 1295) (#("    " 0 4 (fontified t face font-lock-doc-face)) . 1290) (undo-tree-id6591 . -4) 1294) nil (24319 51570 126688 306000) 0 nil]) ((1289 . 1294)) nil (24319 51570 126725 710000) 0 nil]) ((1288 . 1289)) nil (24319 51570 126741 597000) 0 nil]) ((1267 . 1288)) nil (24319 51570 126757 417000) 0 nil]) ((1246 . 1267)) nil (24319 51570 126773 321000) 0 nil]) ((1241 . 1246)) nil (24319 51570 126788 765000) 0 nil]) ((1238 . 1241)) nil (24319 51570 126804 462000) 0 nil]) ((1233 . 1238) (t 24319 51466 141744 177000)) nil (24319 51570 126824 268000) 0 nil]) ((nil fontified t 3413 . 3429) (nil fontified t 3409 . 3413) (nil face font-lock-keyword-face 3409 . 3413) (#("self.faceSelectorWin" 0 4 (fontified t face font-lock-keyword-face) 4 20 (fontified t)) . -3408) (3428 . 3449)) nil (24319 51466 32945 407000) 0 nil]) ((nil fontified t 2963 . 2979) (nil face font-lock-keyword-face 2959 . 2963) (nil fontified t 2959 . 2963) (#("self.faceSelectorWin" 0 4 (face font-lock-keyword-face fontified t) 4 20 (fontified t)) . -2958) (2978 . 2999)) nil (24319 51466 33010 994000) 0 nil]) ((nil rear-nonsticky t 2372 . 2373) (nil fontified t 2372 . 2373) (nil fontified t 2357 . 2372) (nil fontified t 2356 . 2357) (nil face font-lock-keyword-face 2356 . 2357) (nil fontified t 2353 . 2356) (nil face font-lock-keyword-face 2353 . 2356) (#("self.faceSelectorWin" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 19 (fontified t) 19 20 (rear-nonsticky t fontified t)) . -2352) (2372 . 2393)) nil (24319 51466 33073 109000) 0 nil]) ((nil fontified t 2295 . 2296) (nil face font-lock-keyword-face 2295 . 2296) (nil fontified t 2292 . 2295) (nil face font-lock-keyword-face 2292 . 2295) (#("self.faceSelectorWin" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 20 (fontified t)) . -2291) (2311 . 2332)) nil (24319 51466 33124 545000) 0 nil]) ((nil fontified t 1769 . 1776) (t 24319 51396 728696 40000) (nil fontified t 1766 . 1769) (t 24319 51396 728696 40000) (nil fontified t 1760 . 1766) (t 24319 51396 728696 40000) (nil fontified t 1756 . 1760) (t 24319 51396 728696 40000) (nil face font-lock-keyword-face 1756 . 1760) (t 24319 51396 728696 40000) (#("self.faceSelectorWin" 0 4 (fontified t face font-lock-keyword-face) 4 10 (fontified t) 10 13 (fontified t) 13 20 (fontified t)) . -1755) (t 24319 51396 728696 40000) (1775 . 1796) (t 24319 51396 728696 40000)) nil (24319 51466 33200 801000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1401) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1)) nil (24319 51396 618918 678000) 0 nil]) ((#("      print (color)" 0 6 (fontified t) 6 11 (fontified t face font-lock-keyword-face) 11 19 (fontified t)) . -1401) (undo-tree-id6554 . -19) (undo-tree-id6555 . -19) (undo-tree-id6556 . -19) (undo-tree-id6557 . -19) (undo-tree-id6558 . -19) (undo-tree-id6559 . -19) 1420) nil (24319 51396 619044 878000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1284) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1)) nil (24319 51396 619149 955000) 0 nil]) ((#("      print (rectId, selectedRectId)" 0 6 (fontified t) 6 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t) 13 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t)) . -1284) (undo-tree-id6565 . -35) (undo-tree-id6566 . -36) (undo-tree-id6567 . -36) (undo-tree-id6568 . -36) (undo-tree-id6569 . -36) (undo-tree-id6570 . -36) (undo-tree-id6571 . 1) (undo-tree-id6572 . -36) (undo-tree-id6573 . 24) (undo-tree-id6574 . -13) (undo-tree-id6575 . -36) 1320 (t 24319 51291 882644 228000)) nil (24319 51396 619334 809000) 0 nil]) ((1419 . 1437)) nil (24319 51291 805787 837000) 0 nil]) ((1418 . 1419)) nil (24319 51291 805827 963000) 0 nil]) ((#("S" 0 1 (fontified t face font-lock-comment-face)) . -1418) (undo-tree-id6548 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -1419) (undo-tree-id6549 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -1420) (undo-tree-id6550 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -1421) (undo-tree-id6551 . -1) 1422) nil (24319 51291 805925 573000) 0 nil] [nil nil ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 1348) (undo-tree-id6516 . -1) (#("      color = (0,255,0) if rectId == selectedRectId-1 else (0,0,255) #Slic" 0 6 (fontified t) 6 11 (fontified t face font-lock-variable-name-face) 11 24 (fontified t) 24 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t) 27 33 (fontified t) 33 54 (fontified t) 54 58 (fontified t face font-lock-keyword-face) 58 69 (fontified t) 69 70 (fontified t face font-lock-comment-delimiter-face) 70 74 (fontified t face font-lock-comment-face)) . -1348) (undo-tree-id6517 . -74) (undo-tree-id6518 . -53) (undo-tree-id6519 . -52) (undo-tree-id6520 . -53) (undo-tree-id6521 . -53) (undo-tree-id6522 . -53) (undo-tree-id6523 . -53) (undo-tree-id6524 . -68) (undo-tree-id6525 . -53) (undo-tree-id6526 . -68) (undo-tree-id6527 . -69) (undo-tree-id6528 . -68) (undo-tree-id6529 . -69) (undo-tree-id6530 . -70) (undo-tree-id6531 . -69) (undo-tree-id6532 . -70) (undo-tree-id6533 . -71) (undo-tree-id6534 . -70) (undo-tree-id6535 . -71) (undo-tree-id6536 . -72) (undo-tree-id6537 . -71) (undo-tree-id6538 . -72) (undo-tree-id6539 . -73) (undo-tree-id6540 . -72) (undo-tree-id6541 . -73) (undo-tree-id6542 . -74) (undo-tree-id6543 . -74) (undo-tree-id6544 . -74) (undo-tree-id6545 . -73) (undo-tree-id6546 . -74) (undo-tree-id6547 . -74) 1422) ((1348 . 1422) (1348 . 1349)) (24319 51286 292813 35000) 0 nil]) ((1416 . 1422) (t 24319 51280 403967 10000)) nil (24319 51286 293388 522000) 0 nil]) ((1400 . 1401)) nil (24319 51280 294144 513000) 0 nil]) ((#("`" 0 1 (fontified t)) . -1400) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) 1401) nil (24319 51280 294279 481000) 0 nil]) ((1399 . 1401) (t 24319 51257 904599 678000)) nil (24319 51280 294322 579000) 0 nil]) ((2849 . 2859)) nil (24319 51257 798731 383000) 0 nil]) ((2834 . 2835)) nil (24319 51257 798771 157000) 0 nil]) ((#("0" 0 1 (fontified t)) . 2834) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1)) nil (24319 51257 799061 124000) 0 nil]) ((2836 . 2849) (t 24319 51234 300263 432000)) nil (24319 51257 799128 206000) 0 nil]) ((2834 . 2835)) nil (24319 51234 206549 178000) 0 nil]) ((#("1" 0 1 (fontified t)) . -2834) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) 2835 (t 24319 51230 2384 285000)) nil (24319 51234 206604 210000) 0 nil]) ((2834 . 2835)) nil (24319 51229 895490 859000) 0 nil]) ((#("rectId" 0 1 (fontified t) 1 6 (fontified t)) . -2834) (undo-tree-id6464 . -6) (undo-tree-id6465 . -6) (undo-tree-id6466 . -4) (undo-tree-id6467 . -4) (undo-tree-id6468 . -4) (undo-tree-id6469 . -6) (undo-tree-id6470 . -4) (undo-tree-id6471 . -4) (undo-tree-id6472 . -6) (undo-tree-id6473 . -4) (undo-tree-id6474 . -6) 2838 (t 24319 51124 481351 479000)) nil (24319 51229 895650 933000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1235)) nil (24319 51124 402482 643000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1235) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) 1236) nil (24319 51124 402626 217000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1235) (#(" " 0 1 (fontified t)) . 1235) (#(" " 0 1 (fontified t)) . 1235) (undo-tree-id6446 . 1) (undo-tree-id6447 . 1) (#("
" 0 1 (fontified t)) . 1235) (undo-tree-id6448 . 1) (undo-tree-id6449 . 1)) nil (24319 51124 402732 564000) 0 nil]) ((#("    print (selectedRectId)" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 26 (fontified t)) . -1235) (undo-tree-id6450 . -25) (undo-tree-id6451 . -26) (undo-tree-id6452 . -26) (undo-tree-id6453 . -26) (undo-tree-id6454 . -26) (undo-tree-id6455 . -26) (undo-tree-id6456 . -26) (undo-tree-id6457 . -26) (undo-tree-id6458 . -26) (undo-tree-id6459 . 1) (undo-tree-id6460 . -26) (undo-tree-id6461 . 16) (undo-tree-id6462 . -11) (undo-tree-id6463 . -26) 1261) nil (24319 51124 402890 106000) 0 nil]) ((nil fontified t 1347 . 1351) (nil face font-lock-keyword-face 1347 . 1351) (#("self" 0 4 (fontified t face font-lock-keyword-face)) . -1337) (1341 . 1355) 1341) nil (24319 51124 402943 629000) 0 nil]) ((#("sel" 0 3 (fontified t)) . -1337) (1340 . 1344) 1340) nil (24319 51124 402973 501000) 0 nil]) ((1335 . 1340) (t 24319 51080 656583 793000)) nil (24319 51124 402996 721000) 0 nil]) ((1335 . 1336)) nil (24319 51080 547726 229000) 0 nil]) ((1328 . 1329) (t 24319 51073 687779 746000)) nil (24319 51080 547773 547000) 0 nil] [nil ([nil nil ((1334 . 1335)) ((#("(" 0 1 (fontified t)) . 1334) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1)) (24319 51078 122912 119000) 0 nil]) ((1327 . 1334) (#(" " 0 1 (fontified t)) . 1327) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) 1328 (t 24319 51073 687779 746000)) ((1327 . 1328) (#("
      " 0 1 (fontified t) 1 7 (fontified t)) . 1327) (undo-tree-id6407 . -7) (undo-tree-id6408 . 7) (undo-tree-id6409 . -1) (undo-tree-id6410 . -7) (undo-tree-id6411 . -7) (undo-tree-id6412 . -7) (undo-tree-id6413 . -7) (undo-tree-id6414 . -7) (undo-tree-id6415 . -7) (undo-tree-id6416 . -7) (undo-tree-id6417 . -7) (undo-tree-id6418 . -7) (undo-tree-id6419 . -7) (undo-tree-id6420 . -7) (undo-tree-id6421 . -7) (undo-tree-id6422 . -7) (undo-tree-id6423 . -7) (undo-tree-id6424 . -7) (undo-tree-id6425 . -7) (undo-tree-id6426 . -7) (undo-tree-id6427 . -7) (undo-tree-id6428 . -7) (undo-tree-id6429 . -7) (undo-tree-id6430 . -7) (undo-tree-id6431 . -7) (undo-tree-id6432 . -7) (undo-tree-id6433 . -7) (undo-tree-id6434 . -7) (undo-tree-id6435 . -7) (undo-tree-id6436 . -7)) (24319 51078 123860 876000) 0 nil]) ((1322 . 1334)) nil (24319 51078 572328 972000) 0 nil]) ((1315 . 1322) (t 24319 51033 410912 298000)) nil (24319 51073 581520 411000) 0 nil]) ((1260 . 1261)) nil (24319 51033 332946 800000) 0 nil]) ((1245 . 1246)) nil (24319 51033 332986 415000) 0 nil]) ((1426 . 1427)) nil (24319 51033 333009 941000) 0 nil]) ((#("0" 0 1 (fontified t)) . -1426) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) 1427) nil (24319 51033 333093 697000) 0 nil]) ((1420 . 1427)) nil (24319 51033 333122 512000) 0 nil]) ((#("c" 0 1 (fontified t)) . -1420) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (#("o" 0 1 (fontified t)) . -1421) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) 1422) nil (24319 51033 333284 280000) 0 nil]) ((1414 . 1422)) nil (24319 51033 333328 484000) 0 nil]) ((1407 . 1414) (t 24319 51020 583272 997000)) nil (24319 51033 333348 212000) 0 nil]) ((#("selec" 0 5 (fontified t)) . -1245) (1250 . 1264) 1250) nil (24319 51020 493444 127000) 0 nil]) ((1245 . 1250)) nil (24319 51020 493489 351000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1245) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (#("e" 0 1 (fontified t)) . -1246) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (#("c" 0 1 (fontified t)) . -1247) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) 1248) nil (24319 51020 493962 44000) 0 nil]) ((1239 . 1248)) nil (24319 51020 494060 451000) 0 nil]) ((1234 . 1239)) nil (24319 51020 494084 977000) 0 nil]) ((1234 . 1239) (t 24319 46761 241156 585000)) nil (24319 51020 494114 297000) 0 nil]) ((1281 . 1282)) nil (24319 46761 163759 397000) 0 nil]) ((1261 . 1271) (t 24319 46744 178630 868000)) nil (24319 46761 163807 746000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-function-name-face)) . -1210) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) 1211) nil (24319 46744 67177 523000) 0 nil]) ((1209 . 1211)) nil (24319 46744 67221 55000) 0 nil]) ((2763 . 2764) (t 24319 46732 856945 574000)) nil (24319 46744 67248 147000) 0 nil]) ((#(",
                         " 0 2 (fontified t) 2 5 (fontified t) 5 10 (fontified t) 10 16 (fontified t) 16 22 (fontified t) 22 27 (fontified t)) . 2770) (undo-tree-id6310 . -27) (undo-tree-id6311 . -27) (undo-tree-id6312 . -27) (undo-tree-id6313 . -27) (undo-tree-id6314 . -27) (undo-tree-id6315 . -27) (undo-tree-id6316 . -27) (undo-tree-id6317 . -27) (undo-tree-id6318 . -27) (undo-tree-id6319 . -27) (undo-tree-id6320 . -27) (undo-tree-id6321 . -27) (undo-tree-id6322 . -27) (undo-tree-id6323 . -27) (undo-tree-id6324 . -27) (undo-tree-id6325 . -27) (undo-tree-id6326 . -27) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1)) nil (24319 46732 746903 97000) 0 nil]) ((#("(0,0,255) if rectId == 0 else (0,255,0)" 0 3 (fontified t) 3 9 (fontified t) 9 10 (fontified t) 10 12 (fontified t face font-lock-keyword-face) 12 25 (fontified t) 25 29 (fontified t face font-lock-keyword-face) 29 31 (fontified t) 31 39 (fontified t)) . -2797) (undo-tree-id6330 . -39) (undo-tree-id6331 . 1) (undo-tree-id6332 . -39) (undo-tree-id6333 . 9) (undo-tree-id6334 . -31) (undo-tree-id6335 . -39) (undo-tree-id6336 . -39) (undo-tree-id6337 . -39) 2836) nil (24319 46732 747044 881000) 0 nil]) ((#("self.rects,
                         " 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t) 5 10 (fontified t) 10 12 (fontified t) 12 15 (fontified t) 15 31 (fontified t) 31 37 (fontified t)) . -2764) (undo-tree-id6338 . -10) (undo-tree-id6339 . -10) (undo-tree-id6340 . -37) (undo-tree-id6341 . -37) (undo-tree-id6342 . -37) (undo-tree-id6343 . -37) 2801 (t 24319 46692 336071 921000)) nil (24319 46732 747143 624000) 0 nil]) ((1362 . 1365)) nil (24319 46692 235133 596000) 0 nil]) ((#("4" 0 1 (fontified t)) . -1362) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (#("4" 0 1 (fontified t)) . -1363) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (#(")" 0 1 (fontified t)) . -1364) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . 1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) 1365) nil (24319 46692 235321 576000) 0 nil]) ((1361 . 1365)) nil (24319 46692 235362 382000) 0 nil]) ((1358 . 1361)) nil (24319 46692 235371 139000) 0 nil]) ((#("." 0 1 (fontified t)) . -1358) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (#("0" 0 1 (fontified t)) . -1359) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) 1360) nil (24319 46692 235450 531000) 0 nil]) ((1350 . 1360)) nil (24319 46692 235471 478000) 0 nil]) ((#("s" 0 1 (fontified t)) . -1350) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) 1351) nil (24319 46692 235500 693000) 0 nil]) ((1346 . 1351)) nil (24319 46692 235513 240000) 0 nil]) ((1325 . 1346)) nil (24319 46692 235520 892000) 0 nil]) ((1305 . 1325)) nil (24319 46692 235528 291000) 0 nil]) ((1298 . 1305)) nil (24319 46692 235537 147000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1273)) nil (24319 46692 235545 714000) 0 nil]) ((#("      " 0 6 (fontified t)) . -1273) (undo-tree-id6302 . -6) (undo-tree-id6303 . -6) (undo-tree-id6304 . -6) (undo-tree-id6305 . -6) (undo-tree-id6306 . -6) (undo-tree-id6307 . -6) (undo-tree-id6308 . -6) (undo-tree-id6309 . -6) 1279) nil (24319 46692 235588 794000) 0 nil] [nil nil ((nil rear-nonsticky nil 1298 . 1299) (nil fontified nil 1283 . 1299) (nil fontified nil 1279 . 1283) (1279 . 1299)) ((#("self.faceSelectorWin" 0 4 (fontified nil face font-lock-keyword-face) 4 19 (fontified nil) 19 20 (fontified nil rear-nonsticky nil)) . 1279) (undo-tree-id6241 . -20) (undo-tree-id6242 . -20) (undo-tree-id6243 . -20) (undo-tree-id6244 . -20) (undo-tree-id6245 . -20) (nil rear-nonsticky t 1298 . 1299)) (24319 46654 796067 454000) 0 nil]) ((1272 . 1279) (#("      " 0 6 (fontified t)) . 1272) (undo-tree-id6232 . -6) (undo-tree-id6233 . -6) (undo-tree-id6234 . -6) (undo-tree-id6235 . -6) (undo-tree-id6236 . -6) (undo-tree-id6237 . -6) (undo-tree-id6238 . -6) 1278) nil (24319 46654 798054 248000) 0 nil]) ((1271 . 1278)) nil (24319 46654 796275 839000) 0 nil]) ((1639 . 1641) 1635) nil (24319 46654 796305 713000) 0 nil]) ((1591 . 1593) 1595) nil (24319 46654 796337 509000) 0 nil]) ((1555 . 1557) 1557) nil (24319 46654 796368 385000) 0 nil]) ((1506 . 1508) 1496) nil (24319 46654 796397 544000) 0 nil]) ((1466 . 1468) 1462) nil (24319 46654 796428 242000) 0 nil]) ((1437 . 1439) 1433) nil (24319 46654 796459 751000) 0 nil]) ((1368 . 1370) 1364) nil (24319 46654 796483 315000) 0 nil]) ((1303 . 1305) 1299) nil (24319 46654 796506 690000) 0 nil]) ((1276 . 1278) 1272) nil (24319 46654 796535 998000) 0 nil]) ((1265 . 1271)) nil (24319 46654 796560 925000) 0 nil]) ((#("R" 0 1 (fontified t)) . -1265) (undo-tree-id6239 . -1) 1266) nil (24319 46654 796601 538000) 0 nil]) ((1264 . 1266)) nil (24319 46654 796626 280000) 0 nil]) ((1255 . 1264)) nil (24319 46654 796649 211000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1255) (undo-tree-id6240 . -1) 1256) nil (24319 46654 796709 543000) 0 nil]) ((1249 . 1256)) nil (24319 46654 796740 79000) 0 nil]) ((#("r" 0 1 (fontified t)) . 1225)) nil (24319 46654 796762 211000) 0 nil]) ((1216 . 1225)) nil (24319 46654 796786 424000) 0 nil]) ((1234 . 1241)) nil (24319 46654 796808 93000) 0 nil]) ((1230 . 1234)) nil (24319 46654 796831 474000) 0 nil]) ((1225 . 1230)) nil (24319 46654 796853 774000) 0 nil]) ((#("r" 0 1 (fontified t)) . 1222) (t 24319 46600 20671 899000)) nil (24319 46654 796882 138000) 0 nil]) ((#("o" 0 1 (fontified t)) . 1222) (#("l" 0 1 (fontified t)) . 1222) (#("o" 0 1 (fontified t)) . 1222) (#("c" 0 1 (fontified t)) . 1222) (#(" " 0 1 (fontified t)) . 1222) (#("," 0 1 (fontified t)) . 1222)) nil (24319 46599 942676 984000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1216)) nil (24319 46599 942745 891000) 0 nil]) ((#("rect," 0 5 (fontified t)) . -1216) (undo-tree-id6209 . -5) (undo-tree-id6210 . -5) (undo-tree-id6211 . -4) (undo-tree-id6212 . -5) (undo-tree-id6213 . -4) (undo-tree-id6214 . -5) 1221) nil (24319 46599 942844 903000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1639)) nil (24319 46599 942876 111000) 0 nil]) ((#("   " 0 3 (fontified t)) . -1639) (undo-tree-id6215 . -3) (undo-tree-id6216 . -3) 1642) nil (24319 46599 942924 638000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1639) (#("
" 0 1 (fontified t)) . 1639) (#("
" 0 1 (fontified t)) . 1639) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1)) nil (24319 46599 942973 91000) 0 nil]) ((#("  def faceSelectorCallback(self, val):
    
      self.UpdateRectColors(val-1), #selectedRectId" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t) 27 31 (fontified t face font-lock-keyword-face) 31 36 (fontified t) 36 39 (fontified t) 39 43 (fontified t) 43 44 (fontified t) 44 50 (fontified t) 50 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t) 55 64 (fontified t) 64 71 (fontified t) 71 72 (fontified t) 72 75 (fontified t) 75 80 (fontified t) 80 81 (fontified t face font-lock-comment-delimiter-face) 81 95 (fontified t face font-lock-comment-face)) . 1639) (undo-tree-id6219 . -95) (undo-tree-id6220 . -6) (undo-tree-id6221 . -6) (undo-tree-id6222 . -6) (undo-tree-id6223 . -6) (undo-tree-id6224 . -72) (undo-tree-id6225 . -43) (undo-tree-id6226 . -72) (undo-tree-id6227 . -80) (undo-tree-id6228 . -6) (undo-tree-id6229 . -95)) nil (24319 46599 943095 329000) 0 nil]) ((#("faceSelectorCallback" 0 16 (fontified t) 16 17 (fontified t) 17 19 (fontified t) 19 20 (rear-nonsticky t fontified t)) . -3190) (undo-tree-id6230 . -20) (undo-tree-id6231 . -20) 3210) nil (24319 46599 943151 66000) 0 nil]) ((3189 . 3190)) nil (24319 46599 943172 894000) 0 nil]) ((3174 . 3189) (t 24319 46553 722989 495000)) nil (24319 46599 943194 201000) 0 nil]) ((#("                           (0,0,255))         #color" 0 27 (fontified t) 27 35 (fontified t) 35 36 (rear-nonsticky t fontified t) 36 37 (rear-nonsticky t fontified t) 37 39 (fontified t) 39 41 (fontified t) 41 46 (fontified t) 46 47 (fontified t face font-lock-comment-delimiter-face) 47 52 (fontified t face font-lock-comment-face)) . -1735) (undo-tree-id6191 . -52) (undo-tree-id6192 . -52) (undo-tree-id6193 . -52) (undo-tree-id6194 . -27) (undo-tree-id6195 . -51) (undo-tree-id6196 . -51) (undo-tree-id6197 . -51) (undo-tree-id6198 . -52) (undo-tree-id6199 . -52) (undo-tree-id6200 . -52) 1787) nil (24319 46553 615855 149000) 0 nil]) ((1716 . 1717)) nil (24319 46553 615916 437000) 0 nil]) ((1718 . 1733)) nil (24319 46553 615945 103000) 0 nil]) ((#("            #rectId" 0 1 (fontified t) 1 2 (fontified t) 2 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t face font-lock-comment-delimiter-face) 13 19 (fontified t face font-lock-comment-face)) . -1718) (undo-tree-id6201 . -19) (undo-tree-id6202 . -19)) nil (24319 46553 615996 967000) 0 nil]) ((1709 . 1710)) nil (24319 46553 616027 245000) 0 nil]) ((#("
                           " 0 1 (fontified t) 1 28 (fontified t)) . -1710) (undo-tree-id6203 . -28) (undo-tree-id6204 . -28) 1738) nil (24319 46553 616079 756000) 0 nil]) ((#("self.rects[val-1], #rect" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 14 (fontified t) 14 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t face font-lock-comment-delimiter-face) 20 24 (fontified t face font-lock-comment-face)) . -1710) (undo-tree-id6205 . -24) (undo-tree-id6206 . -24) 1734) nil (24319 46553 616142 546000) 0 nil]) ((#("if (val > 0): #0 = nothing is selected" 0 2 (fontified t face font-lock-keyword-face) 2 14 (fontified t) 14 15 (fontified t face font-lock-comment-delimiter-face) 15 16 (fontified t face font-lock-comment-face) 16 38 (fontified t face font-lock-comment-face)) . -1682) (undo-tree-id6207 . -38) (undo-tree-id6208 . -38) 1720 (t 24319 46488 395848 657000)) nil (24319 46553 616207 787000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2961)) nil (24319 46488 289554 887000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2928) 2907) nil (24319 46488 289603 9000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2870) (undo-tree-id6172 . -2) (undo-tree-id6173 . -2) (undo-tree-id6174 . -2) (undo-tree-id6175 . -2) (undo-tree-id6176 . -2) (undo-tree-id6177 . -2) (undo-tree-id6178 . -2) (undo-tree-id6179 . -2) (undo-tree-id6180 . -2) (undo-tree-id6181 . -2) (undo-tree-id6182 . -2) (undo-tree-id6183 . -2) (undo-tree-id6184 . -2) (undo-tree-id6185 . -2) (undo-tree-id6186 . -2) (undo-tree-id6187 . -2) (undo-tree-id6188 . -2) (undo-tree-id6189 . -2) (undo-tree-id6190 . -2) 2872 (t 24319 46481 71057 116000)) nil (24319 46488 289922 458000) 0 nil]) ((#("[" 0 1 (fontified t)) . -2903) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . 1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (#("-" 0 1 (fontified t)) . -2904) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (#("1" 0 1 (fontified t)) . -2905) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (#("]" 0 1 (fontified t)) . -2906) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . 1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) 2907 (t 24319 46431 808459 89000)) nil (24319 46480 994391 174000) 0 nil] [nil nil ((#("l" 0 1 (fontified t)) . 2893) (#("e" 0 1 (fontified t)) . 2893) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . 2893) (t 24319 46431 808459 89000)) ((2893 . 2894) (2893 . 2894) (2893 . 2894)) (24319 46478 936577 238000) 0 nil]) ((2462 . 2463)) nil (24319 46478 936897 406000) 0 nil]) ((nil rear-nonsticky nil 2461 . 2462) (nil fontified nil 2446 . 2462) (nil fontified nil 2442 . 2446) (2442 . 2462)) nil (24319 46431 731206 634000) 0 nil]) ((nil rear-nonsticky nil 2441 . 2442) (nil fontified nil 2426 . 2442) (2426 . 2442)) nil (24319 46431 731243 477000) 0 nil]) ((2421 . 2426)) nil (24319 46431 731263 970000) 0 nil]) ((#(")" 0 1 (fontified t)) . -2420) (undo-tree-id6119 . -1) (undo-tree-id6120 . 1) (undo-tree-id6121 . -1) 2421) nil (24319 46431 731325 829000) 0 nil]) ((#("cv2.namedWindow(" 0 16 (fontified t)) . 2405) (undo-tree-id6122 . -16) (undo-tree-id6123 . -5) (undo-tree-id6124 . -5) (undo-tree-id6125 . -5) (undo-tree-id6126 . -16) (t 24319 46399 524377 872000)) nil (24319 46431 731398 251000) 0 nil] [nil ([nil nil ((#(")" 0 1 (fontified t)) . -2420) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . 1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) 2421) ((2420 . 2421)) (24319 46417 314801 246000) 0 nil]) ((#("cv2.namedWindow(" 0 16 (fontified t)) . -2405) (undo-tree-id6103 . -5) (undo-tree-id6104 . -5) (undo-tree-id6105 . -5) (undo-tree-id6106 . -16) (undo-tree-id6107 . -16) (undo-tree-id6108 . -3) (undo-tree-id6109 . -3) (undo-tree-id6110 . -9) (undo-tree-id6111 . -3) (undo-tree-id6112 . -9) (undo-tree-id6113 . -15) (undo-tree-id6114 . -9) (undo-tree-id6115 . -15) (undo-tree-id6116 . -16) (undo-tree-id6117 . -15) (undo-tree-id6118 . -16) 2421 (t 24319 46399 524377 872000)) ((2405 . 2421)) (24319 46417 315519 191000) 0 nil]) ((#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (#(" " 0 1 (fontified t)) . 3137) (t 24319 46383 438835 655000)) nil (24319 46417 667826 570000) 0 nil]) ((2409 . 2410)) nil (24319 46383 364565 599000) 0 nil]) ((#("N" 0 1 (fontified t)) . 2409) (t 24319 46322 292575 834000)) nil (24319 46383 364612 747000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1)) nil (24319 46322 197409 633000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2987) (undo-tree-id6089 . -5) (undo-tree-id6090 . -5) (undo-tree-id6091 . -5) (undo-tree-id6092 . -5) (undo-tree-id6093 . -5) (undo-tree-id6094 . -5) (undo-tree-id6095 . -5) (undo-tree-id6096 . -5) (undo-tree-id6097 . -5) 2992) nil (24319 46322 197466 523000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2987) (#("
" 0 1 (fontified t)) . 2987) (t 24319 46314 742790 696000)) nil (24319 46322 197487 155000) 0 nil]) ((2833 . 2840)) nil (24319 46314 670410 896000) 0 nil]) ((nil fontified nil 2832 . 2833) (nil fontified nil 2830 . 2832) (nil fontified nil 2827 . 2830) (nil fontified nil 2826 . 2827) (nil fontified nil 2820 . 2826) (nil fontified nil 2815 . 2820) (nil fontified nil 2813 . 2815) (nil fontified nil 2809 . 2813) (nil fontified nil 2803 . 2809) (nil fontified nil 2799 . 2803) (nil fontified nil 2787 . 2799) (nil fontified nil 2784 . 2787) (nil fontified nil 2777 . 2784) (nil fontified nil 2773 . 2777) (nil fontified nil 2771 . 2773) (nil fontified nil 2770 . 2771) (nil fontified nil 2768 . 2770) (nil fontified nil 2767 . 2768) (nil fontified nil 2764 . 2767) (nil fontified nil 2758 . 2764) (nil fontified nil 2757 . 2758) (nil fontified nil 2754 . 2757) (nil fontified nil 2753 . 2754) (nil fontified nil 2743 . 2753) (nil fontified nil 2742 . 2743) (nil fontified nil 2740 . 2742) (nil fontified nil 2737 . 2740) (nil fontified nil 2736 . 2737) (nil fontified nil 2732 . 2736) (nil fontified nil 2729 . 2732) (nil fontified nil 2724 . 2729) (nil fontified nil 2723 . 2724) (nil fontified nil 2720 . 2723) (2720 . 2833)) nil (24319 46314 670572 125000) 0 nil]) ((#("print (self.rects)" 0 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 11 (fontified t face font-lock-keyword-face) 11 18 (fontified t)) . -2720) (undo-tree-id6060 . -18) (undo-tree-id6061 . -18) (undo-tree-id6062 . -18) (undo-tree-id6063 . -18) (undo-tree-id6064 . -18) (undo-tree-id6065 . 1) (undo-tree-id6066 . -18) (undo-tree-id6067 . 12) (undo-tree-id6068 . -7) (undo-tree-id6069 . -18)) nil (24319 46314 670773 86000) 0 nil]) ((#("cv2.putText(self.img, \"Please Select a single face\", (10, 30), cv2.FONT_HERSHEY_SIMPLEX,
		  0.7, (0, 0, 255), 2)" 0 3 (fontified t) 3 4 (fontified t) 4 9 (fontified t) 9 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (rear-nonsticky t fontified t) 17 20 (fontified t) 20 22 (fontified t) 22 23 (fontified t syntax-table #1# face font-lock-string-face) 23 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 44 (fontified t face font-lock-string-face) 44 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 50 (fontified t face font-lock-string-face) 50 51 (fontified t syntax-table #1# face font-lock-string-face) 51 53 (fontified t) 53 57 (fontified t) 57 64 (fontified t) 64 67 (fontified t) 67 79 (fontified t) 79 83 (fontified t) 83 89 (fontified t) 89 93 (fontified t) 93 95 (fontified t) 95 100 (fontified t) 100 106 (fontified t) 106 107 (fontified t) 107 110 (fontified t) 110 112 (fontified t) 112 113 (rear-nonsticky t fontified t)) . 2892) (undo-tree-id6070 . -113) (undo-tree-id6071 . -113) (undo-tree-id6072 . -113) (undo-tree-id6073 . -20) (undo-tree-id6074 . -20) (undo-tree-id6075 . -20) (undo-tree-id6076 . -113) (undo-tree-id6077 . -90) (undo-tree-id6078 . -90) (undo-tree-id6079 . -113) (undo-tree-id6080 . -90) (undo-tree-id6081 . 1) (undo-tree-id6082 . -113) (undo-tree-id6083 . 102) (undo-tree-id6084 . -12) (undo-tree-id6085 . -113) (undo-tree-id6086 . -113) 3005 (t 24319 46305 686048 449000)) nil (24319 46314 670966 180000) 0 nil]) ((nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1623 . 1627) (nil fontified nil 1621 . 1623) (nil fontified nil 1605 . 1621) (nil fontified nil 1601 . 1605) (nil fontified nil 1598 . 1601) (nil fontified nil 1595 . 1598) (nil fontified nil 1593 . 1595) (nil fontified nil 1592 . 1593) (nil fontified nil 1590 . 1592) (1590 . 1632)) nil (24319 46305 574750 558000) 0 nil]) ((1585 . 1590) (#("    " 0 4 (fontified t)) . 1585) (undo-tree-id6039 . -4) (undo-tree-id6040 . -4) (undo-tree-id6041 . -4) (undo-tree-id6042 . -4) (undo-tree-id6043 . -4) (undo-tree-id6044 . -4) (undo-tree-id6045 . -4) (undo-tree-id6046 . -4) 1589) nil (24319 46305 574943 25000) 0 nil]) ((1584 . 1589)) nil (24319 46305 574993 19000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2391)) nil (24319 46305 575018 462000) 0 nil]) ((#("    " 0 2 (fontified t) 2 4 (fontified t)) . -2391) (undo-tree-id6047 . -4) (undo-tree-id6048 . -4) (undo-tree-id6049 . -4) (undo-tree-id6050 . -4) (undo-tree-id6051 . -4) (undo-tree-id6052 . -4) (undo-tree-id6053 . -4) 2395) nil (24319 46305 575136 784000) 0 nil]) ((#("cv2.imshow(self.faceSelectorWin, self.img)" 0 2 (fontified t) 2 3 (fontified t) 3 5 (fontified t) 5 8 (fontified t) 8 11 (fontified t) 11 15 (fontified t face font-lock-keyword-face) 15 31 (fontified t) 31 33 (fontified t) 33 37 (fontified t face font-lock-keyword-face) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 2395) (undo-tree-id6054 . -31) (undo-tree-id6055 . -31) (undo-tree-id6056 . -31) (undo-tree-id6057 . -42) (undo-tree-id6058 . -31) (undo-tree-id6059 . -42) 2437 (t 24319 46266 158173 388000)) nil (24319 46305 575262 30000) 0 nil]) ((2382 . 2390)) nil (24319 46266 79812 802000) 0 nil]) ((2365 . 2382)) nil (24319 46266 79858 686000) 0 nil]) ((#("s" 0 1 (fontified t)) . -2365) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) 2366) nil (24319 46266 79976 680000) 0 nil]) ((2360 . 2366)) nil (24319 46266 80017 895000) 0 nil]) ((#(">" 0 1 (fontified t)) . -2360) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (#("N" 0 1 (fontified t)) . -2361) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) 2362) nil (24319 46266 80259 123000) 0 nil]) ((2359 . 2362)) nil (24319 46266 80325 11000) 0 nil]) ((#("w" 0 1 (fontified t)) . -2359) (undo-tree-id6037 . -1) (#("." 0 1 (fontified t)) . -2360) (undo-tree-id6038 . -1) 2361) nil (24319 46266 80387 610000) 0 nil]) ((2357 . 2361)) nil (24319 46266 80422 908000) 0 nil]) ((2355 . 2357)) nil (24319 46266 80449 23000) 0 nil]) ((2334 . 2355)) nil (24319 46266 80474 474000) 0 nil]) ((2329 . 2334) (t 24319 46173 267816 991000)) nil (24319 46266 80501 506000) 0 nil] [nil nil ((3559 . 3560)) ((#(" " 0 1 (fontified t)) . 3559) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1)) (24319 46172 788384 742000) 0 nil]) ((nil fontified t 3558 . 3559) (nil face font-lock-string-face 3558 . 3559) (nil syntax-table #1# 3558 . 3559) (nil fontified t 3553 . 3558) (nil face font-lock-string-face 3553 . 3558) (nil fontified t 3552 . 3553) (nil face font-lock-string-face 3552 . 3553) (nil syntax-table #1# 3552 . 3553) (#("'FACES'" 0 1 (fontified t face font-lock-string-face syntax-table #1#) 1 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face syntax-table #1#)) . -3539) (3546 . 3566)) nil (24319 46172 788993 657000) 0 nil]) ((nil fontified t 3092 . 3093) (nil syntax-table #1# 3092 . 3093) (nil face font-lock-string-face 3092 . 3093) (nil fontified t 3087 . 3092) (nil face font-lock-string-face 3087 . 3092) (nil fontified t 3086 . 3087) (nil syntax-table #1# 3086 . 3087) (nil face font-lock-string-face 3086 . 3087) (#("'FACES'" 0 1 (fontified t syntax-table #1# face font-lock-string-face) 1 6 (fontified t face font-lock-string-face) 6 7 (fontified t syntax-table #1# face font-lock-string-face)) . -3073) (3080 . 3100)) nil (24319 46172 788531 596000) 0 nil] [nil nil ((2365 . 2366)) ((#(" " 0 1 (fontified t)) . 2365) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1)) (24319 46166 18284 424000) 0 nil]) ((nil syntax-table #1# 2364 . 2365) (t 24319 46087 800249 341000) (nil face font-lock-string-face 2364 . 2365) (t 24319 46087 800249 341000) (nil fontified t 2364 . 2365) (t 24319 46087 800249 341000) (nil face font-lock-string-face 2359 . 2364) (t 24319 46087 800249 341000) (nil fontified t 2359 . 2364) (t 24319 46087 800249 341000) (nil syntax-table #1# 2358 . 2359) (t 24319 46087 800249 341000) (nil face font-lock-string-face 2358 . 2359) (t 24319 46087 800249 341000) (nil fontified t 2358 . 2359) (t 24319 46087 800249 341000) (#("\"FACES\"" 0 1 (syntax-table #1# face font-lock-string-face fontified t) 1 6 (face font-lock-string-face fontified t) 6 7 (syntax-table #1# face font-lock-string-face fontified t)) . -2345) (t 24319 46087 800249 341000) (2352 . 2372) (t 24319 46087 800249 341000)) nil (24319 46166 18480 8000) 0 nil]) ((2634 . 2635)) nil (24319 46087 700827 130000) 0 nil]) ((2588 . 2589)) nil (24319 46087 700865 571000) 0 nil]) ((2582 . 2587)) nil (24319 46087 700889 817000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2561)) nil (24319 46087 700907 315000) 0 nil]) ((#("      print(tuple([int(i*r) for i in face_utils.rect_to_bb(rect)]))" 0 6 (fontified t) 6 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 17 (fontified t face font-lock-builtin-face) 17 18 (fontified t) 18 19 (fontified t) 19 22 (fontified t face font-lock-builtin-face) 22 28 (fontified t) 28 31 (fontified t face font-lock-keyword-face) 31 34 (fontified t) 34 36 (fontified t face font-lock-keyword-face) 36 45 (fontified t) 45 54 (fontified t) 54 64 (fontified t) 64 66 (fontified t) 66 67 (fontified t rear-nonsticky t)) . -2561) (undo-tree-id5977 . -6) (undo-tree-id5978 . -12) (undo-tree-id5979 . -11) (undo-tree-id5980 . -66) (undo-tree-id5981 . -65) (undo-tree-id5982 . -66) (undo-tree-id5983 . -66) (undo-tree-id5984 . -66) (undo-tree-id5985 . -66) (undo-tree-id5986 . -66) (undo-tree-id5987 . -66) (undo-tree-id5988 . -66) (undo-tree-id5989 . -66) (undo-tree-id5990 . -67) (undo-tree-id5991 . -67) (undo-tree-id5992 . -66) (undo-tree-id5993 . -66) (undo-tree-id5994 . -66) (undo-tree-id5995 . -67) (undo-tree-id5996 . -66) (undo-tree-id5997 . -66) (undo-tree-id5998 . -67) (undo-tree-id5999 . -66) (undo-tree-id6000 . -66) (undo-tree-id6001 . -11) (undo-tree-id6002 . -11) (undo-tree-id6003 . -12) (undo-tree-id6004 . -11) (undo-tree-id6005 . -12) (undo-tree-id6006 . -12) (undo-tree-id6007 . -67) (undo-tree-id6008 . -67) (undo-tree-id6009 . -67) 2628 (t 24319 46070 89753 364000)) nil (24319 46087 701252 296000) 0 nil]) ((2626 . 2627)) nil (24319 46070 4402 443000) 0 nil]) ((2573 . 2579) (t 24319 46056 836130 556000)) nil (24319 46070 4420 478000) 0 nil]) ((2619 . 2620)) ((#("]" 0 1 (fontified t)) . 2619) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1)) (24319 46051 741433 791000) 0 nil]) ((2573 . 2574)) nil (24319 46051 357769 642000) 0 nil] [nil ([nil nil ((2620 . 2621)) ((#(")" 0 1 (fontified t)) . 2620) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (t 24319 46005 572589 480000)) (24319 46005 463208 613000) 0 nil]) ((2572 . 2573) (t 24319 45993 899921 677000)) ((#("(" 0 1 (fontified t)) . 2572)) (24319 46012 127211 913000) 0 nil]) ((2567 . 2572) (t 24319 45989 796038 471000)) nil (24319 46012 558523 461000) 0 nil]) ((nil rear-nonsticky nil 2613 . 2614) (nil fontified nil 2603 . 2614) (nil fontified nil 2594 . 2603) (nil fontified nil 2585 . 2594) (nil fontified nil 2583 . 2585) (nil fontified nil 2580 . 2583) (nil fontified nil 2577 . 2580) (nil fontified nil 2571 . 2577) (nil fontified nil 2568 . 2571) (nil fontified nil 2567 . 2568) (2567 . 2614)) nil (24319 45989 719567 294000) 0 nil]) ((2560 . 2567) (t 24319 45968 502644 466000)) nil (24319 45989 719626 508000) 0 nil]) ((3111 . 3112)) nil (24319 45968 368227 944000) 0 nil]) ((#("0" 0 1 (fontified t)) . 3111) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (t 24319 45936 557553 598000)) nil (24319 45968 368333 62000) 0 nil]) ((2638 . 2656)) nil (24319 45936 401093 33000) 0 nil]) ((2631 . 2638) (t 24319 45915 983139 136000)) nil (24319 45936 401143 130000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1818) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) 1819) nil (24319 45915 881732 987000) 0 nil]) ((1816 . 1819)) nil (24319 45915 881780 349000) 0 nil]) ((1758 . 1759)) nil (24319 45915 881809 186000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1758)) nil (24319 45915 881833 717000) 0 nil]) ((1752 . 1755)) nil (24319 45915 881859 55000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1752)) nil (24319 45915 881882 944000) 0 nil]) ((1711 . 1714)) nil (24319 45915 881907 399000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1711) (t 24319 45892 479808 25000)) nil (24319 45915 881935 291000) 0 nil]) ((3108 . 3122)) nil (24319 45892 370890 661000) 0 nil]) ((3103 . 3108)) nil (24319 45892 370929 603000) 0 nil]) ((3082 . 3103)) nil (24319 45892 370954 14000) 0 nil]) ((3117 . 3119)) nil (24319 45892 370972 229000) 0 nil]) ((3082 . 3106)) nil (24319 45892 370988 685000) 0 nil]) ((3080 . 3081)) nil (24319 45892 371004 604000) 0 nil]) ((#("1" 0 1 (fontified t)) . 3080) (t 24319 45857 471804 334000)) nil (24319 45892 371026 309000) 0 nil]) ((nil rear-nonsticky nil 3448 . 3449) (nil fontified nil 3448 . 3449) (nil fontified nil 3444 . 3448) (3444 . 3449)) nil (24319 45857 394346 640000) 0 nil]) ((nil rear-nonsticky nil 2657 . 2658) (nil fontified nil 2657 . 2658) (nil fontified nil 2653 . 2657) (2653 . 2658)) nil (24319 45857 394365 307000) 0 nil]) ((2563 . 2566)) nil (24319 45857 394374 87000) 0 nil]) ((#(";" 0 1 (fontified t)) . -2563) (undo-tree-id5949 . -1) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -2564) (undo-tree-id5950 . -1) 2565) nil (24319 45857 394394 953000) 0 nil]) ((2561 . 2565)) nil (24319 45857 394403 686000) 0 nil]) ((2363 . 2368) (t 24319 45641 137961 38000)) nil (24319 45857 394410 513000) 0 nil]) ((#("self.img,
                           " 0 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t) 5 10 (fontified t) 10 14 (fontified t) 14 17 (fontified t) 17 26 (fontified t) 26 37 (fontified t)) . 2643) (undo-tree-id5942 . -37) (undo-tree-id5943 . -37) (undo-tree-id5944 . -37) (undo-tree-id5945 . -10) (undo-tree-id5946 . -37) (undo-tree-id5947 . -37) (undo-tree-id5948 . -37)) ((2643 . 2680) (t 24319 45641 137961 38000)) (24319 45694 742908 418000) 0 nil]) ((#("
                           " 0 1 (fontified t) 1 25 (fontified t) 25 28 (fontified t)) . -1700) (undo-tree-id5937 . -28) (undo-tree-id5938 . -28) (undo-tree-id5939 . -28) 1728) nil (24319 45694 135963 985000) 0 nil]) ((#("self.img,        #image" 0 4 (fontified t face font-lock-keyword-face) 4 8 (fontified t) 8 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 17 (fontified t) 17 18 (fontified t face font-lock-comment-delimiter-face) 18 23 (fontified t face font-lock-comment-face)) . -1700) (undo-tree-id5940 . -23) (undo-tree-id5941 . -23) 1723) nil (24319 45641 27311 876000) 0 nil]) ((1437 . 1442)) nil (24319 45641 27345 66000) 0 nil] [nil nil ((nil rear-nonsticky nil 2950 . 2951) (nil fontified nil 2949 . 2951) (nil fontified nil 2945 . 2949) (nil fontified nil 2944 . 2945) (nil fontified nil 2931 . 2944) (nil fontified nil 2922 . 2931) (nil fontified nil 2913 . 2922) (nil fontified nil 2911 . 2913) (nil fontified nil 2908 . 2911) (nil fontified nil 2905 . 2908) (nil fontified nil 2899 . 2905) (nil fontified nil 2896 . 2899) (nil fontified nil 2895 . 2896) (nil fontified nil 2891 . 2895) (nil fontified nil 2890 . 2891) (nil fontified nil 2885 . 2890) (nil fontified nil 2881 . 2885) (nil fontified nil 2879 . 2881) (nil fontified nil 2878 . 2879) (nil fontified nil 2876 . 2878) (nil fontified nil 2872 . 2876) (nil fontified nil 2867 . 2872) (nil fontified nil 2861 . 2867) (nil fontified nil 2860 . 2861) (nil fontified nil 2854 . 2860) (nil fontified nil 2845 . 2854) (nil fontified nil 2843 . 2845) (nil fontified nil 2840 . 2843) (nil fontified nil 2829 . 2840) (nil fontified nil 2825 . 2829) (nil fontified nil 2823 . 2825) (nil fontified nil 2817 . 2823) (nil fontified nil 2815 . 2817) (nil fontified nil 2809 . 2815) (nil fontified nil 2800 . 2809) (nil fontified nil 2793 . 2800) (nil fontified nil 2774 . 2793) (nil fontified nil 2773 . 2774) (nil fontified nil 2761 . 2773) (nil fontified nil 2759 . 2761) (nil fontified nil 2753 . 2759) (nil fontified nil 2752 . 2753) (nil fontified nil 2746 . 2752) (nil fontified nil 2745 . 2746) (nil fontified nil 2743 . 2745) (nil fontified nil 2737 . 2743) (nil fontified nil 2731 . 2737) (nil fontified nil 2728 . 2731) (nil fontified nil 2727 . 2728) (nil fontified nil 2725 . 2727) (nil fontified nil 2724 . 2725) (nil fontified nil 2720 . 2724) (nil fontified nil 2710 . 2720) (nil fontified nil 2707 . 2710) (nil fontified nil 2703 . 2707) (nil fontified nil 2702 . 2703) (nil fontified nil 2697 . 2702) (nil fontified nil 2692 . 2697) (nil fontified nil 2688 . 2692) (nil fontified nil 2687 . 2688) (nil fontified nil 2686 . 2687) (nil fontified nil 2685 . 2686) (nil fontified nil 2684 . 2685) (nil fontified nil 2683 . 2684) (nil fontified nil 2682 . 2683) (nil fontified nil 2681 . 2682) (nil fontified nil 2677 . 2681) (nil fontified nil 2675 . 2677) (nil fontified nil 2674 . 2675) (nil fontified nil 2669 . 2674) (nil fontified nil 2668 . 2669) (nil fontified nil 2665 . 2668) (nil fontified nil 2662 . 2665) (nil fontified nil 2660 . 2662) (nil fontified nil 2659 . 2660) (nil fontified nil 2657 . 2659) (nil fontified nil 2653 . 2657) (nil fontified nil 2652 . 2653) (nil fontified nil 2651 . 2652) (nil fontified nil 2647 . 2651) (nil fontified nil 2645 . 2647) (nil fontified nil 2630 . 2645) (nil fontified nil 2629 . 2630) (nil fontified nil 2625 . 2629) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2622 . 2623) (nil fontified nil 2614 . 2622) (nil fontified nil 2609 . 2614) (nil fontified nil 2607 . 2609) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2602 . 2605) (nil fontified nil 2601 . 2602) (nil fontified nil 2600 . 2601) (nil fontified nil 2597 . 2600) (nil fontified nil 2595 . 2597) (nil fontified nil 2593 . 2595) (nil fontified nil 2592 . 2593) (nil fontified nil 2591 . 2592) (nil fontified nil 2577 . 2591) (nil fontified nil 2574 . 2577) (nil fontified nil 2573 . 2574) (nil fontified nil 2570 . 2573) (nil fontified nil 2569 . 2570) (nil fontified nil 2568 . 2569) (nil fontified nil 2557 . 2568) (nil fontified nil 2554 . 2557) (nil fontified nil 2553 . 2554) (nil fontified nil 2552 . 2553) (nil fontified nil 2549 . 2552) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2546 . 2547) (nil fontified nil 2531 . 2546) (nil fontified nil 2530 . 2531) (nil fontified nil 2525 . 2530) (nil fontified nil 2523 . 2525) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2511 . 2521) (nil fontified nil 2508 . 2511) (nil fontified nil 2507 . 2508) (nil fontified nil 2504 . 2507) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2498 . 2501) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2493 . 2496) (nil fontified nil 2490 . 2493) (nil fontified nil 2489 . 2490) (nil fontified nil 2486 . 2489) (nil fontified nil 2483 . 2486) (nil fontified nil 2482 . 2483) (nil fontified nil 2478 . 2482) (nil fontified nil 2474 . 2478) (nil fontified nil 2470 . 2474) (nil fontified nil 2469 . 2470) (nil fontified nil 2454 . 2469) (nil fontified nil 2434 . 2454) (nil fontified nil 2433 . 2434) (nil fontified nil 2429 . 2433) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2421 . 2427) (nil fontified nil 2420 . 2421) (nil fontified nil 2417 . 2420) (nil fontified nil 2413 . 2417) (nil fontified nil 2410 . 2413) (nil fontified nil 2366 . 2410) (nil fontified nil 2355 . 2366) (nil fontified nil 2351 . 2355) (nil fontified nil 2348 . 2351) (nil fontified nil 2346 . 2348) (nil fontified nil 2344 . 2346) (nil fontified nil 2340 . 2344) (nil fontified nil 2324 . 2340) (nil fontified nil 2317 . 2324) (nil fontified nil 2315 . 2317) (nil fontified nil 2311 . 2315) (nil fontified nil 2309 . 2311) (nil fontified nil 2299 . 2309) (nil fontified nil 2293 . 2299) (nil fontified nil 2288 . 2293) (nil fontified nil 2284 . 2288) (nil fontified nil 2283 . 2284) (nil fontified nil 2281 . 2283) (nil fontified nil 2279 . 2281) (nil fontified nil 2274 . 2279) (nil fontified nil 2271 . 2274) (nil fontified nil 2254 . 2271) (nil fontified nil 2242 . 2254) (nil fontified nil 2239 . 2242) (nil fontified nil 2228 . 2239) (nil fontified nil 2225 . 2228) (nil fontified nil 2224 . 2225) (nil fontified nil 2220 . 2224) (nil fontified nil 2217 . 2220) (nil fontified nil 2214 . 2217) (nil fontified nil 2205 . 2214) (nil fontified nil 2187 . 2205) (nil fontified nil 2183 . 2187) (nil fontified nil 2182 . 2183) (nil fontified nil 2176 . 2182) (nil fontified nil 2166 . 2176) (nil fontified nil 2165 . 2166) (nil fontified nil 2162 . 2165) (nil fontified nil 2160 . 2162) (nil fontified nil 2159 . 2160) (nil fontified nil 2155 . 2159) (nil fontified nil 2154 . 2155) (nil fontified nil 2149 . 2154) (nil fontified nil 2148 . 2149) (nil fontified nil 2143 . 2148) (nil fontified nil 2141 . 2143) (nil fontified nil 2140 . 2141) (nil fontified nil 2139 . 2140) (nil fontified nil 2131 . 2139) (nil fontified nil 2104 . 2131) (nil fontified nil 2103 . 2104) (nil fontified nil 2097 . 2103) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2085 . 2095) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2080 . 2083) (nil fontified nil 2079 . 2080) (nil fontified nil 2052 . 2079) (nil fontified nil 2051 . 2052) (nil fontified nil 2047 . 2051) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2041 . 2045) (nil fontified nil 2040 . 2041) (nil fontified nil 2034 . 2040) (nil fontified nil 2033 . 2034) (nil fontified nil 2029 . 2033) (nil fontified nil 2026 . 2029) (nil fontified nil 2002 . 2026) (nil fontified nil 2001 . 2002) (nil fontified nil 1996 . 2001) (nil fontified nil 1995 . 1996) (nil fontified nil 1992 . 1995) (nil fontified nil 1991 . 1992) (nil fontified nil 1986 . 1991) (nil fontified nil 1982 . 1986) (nil fontified nil 1978 . 1982) (nil fontified nil 1977 . 1978) (nil fontified nil 1962 . 1977) (nil fontified nil 1961 . 1962) (nil fontified nil 1957 . 1961) (nil fontified nil 1951 . 1957) (nil fontified nil 1950 . 1951) (nil fontified nil 1927 . 1950) (nil fontified nil 1926 . 1927) (nil fontified nil 1914 . 1926) (nil fontified nil 1912 . 1914) (nil fontified nil 1908 . 1912) (nil fontified nil 1905 . 1908) (nil fontified nil 1900 . 1905) (nil fontified nil 1896 . 1900) (nil fontified nil 1895 . 1896) (nil fontified nil 1875 . 1895) (nil fontified nil 1874 . 1875) (nil fontified nil 1871 . 1874) (nil fontified nil 1869 . 1871) (nil fontified nil 1868 . 1869) (nil fontified nil 1867 . 1868) (nil fontified nil 1863 . 1867) (nil fontified nil 1862 . 1863) (nil fontified nil 1822 . 1862) (nil fontified nil 1806 . 1822) (nil fontified nil 1772 . 1806) (nil fontified nil 1758 . 1772) (nil fontified nil 1752 . 1758) (nil fontified nil 1751 . 1752) (nil fontified nil 1750 . 1751) (nil fontified nil 1748 . 1750) (nil fontified nil 1747 . 1748) (nil fontified nil 1742 . 1747) (nil fontified nil 1741 . 1742) (nil fontified nil 1725 . 1741) (nil fontified nil 1720 . 1725) (nil fontified nil 1719 . 1720) (nil fontified nil 1715 . 1719) (nil fontified nil 1699 . 1715) (nil fontified nil 1678 . 1699) (nil fontified nil 1676 . 1678) (nil fontified nil 1672 . 1676) (nil fontified nil 1671 . 1672) (nil fontified nil 1629 . 1671) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1623 . 1627) (nil fontified nil 1622 . 1623) (nil fontified nil 1605 . 1622) (nil fontified nil 1547 . 1605) (nil fontified nil 1546 . 1547) (nil fontified nil 1542 . 1546) (nil fontified nil 1541 . 1542) (nil fontified nil 1540 . 1541) (nil fontified nil 1536 . 1540) (nil fontified nil 1521 . 1536) (nil fontified nil 1517 . 1521) (nil fontified nil 1516 . 1517) (nil fontified nil 1515 . 1516) (nil fontified nil 1513 . 1515) (nil fontified nil 1492 . 1513) (nil fontified nil 1488 . 1492) (nil fontified nil 1487 . 1488) (nil fontified nil 1472 . 1487) (nil fontified nil 1471 . 1472) (nil fontified nil 1468 . 1471) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1448 . 1465) (nil fontified nil 1444 . 1448) (nil fontified nil 1438 . 1444) (nil fontified nil 1437 . 1438) (1437 . 2951)) ((#("
      self.face = faces[0]

  def UpdateRectColor(self, rect, rectId, color):

    (x, y, w, h) = rect

    #plot the rectangle (remember to downsize the coordinates)
    cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

    # show the face number
    cv2.putText(self.img,
                \"Face #{}\".format(rectId + 1),
                (x - 10, y - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)
    

  def faceSelectorCallback(self, val):
    if (val > 0): #0 = nothing is selected
      self.UpdateRectColor(self.img,        #image
                           self.rects[x-1], #rect
                           x-1,             #rectId
                           (0,0,255))       #color
    
  def SelectSingleFace(self, faces, downsampleWidth = 500):
    \"\"\"
    Select a single face out of all the ones available

    Arguments:
    - `faces`: the recognized rects of faces
    - `downsampleWidth`: the width of downsampled image to present if needed
    \"\"\"
    #downsample the image for easier picking
    self.img = imutils.resize(self.m_image.copy(), width=downsampleWidth)

    #resizing ratio
    r = downsampleWidth / float(self.m_image.shape[1])

    #show downsampled image
    cv2.imshow(\"FACES\", self.img)

    rects = []
    for (rectId,rect) in enumerate(faces):
      
      # convert dlib's rectangle to a OpenCV-style bounding box
      # [i.e., (x, y, w, h)], then draw the face bounding box
      rects += [(int(i*r) for i in face_utils.rect_to_bb(rect))]

      " 0 1 (fontified nil) 1 7 (fontified nil) 7 11 (fontified nil face font-lock-keyword-face) 11 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 34 (fontified nil face font-lock-keyword-face) 34 35 (fontified nil) 35 50 (fontified nil face font-lock-function-name-face) 50 51 (fontified nil) 51 55 (fontified nil face font-lock-keyword-face) 55 76 (fontified nil) 76 78 (fontified nil) 78 79 (fontified nil) 79 80 (fontified nil) 80 84 (fontified nil) 84 99 (fontified nil) 99 103 (fontified nil) 103 104 (fontified nil) 104 105 (fontified nil) 105 109 (fontified nil) 109 110 (fontified nil face font-lock-comment-delimiter-face) 110 168 (fontified nil face font-lock-comment-face) 168 185 (fontified nil) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 191 (rear-nonsticky t fontified nil) 191 192 (fontified nil) 192 234 (fontified nil) 234 235 (fontified nil) 235 239 (fontified nil) 239 241 (fontified nil face font-lock-comment-delimiter-face) 241 262 (fontified nil face font-lock-comment-face) 262 278 (fontified nil) 278 282 (fontified nil face font-lock-keyword-face) 282 283 (rear-nonsticky t fontified nil) 283 288 (fontified nil) 288 304 (fontified nil) 304 305 (fontified nil syntax-table #1# face font-lock-string-face) 305 310 (fontified nil face font-lock-string-face) 310 311 (fontified nil face font-lock-string-face) 311 313 (fontified nil face font-lock-string-face) 313 314 (fontified nil syntax-table #1# face font-lock-string-face) 314 315 (fontified nil) 315 321 (fontified nil face font-lock-builtin-face) 321 335 (fontified nil) 335 369 (fontified nil) 369 385 (fontified nil) 385 425 (fontified nil) 425 426 (fontified nil) 426 430 (fontified nil) 430 431 (fontified nil) 431 432 (fontified nil) 432 434 (fontified nil) 434 437 (fontified nil face font-lock-keyword-face) 437 438 (fontified nil) 438 458 (fontified nil face font-lock-function-name-face) 458 459 (fontified nil) 459 463 (fontified nil face font-lock-keyword-face) 463 468 (fontified nil) 468 471 (fontified nil) 471 475 (fontified nil) 475 477 (fontified nil face font-lock-keyword-face) 477 489 (fontified nil) 489 490 (fontified nil face font-lock-comment-delimiter-face) 490 500 (fontified nil face font-lock-comment-face) 500 513 (fontified nil face font-lock-comment-face) 513 514 (fontified nil face font-lock-comment-face) 514 520 (fontified nil) 520 524 (fontified nil face font-lock-keyword-face) 524 525 (fontified nil) 525 540 (fontified nil) 540 541 (fontified nil) 541 545 (fontified nil face font-lock-keyword-face) 545 549 (fontified nil) 549 554 (fontified nil) 554 555 (fontified nil) 555 558 (fontified nil) 558 559 (fontified nil face font-lock-comment-delimiter-face) 559 564 (fontified nil face font-lock-comment-face) 564 565 (fontified nil face font-lock-comment-face) 565 589 (fontified nil) 589 592 (fontified nil) 592 596 (fontified nil face font-lock-keyword-face) 596 597 (fontified nil) 597 603 (fontified nil) 603 604 (fontified nil) 604 608 (fontified nil) 608 609 (fontified nil) 609 610 (fontified nil face font-lock-comment-delimiter-face) 610 614 (fontified nil face font-lock-comment-face) 614 615 (fontified nil face font-lock-comment-face) 615 642 (fontified nil) 642 643 (fontified nil) 643 646 (fontified nil) 646 647 (fontified nil) 647 648 (fontified nil) 648 658 (fontified nil) 658 659 (fontified nil) 659 660 (fontified nil face font-lock-comment-delimiter-face) 660 666 (fontified nil face font-lock-comment-face) 666 667 (fontified nil face font-lock-comment-face) 667 694 (fontified nil) 694 702 (fontified nil) 702 703 (rear-nonsticky t fontified nil) 703 704 (rear-nonsticky t fontified nil) 704 706 (fontified nil) 706 711 (fontified nil) 711 712 (fontified nil face font-lock-comment-delimiter-face) 712 717 (fontified nil face font-lock-comment-face) 717 718 (fontified nil face font-lock-comment-face) 718 722 (fontified nil) 722 723 (fontified nil) 723 725 (fontified nil) 725 728 (fontified nil face font-lock-keyword-face) 728 729 (fontified nil) 729 739 (fontified nil face font-lock-function-name-face) 739 745 (fontified nil face font-lock-function-name-face) 745 746 (fontified nil) 746 750 (fontified nil face font-lock-keyword-face) 750 768 (fontified nil) 768 777 (fontified nil) 777 780 (fontified nil) 780 783 (fontified nil) 783 787 (fontified nil) 787 788 (fontified nil syntax-table #1# face font-lock-string-face) 788 791 (fontified nil face font-lock-string-face) 791 802 (fontified nil face font-lock-string-face) 802 805 (fontified nil face font-lock-string-face) 805 817 (fontified nil face font-lock-string-face) 817 834 (fontified nil face font-lock-string-face) 834 837 (fontified nil face font-lock-string-face) 837 842 (fontified nil face font-lock-string-face) 842 844 (fontified nil face font-lock-string-face) 844 846 (fontified nil face font-lock-string-face) 846 847 (fontified nil face font-lock-string-face) 847 851 (fontified nil face font-lock-string-face) 851 856 (fontified nil face font-lock-string-face) 856 862 (fontified nil face font-lock-string-face) 862 872 (fontified nil face font-lock-string-face) 872 874 (fontified nil face font-lock-string-face) 874 878 (fontified nil face font-lock-string-face) 878 880 (fontified nil face font-lock-string-face) 880 887 (fontified nil face font-lock-string-face) 887 903 (fontified nil face font-lock-string-face) 903 907 (fontified nil face font-lock-string-face) 907 909 (fontified nil face font-lock-string-face) 909 911 (fontified nil face font-lock-string-face) 911 914 (fontified nil face font-lock-string-face) 914 918 (fontified nil face font-lock-string-face) 918 929 (fontified nil face font-lock-string-face) 929 973 (fontified nil face font-lock-string-face) 973 976 (fontified nil face font-lock-string-face) 976 980 (fontified nil face font-lock-string-face) 980 983 (fontified nil face font-lock-string-face) 983 984 (fontified nil face font-lock-string-face) 984 990 (fontified nil face font-lock-string-face) 990 991 (fontified nil syntax-table #1# face font-lock-string-face) 991 992 (fontified nil) 992 996 (fontified nil) 996 997 (fontified nil face font-lock-comment-delimiter-face) 997 1014 (fontified nil face font-lock-comment-face) 1014 1017 (fontified nil face font-lock-comment-face) 1017 1032 (fontified nil face font-lock-comment-face) 1032 1033 (fontified nil face font-lock-comment-face) 1033 1037 (fontified nil face font-lock-comment-face) 1037 1041 (fontified nil) 1041 1045 (fontified nil face font-lock-keyword-face) 1045 1046 (fontified nil) 1046 1049 (fontified nil) 1049 1052 (fontified nil) 1052 1053 (fontified nil) 1053 1056 (fontified nil) 1056 1059 (fontified nil) 1059 1060 (fontified nil) 1060 1061 (fontified nil) 1061 1064 (fontified nil) 1064 1065 (fontified nil) 1065 1066 (fontified nil) 1066 1067 (fontified nil) 1067 1070 (fontified nil face font-lock-keyword-face) 1070 1071 (fontified nil face font-lock-keyword-face) 1071 1074 (fontified nil) 1074 1084 (fontified nil) 1084 1085 (rear-nonsticky t fontified nil) 1085 1086 (fontified nil) 1086 1088 (fontified nil) 1088 1093 (fontified nil) 1093 1094 (fontified nil) 1094 1109 (fontified nil) 1109 1110 (rear-nonsticky t fontified nil) 1110 1111 (fontified nil) 1111 1112 (fontified nil) 1112 1115 (fontified nil) 1115 1116 (fontified nil) 1116 1117 (fontified nil face font-lock-comment-delimiter-face) 1117 1120 (fontified nil face font-lock-comment-face) 1120 1131 (fontified nil face font-lock-comment-face) 1131 1132 (fontified nil face font-lock-comment-face) 1132 1133 (fontified nil) 1133 1136 (fontified nil) 1136 1137 (fontified nil) 1137 1140 (fontified nil) 1140 1154 (fontified nil) 1154 1155 (fontified nil) 1155 1156 (fontified nil) 1156 1158 (fontified nil) 1158 1160 (fontified nil face font-lock-builtin-face) 1160 1163 (fontified nil face font-lock-builtin-face) 1163 1164 (fontified nil) 1164 1165 (fontified nil face font-lock-keyword-face) 1165 1168 (fontified nil face font-lock-keyword-face) 1168 1169 (fontified nil) 1169 1170 (fontified nil) 1170 1172 (fontified nil) 1172 1177 (fontified nil) 1177 1185 (fontified nil) 1185 1186 (rear-nonsticky t fontified nil) 1186 1187 (fontified nil) 1187 1188 (fontified nil) 1188 1192 (fontified nil) 1192 1193 (fontified nil face font-lock-comment-delimiter-face) 1193 1208 (fontified nil face font-lock-comment-face) 1208 1210 (fontified nil face font-lock-comment-face) 1210 1214 (fontified nil face font-lock-comment-face) 1214 1215 (fontified nil face font-lock-comment-face) 1215 1216 (fontified nil face font-lock-comment-face) 1216 1220 (fontified nil) 1220 1222 (fontified nil) 1222 1223 (fontified nil) 1223 1225 (fontified nil) 1225 1228 (fontified nil) 1228 1231 (fontified nil) 1231 1232 (fontified nil syntax-table #1# face font-lock-string-face) 1232 1237 (fontified nil face font-lock-string-face) 1237 1238 (fontified nil syntax-table #1# face font-lock-string-face) 1238 1240 (fontified nil) 1240 1244 (fontified nil face font-lock-keyword-face) 1244 1245 (rear-nonsticky t fontified nil) 1245 1246 (fontified nil) 1246 1247 (fontified nil) 1247 1248 (fontified nil) 1248 1249 (rear-nonsticky t fontified nil) 1249 1250 (fontified nil) 1250 1251 (fontified nil) 1251 1255 (fontified nil) 1255 1260 (fontified nil) 1260 1265 (fontified nil) 1265 1266 (fontified nil) 1266 1270 (fontified nil) 1270 1273 (fontified nil face font-lock-keyword-face) 1273 1283 (fontified nil) 1283 1287 (fontified nil) 1287 1288 (fontified nil) 1288 1290 (fontified nil face font-lock-keyword-face) 1290 1291 (fontified nil) 1291 1294 (fontified nil face font-lock-builtin-face) 1294 1300 (fontified nil face font-lock-builtin-face) 1300 1306 (fontified nil) 1306 1308 (fontified nil) 1308 1309 (fontified nil) 1309 1315 (fontified nil) 1315 1316 (fontified nil) 1316 1322 (fontified nil) 1322 1324 (fontified nil face font-lock-comment-delimiter-face) 1324 1336 (fontified nil face font-lock-comment-face) 1336 1337 (fontified nil syntax-table #1# face font-lock-comment-face) 1337 1356 (fontified nil face font-lock-comment-face) 1356 1363 (fontified nil face font-lock-comment-face) 1363 1372 (fontified nil face font-lock-comment-face) 1372 1378 (fontified nil face font-lock-comment-face) 1378 1380 (fontified nil face font-lock-comment-face) 1380 1386 (fontified nil) 1386 1388 (fontified nil face font-lock-comment-delimiter-face) 1388 1392 (fontified nil face font-lock-comment-face) 1392 1403 (fontified nil face font-lock-comment-face) 1403 1406 (fontified nil face font-lock-comment-face) 1406 1408 (fontified nil face font-lock-comment-face) 1408 1417 (fontified nil face font-lock-comment-face) 1417 1423 (fontified nil face font-lock-comment-face) 1423 1424 (fontified nil face font-lock-comment-face) 1424 1430 (fontified nil face font-lock-comment-face) 1430 1435 (fontified nil face font-lock-comment-face) 1435 1439 (fontified nil face font-lock-comment-face) 1439 1441 (fontified nil face font-lock-comment-face) 1441 1442 (fontified nil face font-lock-comment-face) 1442 1444 (fontified nil) 1444 1448 (fontified nil) 1448 1453 (fontified nil) 1453 1454 (fontified nil) 1454 1458 (fontified nil) 1458 1459 (fontified nil) 1459 1462 (fontified nil face font-lock-builtin-face) 1462 1468 (fontified nil) 1468 1471 (fontified nil face font-lock-keyword-face) 1471 1474 (fontified nil) 1474 1476 (fontified nil face font-lock-keyword-face) 1476 1485 (fontified nil) 1485 1494 (fontified nil) 1494 1507 (fontified nil) 1507 1508 (fontified nil) 1508 1512 (fontified nil) 1512 1513 (fontified nil) 1513 1514 (fontified nil rear-nonsticky nil)) . 1437) (undo-tree-id5929 . -1514) (undo-tree-id5930 . -1514) (undo-tree-id5931 . -1514) (nil fontified t 1437 . 1438) (nil fontified t 1448 . 1465) (nil fontified t 1465 . 1466) (nil fontified t 1515 . 1516) (nil fontified t 1516 . 1517) (nil fontified t 1540 . 1541) (nil fontified t 1541 . 1542) (nil fontified t 1547 . 1605) (nil fontified t 1629 . 1671) (nil fontified t 1671 . 1672) (nil fontified t 1678 . 1699) (nil fontified t 1720 . 1725) (nil fontified t 1758 . 1772) (nil fontified t 1772 . 1806) (nil fontified t 1862 . 1863) (nil fontified t 1867 . 1868) (nil fontified t 1868 . 1869) (nil fontified t 1905 . 1908) (nil fontified t 1950 . 1951) (nil fontified t 2001 . 2002) (nil fontified t 2051 . 2052) (nil fontified t 2103 . 2104) (nil fontified t 2154 . 2155) (nil fontified t 2159 . 2160) (nil fontified t 2217 . 2220) (nil fontified t 2225 . 2228) (nil fontified t 2281 . 2283) (nil fontified t 2283 . 2284) (nil fontified t 2293 . 2299) (nil fontified t 2340 . 2344) (nil fontified t 2420 . 2421) (nil fontified t 2428 . 2429) (nil fontified t 2470 . 2474) (nil fontified t 2547 . 2548) (nil fontified t 2548 . 2549) (nil fontified t 2568 . 2569) (nil fontified t 2623 . 2624) (nil fontified t 2624 . 2625) (nil fontified t 2652 . 2653) (nil fontified t 2686 . 2687) (nil fontified t 2687 . 2688) (nil fontified t 2702 . 2703) (nil fontified t 2745 . 2746) (nil fontified t 2752 . 2753) (nil fontified t 2815 . 2817) (nil fontified t 2878 . 2879) (nil fontified t 2931 . 2944) (nil fontified t 2944 . 2945) (nil rear-nonsticky t 2950 . 2951)) (24319 45623 17314 601000) 0 nil] [nil nil ((nil rear-nonsticky nil 2950 . 2951) (nil fontified nil 2944 . 2945) (nil fontified nil 2931 . 2944) (nil fontified nil 2878 . 2879) (nil fontified nil 2815 . 2817) (nil fontified nil 2752 . 2753) (nil fontified nil 2745 . 2746) (nil fontified nil 2702 . 2703) (nil fontified nil 2687 . 2688) (nil fontified nil 2686 . 2687) (nil fontified nil 2652 . 2653) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2568 . 2569) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2470 . 2474) (nil fontified nil 2428 . 2429) (nil fontified nil 2420 . 2421) (nil fontified nil 2340 . 2344) (nil fontified nil 2293 . 2299) (nil fontified nil 2283 . 2284) (nil fontified nil 2281 . 2283) (nil fontified nil 2225 . 2228) (nil fontified nil 2217 . 2220) (nil fontified nil 2159 . 2160) (nil fontified nil 2154 . 2155) (nil fontified nil 2103 . 2104) (nil fontified nil 2051 . 2052) (nil fontified nil 2001 . 2002) (nil fontified nil 1950 . 1951) (nil fontified nil 1905 . 1908) (nil fontified nil 1868 . 1869) (nil fontified nil 1867 . 1868) (nil fontified nil 1862 . 1863) (nil fontified nil 1772 . 1806) (nil fontified nil 1758 . 1772) (nil fontified nil 1720 . 1725) (nil fontified nil 1678 . 1699) (nil fontified nil 1671 . 1672) (nil fontified nil 1629 . 1671) (nil fontified nil 1547 . 1605) (nil fontified nil 1541 . 1542) (nil fontified nil 1540 . 1541) (nil fontified nil 1516 . 1517) (nil fontified nil 1515 . 1516) (nil fontified nil 1465 . 1466) (nil fontified nil 1448 . 1465) (nil fontified nil 1437 . 1438) (1437 . 2951)) ((#("
      self.face = faces[0]

  def UpdateRectColor(self, rect, rectId, color):

    (x, y, w, h) = rect

    #plot the rectangle (remember to downsize the coordinates)
    cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

    # show the face number
    cv2.putText(self.img,
                \"Face #{}\".format(rectId + 1),
                (x - 10, y - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)
    

  def faceSelectorCallback(self, val):
    if (val > 0): #0 = nothing is selected
      self.UpdateRectColor(self.img,        #image
                           self.rects[x-1], #rect
                           x-1,             #rectId
                           (0,0,255))       #color
    
  def SelectSingleFace(self, faces, downsampleWidth = 500):
    \"\"\"
    Select a single face out of all the ones available

    Arguments:
    - `faces`: the recognized rects of faces
    - `downsampleWidth`: the width of downsampled image to present if needed
    \"\"\"
    #downsample the image for easier picking
    self.img = imutils.resize(self.m_image.copy(), width=downsampleWidth)

    #resizing ratio
    r = downsampleWidth / float(self.m_image.shape[1])

    #show downsampled image
    cv2.imshow(\"FACES\", self.img)

    rects = []
    for (rectId,rect) in enumerate(faces):
      
      # convert dlib's rectangle to a OpenCV-style bounding box
      # [i.e., (x, y, w, h)], then draw the face bounding box
      rects += [(int(i*r) for i in face_utils.rect_to_bb(rect))]

      " 0 1 (fontified nil) 1 7 (fontified nil) 7 11 (fontified nil face font-lock-keyword-face) 11 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 34 (fontified nil face font-lock-keyword-face) 34 35 (fontified nil) 35 50 (fontified nil face font-lock-function-name-face) 50 51 (fontified nil) 51 55 (fontified nil face font-lock-keyword-face) 55 76 (fontified nil) 76 78 (fontified nil) 78 79 (fontified nil) 79 80 (fontified nil) 80 84 (fontified nil) 84 99 (fontified nil) 99 103 (fontified nil) 103 104 (fontified nil) 104 105 (fontified nil) 105 109 (fontified nil) 109 110 (fontified nil face font-lock-comment-delimiter-face) 110 168 (fontified nil face font-lock-comment-face) 168 185 (fontified nil) 185 186 (fontified nil) 186 190 (fontified nil face font-lock-keyword-face) 190 191 (rear-nonsticky t fontified nil) 191 192 (fontified nil) 192 234 (fontified nil) 234 235 (fontified nil) 235 239 (fontified nil) 239 241 (fontified nil face font-lock-comment-delimiter-face) 241 262 (fontified nil face font-lock-comment-face) 262 278 (fontified nil) 278 282 (fontified nil face font-lock-keyword-face) 282 283 (rear-nonsticky t fontified nil) 283 288 (fontified nil) 288 301 (fontified nil) 301 304 (fontified nil) 304 305 (fontified nil syntax-table #1# face font-lock-string-face) 305 310 (fontified nil face font-lock-string-face) 310 311 (fontified nil face font-lock-string-face) 311 313 (fontified nil face font-lock-string-face) 313 314 (fontified nil syntax-table #1# face font-lock-string-face) 314 315 (fontified nil) 315 321 (fontified nil face font-lock-builtin-face) 321 335 (fontified nil) 335 369 (fontified nil) 369 385 (fontified nil) 385 425 (fontified nil) 425 426 (fontified nil) 426 430 (fontified nil) 430 431 (fontified nil) 431 432 (fontified nil) 432 434 (fontified nil) 434 437 (fontified nil face font-lock-keyword-face) 437 438 (fontified nil) 438 458 (fontified nil face font-lock-function-name-face) 458 459 (fontified nil) 459 463 (fontified nil face font-lock-keyword-face) 463 468 (fontified nil) 468 471 (fontified nil) 471 475 (fontified nil) 475 477 (fontified nil face font-lock-keyword-face) 477 484 (fontified nil) 484 489 (fontified nil) 489 490 (fontified nil face font-lock-comment-delimiter-face) 490 500 (fontified nil face font-lock-comment-face) 500 513 (fontified nil face font-lock-comment-face) 513 514 (fontified nil face font-lock-comment-face) 514 520 (fontified nil) 520 524 (fontified nil face font-lock-keyword-face) 524 525 (fontified nil) 525 540 (fontified nil) 540 541 (fontified nil) 541 545 (fontified nil face font-lock-keyword-face) 545 549 (fontified nil) 549 554 (fontified nil) 554 555 (fontified nil) 555 558 (fontified nil) 558 559 (fontified nil face font-lock-comment-delimiter-face) 559 564 (fontified nil face font-lock-comment-face) 564 565 (fontified nil face font-lock-comment-face) 565 589 (fontified nil) 589 592 (fontified nil) 592 596 (fontified nil face font-lock-keyword-face) 596 597 (fontified nil) 597 603 (fontified nil) 603 604 (fontified nil) 604 608 (fontified nil) 608 609 (fontified nil) 609 610 (fontified nil face font-lock-comment-delimiter-face) 610 614 (fontified nil face font-lock-comment-face) 614 615 (fontified nil face font-lock-comment-face) 615 642 (fontified nil) 642 643 (fontified nil) 643 646 (fontified nil) 646 647 (fontified nil) 647 648 (fontified nil) 648 658 (fontified nil) 658 659 (fontified nil) 659 660 (fontified nil face font-lock-comment-delimiter-face) 660 666 (fontified nil face font-lock-comment-face) 666 667 (fontified nil face font-lock-comment-face) 667 694 (fontified nil) 694 702 (fontified nil) 702 703 (rear-nonsticky t fontified nil) 703 704 (rear-nonsticky t fontified nil) 704 706 (fontified nil) 706 711 (fontified nil) 711 712 (fontified nil face font-lock-comment-delimiter-face) 712 717 (fontified nil face font-lock-comment-face) 717 718 (fontified nil face font-lock-comment-face) 718 722 (fontified nil) 722 723 (fontified nil) 723 725 (fontified nil) 725 728 (fontified nil face font-lock-keyword-face) 728 729 (fontified nil) 729 739 (fontified nil face font-lock-function-name-face) 739 745 (fontified nil face font-lock-function-name-face) 745 746 (fontified nil) 746 750 (fontified nil face font-lock-keyword-face) 750 768 (fontified nil) 768 777 (fontified nil) 777 780 (fontified nil) 780 783 (fontified nil) 783 787 (fontified nil) 787 788 (fontified nil syntax-table #1# face font-lock-string-face) 788 791 (fontified nil face font-lock-string-face) 791 802 (fontified nil face font-lock-string-face) 802 805 (fontified nil face font-lock-string-face) 805 817 (fontified nil face font-lock-string-face) 817 834 (fontified nil face font-lock-string-face) 834 835 (fontified nil face font-lock-string-face) 835 837 (fontified nil face font-lock-string-face) 837 842 (fontified nil face font-lock-string-face) 842 844 (fontified nil face font-lock-string-face) 844 846 (fontified nil face font-lock-string-face) 846 847 (fontified nil face font-lock-string-face) 847 851 (fontified nil face font-lock-string-face) 851 856 (fontified nil face font-lock-string-face) 856 862 (fontified nil face font-lock-string-face) 862 872 (fontified nil face font-lock-string-face) 872 874 (fontified nil face font-lock-string-face) 874 878 (fontified nil face font-lock-string-face) 878 880 (fontified nil face font-lock-string-face) 880 887 (fontified nil face font-lock-string-face) 887 903 (fontified nil face font-lock-string-face) 903 907 (fontified nil face font-lock-string-face) 907 909 (fontified nil face font-lock-string-face) 909 911 (fontified nil face font-lock-string-face) 911 914 (fontified nil face font-lock-string-face) 914 918 (fontified nil face font-lock-string-face) 918 929 (fontified nil face font-lock-string-face) 929 973 (fontified nil face font-lock-string-face) 973 976 (fontified nil face font-lock-string-face) 976 980 (fontified nil face font-lock-string-face) 980 983 (fontified nil face font-lock-string-face) 983 984 (fontified nil face font-lock-string-face) 984 990 (fontified nil face font-lock-string-face) 990 991 (fontified nil syntax-table #1# face font-lock-string-face) 991 992 (fontified nil) 992 996 (fontified nil) 996 997 (fontified nil face font-lock-comment-delimiter-face) 997 1014 (fontified nil face font-lock-comment-face) 1014 1017 (fontified nil face font-lock-comment-face) 1017 1032 (fontified nil face font-lock-comment-face) 1032 1033 (fontified nil face font-lock-comment-face) 1033 1037 (fontified nil face font-lock-comment-face) 1037 1041 (fontified nil) 1041 1045 (fontified nil face font-lock-keyword-face) 1045 1046 (fontified nil) 1046 1049 (fontified nil) 1049 1052 (fontified nil) 1052 1053 (fontified nil) 1053 1056 (fontified nil) 1056 1059 (fontified nil) 1059 1060 (fontified nil) 1060 1061 (fontified nil) 1061 1064 (fontified nil) 1064 1065 (fontified nil) 1065 1066 (fontified nil) 1066 1067 (fontified nil) 1067 1070 (fontified nil face font-lock-keyword-face) 1070 1071 (fontified nil face font-lock-keyword-face) 1071 1074 (fontified nil) 1074 1084 (fontified nil) 1084 1085 (rear-nonsticky t fontified nil) 1085 1086 (fontified nil) 1086 1088 (fontified nil) 1088 1093 (fontified nil) 1093 1094 (fontified nil) 1094 1109 (fontified nil) 1109 1110 (rear-nonsticky t fontified nil) 1110 1111 (fontified nil) 1111 1112 (fontified nil) 1112 1115 (fontified nil) 1115 1116 (fontified nil) 1116 1117 (fontified nil face font-lock-comment-delimiter-face) 1117 1120 (fontified nil face font-lock-comment-face) 1120 1131 (fontified nil face font-lock-comment-face) 1131 1132 (fontified nil face font-lock-comment-face) 1132 1133 (fontified nil) 1133 1136 (fontified nil) 1136 1137 (fontified nil) 1137 1140 (fontified nil) 1140 1154 (fontified nil) 1154 1155 (fontified nil) 1155 1156 (fontified nil) 1156 1158 (fontified nil) 1158 1160 (fontified nil face font-lock-builtin-face) 1160 1163 (fontified nil face font-lock-builtin-face) 1163 1164 (fontified nil) 1164 1165 (fontified nil face font-lock-keyword-face) 1165 1168 (fontified nil face font-lock-keyword-face) 1168 1169 (fontified nil) 1169 1170 (fontified nil) 1170 1172 (fontified nil) 1172 1177 (fontified nil) 1177 1185 (fontified nil) 1185 1186 (rear-nonsticky t fontified nil) 1186 1187 (fontified nil) 1187 1188 (fontified nil) 1188 1192 (fontified nil) 1192 1193 (fontified nil face font-lock-comment-delimiter-face) 1193 1208 (fontified nil face font-lock-comment-face) 1208 1210 (fontified nil face font-lock-comment-face) 1210 1214 (fontified nil face font-lock-comment-face) 1214 1215 (fontified nil face font-lock-comment-face) 1215 1216 (fontified nil face font-lock-comment-face) 1216 1220 (fontified nil) 1220 1222 (fontified nil) 1222 1223 (fontified nil) 1223 1225 (fontified nil) 1225 1228 (fontified nil) 1228 1231 (fontified nil) 1231 1232 (fontified nil syntax-table #1# face font-lock-string-face) 1232 1237 (fontified nil face font-lock-string-face) 1237 1238 (fontified nil syntax-table #1# face font-lock-string-face) 1238 1240 (fontified nil) 1240 1244 (fontified nil face font-lock-keyword-face) 1244 1245 (rear-nonsticky t fontified nil) 1245 1246 (fontified nil) 1246 1247 (fontified nil) 1247 1248 (fontified nil) 1248 1249 (rear-nonsticky t fontified nil) 1249 1250 (fontified nil) 1250 1251 (fontified nil) 1251 1255 (fontified nil) 1255 1260 (fontified nil) 1260 1265 (fontified nil) 1265 1266 (fontified nil) 1266 1270 (fontified nil) 1270 1273 (fontified nil face font-lock-keyword-face) 1273 1283 (fontified nil) 1283 1287 (fontified nil) 1287 1288 (fontified nil) 1288 1290 (fontified nil face font-lock-keyword-face) 1290 1291 (fontified nil) 1291 1294 (fontified nil face font-lock-builtin-face) 1294 1300 (fontified nil face font-lock-builtin-face) 1300 1306 (fontified nil) 1306 1308 (fontified nil) 1308 1309 (fontified nil) 1309 1315 (fontified nil) 1315 1316 (fontified nil) 1316 1322 (fontified nil) 1322 1324 (fontified nil face font-lock-comment-delimiter-face) 1324 1336 (fontified nil face font-lock-comment-face) 1336 1337 (fontified nil syntax-table #1# face font-lock-comment-face) 1337 1346 (fontified nil face font-lock-comment-face) 1346 1356 (fontified nil face font-lock-comment-face) 1356 1363 (fontified nil face font-lock-comment-face) 1363 1372 (fontified nil face font-lock-comment-face) 1372 1378 (fontified nil face font-lock-comment-face) 1378 1380 (fontified nil face font-lock-comment-face) 1380 1386 (fontified nil) 1386 1388 (fontified nil face font-lock-comment-delimiter-face) 1388 1392 (fontified nil face font-lock-comment-face) 1392 1403 (fontified nil face font-lock-comment-face) 1403 1406 (fontified nil face font-lock-comment-face) 1406 1408 (fontified nil face font-lock-comment-face) 1408 1417 (fontified nil face font-lock-comment-face) 1417 1423 (fontified nil face font-lock-comment-face) 1423 1424 (fontified nil face font-lock-comment-face) 1424 1430 (fontified nil face font-lock-comment-face) 1430 1435 (fontified nil face font-lock-comment-face) 1435 1439 (fontified nil face font-lock-comment-face) 1439 1441 (fontified nil face font-lock-comment-face) 1441 1442 (fontified nil face font-lock-comment-face) 1442 1444 (fontified nil) 1444 1448 (fontified nil) 1448 1453 (fontified nil) 1453 1454 (fontified nil) 1454 1458 (fontified nil) 1458 1459 (fontified nil) 1459 1462 (fontified nil face font-lock-builtin-face) 1462 1468 (fontified nil) 1468 1471 (fontified nil face font-lock-keyword-face) 1471 1474 (fontified nil) 1474 1476 (fontified nil face font-lock-keyword-face) 1476 1485 (fontified nil) 1485 1494 (fontified nil) 1494 1507 (fontified nil) 1507 1508 (fontified nil) 1508 1512 (fontified nil) 1512 1513 (fontified nil) 1513 1514 (rear-nonsticky nil fontified nil)) . 1437) (nil fontified t 1437 . 1438) (nil fontified t 1448 . 1465) (nil fontified t 1465 . 1466) (nil fontified t 1515 . 1516) (nil fontified t 1516 . 1517) (nil fontified t 1540 . 1541) (nil fontified t 1541 . 1542) (nil fontified t 1547 . 1605) (nil fontified t 1629 . 1671) (nil fontified t 1671 . 1672) (nil fontified t 1678 . 1699) (nil fontified t 1720 . 1725) (nil fontified t 1758 . 1772) (nil fontified t 1772 . 1806) (nil fontified t 1862 . 1863) (nil fontified t 1867 . 1868) (nil fontified t 1868 . 1869) (nil fontified t 1905 . 1908) (nil fontified t 1950 . 1951) (nil fontified t 2001 . 2002) (nil fontified t 2051 . 2052) (nil fontified t 2103 . 2104) (nil fontified t 2154 . 2155) (nil fontified t 2159 . 2160) (nil fontified t 2217 . 2220) (nil fontified t 2225 . 2228) (nil fontified t 2281 . 2283) (nil fontified t 2283 . 2284) (nil fontified t 2293 . 2299) (nil fontified t 2340 . 2344) (nil fontified t 2420 . 2421) (nil fontified t 2428 . 2429) (nil fontified t 2470 . 2474) (nil fontified t 2547 . 2548) (nil fontified t 2548 . 2549) (nil fontified t 2568 . 2569) (nil fontified t 2623 . 2624) (nil fontified t 2624 . 2625) (nil fontified t 2652 . 2653) (nil fontified t 2686 . 2687) (nil fontified t 2687 . 2688) (nil fontified t 2702 . 2703) (nil fontified t 2745 . 2746) (nil fontified t 2752 . 2753) (nil fontified t 2815 . 2817) (nil fontified t 2878 . 2879) (nil fontified t 2931 . 2944) (nil fontified t 2944 . 2945) (nil rear-nonsticky t 2950 . 2951)) (24319 45617 94059 795000) 0 nil] [nil ([nil nil ((#("
      self.face = faces[0]

  def UpdateRectColor(self, rect, rectId, color):

    (x, y, w, h) = rect

    #plot the rectangle (remember to downsize the coordinates)
    cv2.rectangle(self.img, (x, y), ((x + w), (y + h)), color, 2)

    # show the face number
    cv2.putText(self.img,
                \"Face #{}\".format(rectId + 1),
                (x - 10, y - 10),
                cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)
    

  def faceSelectorCallback(self, val):
    if (val > 0): #0 = nothing is selected
      self.UpdateRectColor(self.img,        #image
                           self.rects[x-1], #rect
                           x-1,             #rectId
                           (0,0,255))       #color
    
  def SelectSingleFace(self, faces, downsampleWidth = 500):
    \"\"\"
    Select a single face out of all the ones available

    Arguments:
    - `faces`: the recognized rects of faces
    - `downsampleWidth`: the width of downsampled image to present if needed
    \"\"\"
    #downsample the image for easier picking
    self.img = imutils.resize(self.m_image.copy(), width=downsampleWidth)

    #resizing ratio
    r = downsampleWidth / float(self.m_image.shape[1])

    #show downsampled image
    cv2.imshow(\"FACES\", self.img)

    rects = []
    for (rectId,rect) in enumerate(faces):
      
      # convert dlib's rectangle to a OpenCV-style bounding box
      # [i.e., (x, y, w, h)], then draw the face bounding box
      rects += [(int(i*r) for i in face_utils.rect_to_bb(rect))]

      " 0 1 (fontified t) 1 7 (fontified t) 7 11 (fontified t face font-lock-keyword-face) 11 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 50 (fontified t face font-lock-function-name-face) 50 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 76 (fontified t) 76 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 84 (fontified t) 84 99 (fontified t) 99 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 109 (fontified t) 109 110 (fontified t face font-lock-comment-delimiter-face) 110 168 (fontified t face font-lock-comment-face) 168 185 (fontified t) 185 186 (fontified t) 186 190 (fontified t face font-lock-keyword-face) 190 191 (fontified t rear-nonsticky t) 191 192 (fontified t) 192 234 (fontified t) 234 235 (fontified t) 235 239 (fontified t) 239 241 (fontified t face font-lock-comment-delimiter-face) 241 262 (fontified t face font-lock-comment-face) 262 278 (fontified t) 278 282 (fontified t face font-lock-keyword-face) 282 283 (fontified t rear-nonsticky t) 283 288 (fontified t) 288 304 (fontified t) 304 305 (syntax-table #1# fontified t face font-lock-string-face) 305 310 (fontified t face font-lock-string-face) 310 311 (fontified t face font-lock-string-face) 311 313 (fontified t face font-lock-string-face) 313 314 (syntax-table #1# fontified t face font-lock-string-face) 314 315 (fontified t) 315 321 (fontified t face font-lock-builtin-face) 321 335 (fontified t) 335 369 (fontified t) 369 385 (fontified t) 385 425 (fontified t) 425 426 (fontified t) 426 430 (fontified t) 430 431 (fontified t) 431 432 (fontified t) 432 434 (fontified t) 434 437 (fontified t face font-lock-keyword-face) 437 438 (fontified t) 438 458 (fontified t face font-lock-function-name-face) 458 459 (fontified t) 459 463 (fontified t face font-lock-keyword-face) 463 468 (fontified t) 468 471 (fontified t) 471 475 (fontified t) 475 477 (fontified t face font-lock-keyword-face) 477 489 (fontified t) 489 490 (fontified t face font-lock-comment-delimiter-face) 490 513 (fontified t face font-lock-comment-face) 513 514 (fontified t face font-lock-comment-face) 514 520 (fontified t) 520 524 (fontified t face font-lock-keyword-face) 524 525 (fontified t) 525 540 (fontified t) 540 541 (fontified t) 541 545 (fontified t face font-lock-keyword-face) 545 549 (fontified t) 549 554 (fontified t) 554 555 (fontified t) 555 558 (fontified t) 558 559 (fontified t face font-lock-comment-delimiter-face) 559 564 (fontified t face font-lock-comment-face) 564 565 (fontified t face font-lock-comment-face) 565 589 (fontified t) 589 592 (fontified t) 592 596 (fontified t face font-lock-keyword-face) 596 597 (fontified t) 597 603 (fontified t) 603 604 (fontified t) 604 608 (fontified t) 608 609 (fontified t) 609 610 (fontified t face font-lock-comment-delimiter-face) 610 614 (fontified t face font-lock-comment-face) 614 615 (fontified t face font-lock-comment-face) 615 642 (fontified t) 642 643 (fontified t) 643 646 (fontified t) 646 647 (fontified t) 647 648 (fontified t) 648 658 (fontified t) 658 659 (fontified t) 659 660 (fontified t face font-lock-comment-delimiter-face) 660 666 (fontified t face font-lock-comment-face) 666 667 (fontified t face font-lock-comment-face) 667 694 (fontified t) 694 702 (fontified t) 702 703 (rear-nonsticky t fontified t) 703 704 (rear-nonsticky t fontified t) 704 706 (fontified t) 706 711 (fontified t) 711 712 (fontified t face font-lock-comment-delimiter-face) 712 717 (fontified t face font-lock-comment-face) 717 718 (fontified t face font-lock-comment-face) 718 722 (fontified t) 722 723 (fontified t) 723 725 (fontified t) 725 728 (fontified t face font-lock-keyword-face) 728 729 (fontified t) 729 739 (fontified t face font-lock-function-name-face) 739 745 (fontified t face font-lock-function-name-face) 745 746 (fontified t) 746 750 (fontified t face font-lock-keyword-face) 750 768 (fontified t) 768 777 (fontified t) 777 780 (fontified t) 780 783 (fontified t) 783 787 (fontified t) 787 788 (syntax-table #1# fontified t face font-lock-doc-face) 788 791 (face font-lock-doc-face fontified t) 791 802 (fontified t face font-lock-doc-face) 802 805 (fontified t face font-lock-doc-face) 805 817 (fontified t face font-lock-doc-face) 817 834 (fontified t face font-lock-doc-face) 834 837 (fontified t face font-lock-doc-face) 837 842 (fontified t face font-lock-doc-face) 842 844 (fontified t face font-lock-doc-face) 844 846 (fontified t face font-lock-doc-face) 846 847 (fontified t face font-lock-doc-face) 847 851 (fontified t face font-lock-doc-face) 851 856 (fontified t face font-lock-doc-face) 856 862 (fontified t face font-lock-doc-face) 862 872 (fontified t face font-lock-doc-face) 872 874 (fontified t face font-lock-doc-face) 874 878 (fontified t face font-lock-doc-face) 878 880 (fontified t face font-lock-doc-face) 880 887 (fontified t face font-lock-doc-face) 887 903 (fontified t face font-lock-doc-face) 903 907 (fontified t face font-lock-doc-face) 907 909 (fontified t face font-lock-doc-face) 909 911 (fontified t face font-lock-doc-face) 911 914 (fontified t face font-lock-doc-face) 914 918 (fontified t face font-lock-doc-face) 918 929 (fontified t face font-lock-doc-face) 929 973 (fontified t face font-lock-doc-face) 973 976 (fontified t face font-lock-doc-face) 976 980 (fontified t face font-lock-doc-face) 980 983 (fontified t face font-lock-doc-face) 983 984 (fontified t face font-lock-doc-face) 984 990 (fontified t face font-lock-doc-face) 990 991 (syntax-table #1# fontified t face font-lock-doc-face) 991 992 (fontified t) 992 996 (fontified t) 996 997 (fontified t face font-lock-comment-delimiter-face) 997 1017 (fontified t face font-lock-comment-face) 1017 1032 (fontified t face font-lock-comment-face) 1032 1033 (fontified t face font-lock-comment-face) 1033 1037 (fontified t face font-lock-comment-face) 1037 1041 (fontified t) 1041 1045 (face font-lock-keyword-face fontified t) 1045 1046 (fontified t) 1046 1049 (fontified t) 1049 1052 (fontified t) 1052 1053 (fontified t) 1053 1056 (fontified t) 1056 1059 (fontified t) 1059 1060 (fontified t) 1060 1061 (fontified t) 1061 1064 (fontified t) 1064 1065 (fontified t) 1065 1066 (fontified t) 1066 1067 (fontified t) 1067 1070 (fontified t face font-lock-keyword-face) 1070 1071 (fontified t face font-lock-keyword-face) 1071 1074 (fontified t) 1074 1084 (fontified t) 1084 1085 (rear-nonsticky t fontified t) 1085 1086 (fontified t) 1086 1088 (fontified t) 1088 1093 (fontified t) 1093 1094 (fontified t) 1094 1109 (fontified t) 1109 1110 (rear-nonsticky t fontified t) 1110 1111 (fontified t) 1111 1112 (fontified t) 1112 1115 (fontified t) 1115 1116 (fontified t) 1116 1117 (fontified t face font-lock-comment-delimiter-face) 1117 1120 (fontified t face font-lock-comment-face) 1120 1131 (fontified t face font-lock-comment-face) 1131 1132 (fontified t face font-lock-comment-face) 1132 1133 (fontified t) 1133 1136 (fontified t) 1136 1137 (fontified t face font-lock-variable-name-face) 1137 1140 (fontified t) 1140 1154 (fontified t) 1154 1155 (fontified t) 1155 1156 (fontified t) 1156 1158 (fontified t) 1158 1160 (fontified t face font-lock-builtin-face) 1160 1163 (fontified t face font-lock-builtin-face) 1163 1164 (fontified t) 1164 1165 (fontified t face font-lock-keyword-face) 1165 1168 (fontified t face font-lock-keyword-face) 1168 1169 (fontified t) 1169 1170 (fontified t) 1170 1172 (fontified t) 1172 1177 (fontified t) 1177 1185 (fontified t) 1185 1186 (rear-nonsticky t fontified t) 1186 1187 (fontified t) 1187 1188 (fontified t) 1188 1192 (fontified t) 1192 1193 (fontified t face font-lock-comment-delimiter-face) 1193 1208 (fontified t face font-lock-comment-face) 1208 1210 (fontified t face font-lock-comment-face) 1210 1214 (fontified t face font-lock-comment-face) 1214 1215 (fontified t face font-lock-comment-face) 1215 1216 (fontified t face font-lock-comment-face) 1216 1220 (fontified t) 1220 1222 (fontified t) 1222 1223 (fontified t) 1223 1225 (fontified t) 1225 1228 (fontified t) 1228 1231 (fontified t) 1231 1232 (syntax-table #1# fontified t face font-lock-string-face) 1232 1237 (fontified t face font-lock-string-face) 1237 1238 (syntax-table #1# fontified t face font-lock-string-face) 1238 1240 (fontified t) 1240 1244 (fontified t face font-lock-keyword-face) 1244 1245 (rear-nonsticky t fontified t) 1245 1246 (fontified t) 1246 1247 (fontified t) 1247 1248 (fontified t) 1248 1249 (rear-nonsticky t fontified t) 1249 1250 (fontified t) 1250 1251 (fontified t) 1251 1255 (fontified t) 1255 1260 (fontified t face font-lock-variable-name-face) 1260 1265 (fontified t) 1265 1266 (fontified t) 1266 1270 (fontified t) 1270 1273 (fontified t face font-lock-keyword-face) 1273 1283 (fontified t) 1283 1287 (fontified t) 1287 1288 (fontified t) 1288 1290 (fontified t face font-lock-keyword-face) 1290 1291 (fontified t) 1291 1294 (fontified t face font-lock-builtin-face) 1294 1300 (fontified t face font-lock-builtin-face) 1300 1306 (fontified t) 1306 1308 (fontified t) 1308 1309 (fontified t) 1309 1315 (fontified t) 1315 1316 (fontified t) 1316 1322 (fontified t) 1322 1324 (fontified t face font-lock-comment-delimiter-face) 1324 1336 (fontified t face font-lock-comment-face) 1336 1337 (syntax-table #1# fontified t face font-lock-comment-face) 1337 1356 (fontified t face font-lock-comment-face) 1356 1363 (fontified t face font-lock-comment-face) 1363 1372 (fontified t face font-lock-comment-face) 1372 1378 (fontified t face font-lock-comment-face) 1378 1380 (fontified t face font-lock-comment-face) 1380 1386 (fontified t) 1386 1388 (fontified t face font-lock-comment-delimiter-face) 1388 1392 (fontified t face font-lock-comment-face) 1392 1403 (fontified t face font-lock-comment-face) 1403 1406 (fontified t face font-lock-comment-face) 1406 1408 (fontified t face font-lock-comment-face) 1408 1417 (fontified t face font-lock-comment-face) 1417 1423 (fontified t face font-lock-comment-face) 1423 1424 (fontified t face font-lock-comment-face) 1424 1430 (fontified t face font-lock-comment-face) 1430 1435 (fontified t face font-lock-comment-face) 1435 1439 (fontified t face font-lock-comment-face) 1439 1441 (fontified t face font-lock-comment-face) 1441 1442 (fontified t face font-lock-comment-face) 1442 1444 (fontified t) 1444 1448 (fontified t) 1448 1453 (fontified t face font-lock-variable-name-face) 1453 1454 (fontified t) 1454 1458 (fontified t) 1458 1459 (fontified t) 1459 1462 (fontified t face font-lock-builtin-face) 1462 1468 (fontified t) 1468 1471 (fontified t face font-lock-keyword-face) 1471 1474 (fontified t) 1474 1476 (fontified t face font-lock-keyword-face) 1476 1485 (fontified t) 1485 1494 (fontified t) 1494 1507 (fontified t) 1507 1508 (fontified t) 1508 1512 (fontified t) 1512 1514 (fontified t)) . -1159) (undo-tree-id5714 . -1514) (undo-tree-id5715 . -84) (undo-tree-id5716 . -29) (undo-tree-id5717 . -29) (undo-tree-id5718 . -29) (undo-tree-id5719 . -29) (undo-tree-id5720 . -29) (undo-tree-id5721 . -29) (undo-tree-id5722 . -29) (undo-tree-id5723 . -29) (undo-tree-id5724 . -29) (undo-tree-id5725 . -1514) (undo-tree-id5726 . -1514) (undo-tree-id5727 . -1514) (undo-tree-id5728 . -1514) (undo-tree-id5729 . -1514) (undo-tree-id5730 . -1514) (undo-tree-id5731 . -1514) (undo-tree-id5732 . -1514) (undo-tree-id5733 . -1514) (undo-tree-id5734 . -1514) (undo-tree-id5735 . -1514) (undo-tree-id5736 . -1514) (undo-tree-id5737 . -1251) (undo-tree-id5738 . -1251) (undo-tree-id5739 . -1251) (undo-tree-id5740 . -84) (undo-tree-id5741 . -84) (undo-tree-id5742 . -84) (undo-tree-id5743 . -84) (undo-tree-id5744 . -1251) (undo-tree-id5745 . -791) (undo-tree-id5746 . -791) (undo-tree-id5747 . -791) (undo-tree-id5748 . -791) (undo-tree-id5749 . -791) (undo-tree-id5750 . -791) (undo-tree-id5751 . -84) (undo-tree-id5752 . -84) (undo-tree-id5753 . -84) (undo-tree-id5754 . -84) (undo-tree-id5755 . -84) (undo-tree-id5756 . -1465) (undo-tree-id5757 . -103) (undo-tree-id5758 . -103) (undo-tree-id5759 . -103) (undo-tree-id5760 . -103) (undo-tree-id5761 . -168) (undo-tree-id5762 . -1507) (undo-tree-id5763 . -1507) (undo-tree-id5764 . -438) (undo-tree-id5765 . -438) (undo-tree-id5766 . -438) (undo-tree-id5767 . -438) (undo-tree-id5768 . -646) (undo-tree-id5769 . -646) (undo-tree-id5770 . -84) (undo-tree-id5771 . -520) (undo-tree-id5772 . -79) (undo-tree-id5773 . -546) (undo-tree-id5774 . -559) (undo-tree-id5775 . -525) (undo-tree-id5776 . -1046) (undo-tree-id5777 . -1046) (undo-tree-id5778 . -1240) (undo-tree-id5779 . -1245) (undo-tree-id5780 . -103) (undo-tree-id5781 . -186) (undo-tree-id5782 . -191) (undo-tree-id5783 . -1049) (undo-tree-id5784 . -1049) (undo-tree-id5785 . -278) (undo-tree-id5786 . -1049) (undo-tree-id5787 . -1049) (undo-tree-id5788 . -1049) (undo-tree-id5789 . -1049) (undo-tree-id5790 . -1037) (undo-tree-id5791 . -1049) (undo-tree-id5792 . -1037) (undo-tree-id5793 . -1037) (undo-tree-id5794 . -1037) (undo-tree-id5795 . -1037) (undo-tree-id5796 . -1037) (undo-tree-id5797 . -1037) (undo-tree-id5798 . -1037) (undo-tree-id5799 . -1037) (undo-tree-id5800 . -1037) (undo-tree-id5801 . -1037) (undo-tree-id5802 . -1037) (undo-tree-id5803 . -1037) (undo-tree-id5804 . -1037) (undo-tree-id5805 . -1514) (undo-tree-id5806 . -1514) (undo-tree-id5807 . -1037) (undo-tree-id5808 . -1514) (undo-tree-id5809 . -283) (undo-tree-id5810 . -1514) (undo-tree-id5811 . -1514) (t 24319 45565 801096 685000)) ((1159 . 2673)) (24319 45588 451274 120000) 0 nil]) ((nil rear-nonsticky nil 1441 . 1442) (nil fontified nil 1441 . 1442) (nil fontified nil 1437 . 1441) (1437 . 1442)) ((#("self." 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil rear-nonsticky nil)) . 1437) (undo-tree-id5812 . -5) (nil rear-nonsticky t 1441 . 1442) (t 24319 45565 801096 685000)) (24319 45588 456630 279000) 0 nil]) ((nil rear-nonsticky nil 1349 . 1350) (1345 . 1350)) ((#("self." 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil rear-nonsticky nil)) . 1345) (undo-tree-id5928 . -5) (nil rear-nonsticky t 1349 . 1350)) (24319 45623 25722 191000) 0 nil] [nil nil ((#("i" 0 1 (fontified nil)) . 1346) (1345 . 1346) (#("(" 0 1 (fontified nil)) . 1344) (1345 . 1346)) ((#("i" 0 1 (fontified nil)) . 1345) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (1344 . 1345) (#("(" 0 1 (fontified nil)) . 1345) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (1346 . 1347)) (24319 45559 18907 748000) 0 nil]) ((#(" " 0 1 (fontified nil)) . 1216) (#("," 0 1 (fontified nil)) . 1216) (#("g" 0 1 (fontified nil)) . 1216) (#("m" 0 1 (fontified nil)) . 1216) (#("i" 0 1 (fontified t)) . 1216)) ((1216 . 1217) (1216 . 1217) (1216 . 1217) (1216 . 1217) (1216 . 1217)) (24319 45614 159098 869000) 0 nil]) ((nil rear-nonsticky nil 2863 . 2864) (nil fontified nil 2863 . 2864) (nil fontified nil 2859 . 2863) (2859 . 2864)) nil (24319 45613 705023 618000) 2 nil]) ((nil rear-nonsticky nil 2693 . 2694) (nil fontified nil 2693 . 2694) (nil fontified nil 2689 . 2693) (2689 . 2694)) nil (24319 45559 19079 925000) 0 nil]) ((nil rear-nonsticky nil 2398 . 2399) (nil fontified nil 2398 . 2399) (nil fontified nil 2394 . 2398) (2394 . 2399)) nil (24319 45559 19125 403000) 0 nil]) ((2195 . 2200) (t 24319 45499 430974 622000)) nil (24319 45559 19159 876000) 0 nil]) ((1713 . 1718)) nil (24319 45499 333496 5000) 0 nil]) ((#("window name" 0 11 (fontified t face font-lock-comment-face)) . -1713) (undo-tree-id5697 . -11) (undo-tree-id5698 . -11) (undo-tree-id5699 . -11)) nil (24319 45499 333579 224000) 0 nil]) ((1704 . 1708)) nil (24319 45499 333610 217000) 0 nil]) ((1700 . 1703)) nil (24319 45499 333628 917000) 0 nil]) ((#("winName" 0 7 (fontified t)) . -1700) (undo-tree-id5700 . -7) (undo-tree-id5701 . -7) 1703 (t 24319 45478 148576 811000)) nil (24319 45499 333672 514000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#(" " 0 1 (fontified t)) . 1812) (undo-tree-id5407 . -1) (#(" " 0 1 (fontified t)) . 1812) (undo-tree-id5410 . -1)) ((1812 . 1813) (1812 . 1813) (t 24319 45307 342409 864000)) (24319 45307 242896 105000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1809) (undo-tree-id5413 . -1) (undo-tree-id5415 . -1) (undo-tree-id5417 . -1)) ((1809 . 1810)) (24319 45456 958751 346000) 0 nil]) ((1806 . 1809)) ((#("val" 0 3 (fontified t)) . 1806) (undo-tree-id5418 . -3) (undo-tree-id5419 . -3) (undo-tree-id5420 . -3)) (24319 45457 166775 65000) 0 nil]) ((1877 . 1879)) ((#("  " 0 2 (fontified t)) . 1877)) (24319 45457 358100 753000) 0 nil]) ((1822 . 1824)) ((#("  " 0 2 (fontified t)) . 1822)) (24319 45457 858030 967000) 0 nil]) ((1709 . 1711)) ((#("  " 0 2 (fontified t)) . 1709)) (24319 45457 890417 495000) 0 nil]) ((1763 . 1766)) ((#("val" 0 3 (fontified t)) . 1763)) (24319 45457 923464 210000) 0 nil] [nil nil ((1763 . 1766)) ((#("val" 0 3 (fontified t)) . 1763) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -2) (undo-tree-id5397 . -1) (undo-tree-id5398 . -2) (undo-tree-id5399 . -3) (undo-tree-id5400 . -2) (undo-tree-id5401 . -3) (undo-tree-id5402 . -2) (undo-tree-id5403 . -3) (undo-tree-id5404 . -2) (undo-tree-id5405 . -2)) (24319 45296 682242 470000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1763) (t 24319 45270 589449 804000)) ((1763 . 1764)) (24319 45457 956395 690000) 0 nil]) ((3572 . 3573)) (("." . 3572) (undo-tree-id5421 . -1)) (24319 45457 989487 12000) 0 nil]) ((#("/" 0 1 (fontified t)) . -3572) (undo-tree-id5390 . -1) (undo-tree-id5392 . -1) 3573) ((3572 . 3573)) (24319 45458 22473 979000) 0 nil]) ((3568 . 3573)) ((#("self/" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 3568) (undo-tree-id5422 . -5) (undo-tree-id5423 . -4) (undo-tree-id5424 . -4) (undo-tree-id5425 . -4) (undo-tree-id5426 . -4) (undo-tree-id5427 . -4) (undo-tree-id5428 . -5) (undo-tree-id5429 . -5) (undo-tree-id5430 . -5)) (24319 45458 76779 149000) 0 nil]) ((2777 . 2782)) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 2777) (undo-tree-id5431 . -5) (undo-tree-id5432 . -5)) (24319 45458 88138 22000) 0 nil]) ((2653 . 2658)) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 2653)) (24319 45458 121904 103000) 0 nil]) ((2458 . 2460)) ((#("f." 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t)) . 2458)) (24319 45470 652130 46000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-variable-name-face)) . 2458)) ((2458 . 2459)) (24319 45471 29781 268000) 0 nil]) ((2455 . 2459)) ((#("sel." 0 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face)) . 2455) (undo-tree-id5585 . -3) (undo-tree-id5586 . -3) (undo-tree-id5587 . -3) (undo-tree-id5588 . -3) (undo-tree-id5589 . -3) (undo-tree-id5590 . -3) (undo-tree-id5591 . -3) (undo-tree-id5592 . -3) (undo-tree-id5593 . -3) (undo-tree-id5594 . -3) (undo-tree-id5595 . -3) (undo-tree-id5596 . -3)) (24319 45471 530086 295000) 0 nil]) ((nil rear-nonsticky nil 3524 . 3525) (3513 . 3525)) ((#("self.winName" 0 4 (fontified nil face font-lock-keyword-face) 4 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 3513) (nil rear-nonsticky t 3524 . 3525)) (24319 45471 564231 626000) 0 nil]) ((#("'FACES'" 0 1 (fontified t face font-lock-string-face syntax-table #1#) 1 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face syntax-table #1#)) . 3513)) ((3513 . 3520)) (24319 45471 598039 292000) 0 nil]) ((#(" " 0 1 (fontified nil)) . 3139) (#(" " 0 1 (fontified nil)) . 3139) (#(" " 0 1 (fontified nil)) . 3139) (#(" " 0 1 (fontified nil)) . 3139) (#(" " 0 1 (fontified t)) . 3139)) ((3139 . 3140) (3139 . 3140) (3139 . 3140) (3139 . 3140) (3139 . 3140)) (24319 45471 630980 240000) 0 nil]) ((nil rear-nonsticky nil 3137 . 3138) (3126 . 3138)) ((#("self.winName" 0 4 (fontified nil face font-lock-keyword-face) 4 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 3126) (nil rear-nonsticky t 3137 . 3138)) (24319 45471 663921 162000) 0 nil]) ((#("'FACES'" 0 1 (syntax-table #1# fontified t face font-lock-string-face) 1 6 (fontified t face font-lock-string-face) 6 7 (syntax-table #1# fontified t face font-lock-string-face)) . 3126)) ((3126 . 3133)) (24319 45471 697011 680000) 0 nil]) ((nil rear-nonsticky nil 2442 . 2443) (2431 . 2443)) ((#("self.winName" 0 4 (fontified nil face font-lock-keyword-face) 4 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 2431) (undo-tree-id5597 . -12) (nil rear-nonsticky t 2442 . 2443)) (24319 45471 730639 23000) 0 nil]) ((#("\"FACES\"" 0 1 (face font-lock-string-face fontified t syntax-table #1#) 1 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t syntax-table #1#)) . 2431)) ((2431 . 2438)) (24319 45471 765083 406000) 0 nil]) ((2405 . 2415)) ((#(" Detected\"" 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t syntax-table #1# face font-lock-string-face)) . 2405) (undo-tree-id5598 . -10) (undo-tree-id5599 . -10)) (24319 45471 835386 365000) 0 nil]) ((2396 . 2405)) ((#("ple Faces" 0 9 (fontified t face font-lock-string-face)) . 2396) (undo-tree-id5600 . -9) (undo-tree-id5601 . -9) (undo-tree-id5602 . -9) (undo-tree-id5603 . -9) (undo-tree-id5604 . -9)) (24319 45471 835598 901000) 0 nil]) ((2375 . 2396)) ((#("self.winName = \"Multi" 0 4 (fontified t face font-lock-keyword-face) 4 15 (fontified t) 15 16 (fontified t syntax-table #1# face font-lock-string-face) 16 21 (fontified t face font-lock-string-face)) . 2375) (undo-tree-id5605 . -21) (undo-tree-id5606 . -21) (undo-tree-id5607 . -15) (undo-tree-id5608 . -15) (undo-tree-id5609 . -15) (undo-tree-id5610 . -15) (undo-tree-id5611 . -15) (undo-tree-id5612 . -15) (undo-tree-id5613 . -15) (undo-tree-id5614 . -15) (undo-tree-id5615 . -21) (undo-tree-id5616 . -21) (undo-tree-id5617 . -21) (undo-tree-id5618 . -21) (undo-tree-id5619 . -21) (undo-tree-id5620 . -15) (undo-tree-id5621 . -15) (undo-tree-id5622 . -15) (undo-tree-id5623 . -15) (undo-tree-id5624 . -15) (undo-tree-id5625 . -21)) (24319 45473 269889 426000) 0 nil]) ((2370 . 2375)) ((#("
    " 0 1 (fontified t face font-lock-comment-face) 1 5 (fontified t)) . 2370) (undo-tree-id5626 . -5) (undo-tree-id5627 . -5) (undo-tree-id5628 . -5) (undo-tree-id5629 . -5) (undo-tree-id5630 . -5) (undo-tree-id5631 . -5) (undo-tree-id5632 . -5) (undo-tree-id5633 . -5) (undo-tree-id5634 . -5) (undo-tree-id5635 . -5) (undo-tree-id5636 . -5) (undo-tree-id5637 . -5) (undo-tree-id5638 . -5) (undo-tree-id5639 . -5) (undo-tree-id5640 . -5) (undo-tree-id5641 . -5) (undo-tree-id5642 . -5) (undo-tree-id5643 . -5) (undo-tree-id5644 . -5) (undo-tree-id5645 . -5) (undo-tree-id5646 . -5) (undo-tree-id5647 . -5) (undo-tree-id5648 . -5) (undo-tree-id5649 . -5) (undo-tree-id5650 . -5) (undo-tree-id5651 . -5) (undo-tree-id5652 . -5) (undo-tree-id5653 . -5) (undo-tree-id5654 . -5) (undo-tree-id5655 . -5) (undo-tree-id5656 . -5) (undo-tree-id5657 . -5) (undo-tree-id5658 . -5) (undo-tree-id5659 . -5) (undo-tree-id5660 . -5) (undo-tree-id5661 . -5) (undo-tree-id5662 . -5) (undo-tree-id5663 . -5) (undo-tree-id5664 . -5) (undo-tree-id5665 . -5) (undo-tree-id5666 . -5) (undo-tree-id5667 . -5) (undo-tree-id5668 . -5) (undo-tree-id5669 . -5) (undo-tree-id5670 . -5) (undo-tree-id5671 . -5) (undo-tree-id5672 . -5) (undo-tree-id5673 . -5) (undo-tree-id5674 . -5) (undo-tree-id5675 . -5) (undo-tree-id5676 . -5) (undo-tree-id5677 . -5) (undo-tree-id5678 . -5) (undo-tree-id5679 . -5) (undo-tree-id5680 . -5) (undo-tree-id5681 . -5) (undo-tree-id5682 . -5) (undo-tree-id5683 . -5) (undo-tree-id5684 . -5) (undo-tree-id5685 . -5) (undo-tree-id5686 . -5) (undo-tree-id5687 . -5) (undo-tree-id5688 . -5) (undo-tree-id5689 . -5) (undo-tree-id5690 . -5) (undo-tree-id5691 . -5) (undo-tree-id5692 . -5)) (24319 45474 661864 611000) 0 nil]) ((1708 . 1724)) ((#("    #window name" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 16 (fontified t face font-lock-comment-face)) . 1708) (undo-tree-id5695 . -16) (undo-tree-id5696 . -16) (t 24319 45478 148576 811000)) (24319 45481 188965 117000) 0 nil]) ((1752 . 1758)) ((#(" #rect" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 6 (fontified t face font-lock-comment-face)) . 1752) (undo-tree-id5519 . -6)) (24319 45480 740899 266000) 0 nil]) ((1798 . 1804)) ((#("rectId" 0 6 (fontified t face font-lock-comment-face)) . 1798) (undo-tree-id5521 . -6)) (24319 45470 117449 375000) 0 nil]) ((1784 . 1798)) ((#("             #" 0 1 (fontified t) 1 2 (fontified t) 2 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face font-lock-comment-delimiter-face)) . 1784) (undo-tree-id5522 . -14) (undo-tree-id5524 . -14) (undo-tree-id5526 . -14)) (24319 45470 83543 966000) 0 nil]) ((1824 . 1835)) ((#("     #color" 0 5 (fontified t) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 11 (fontified t face font-lock-comment-face)) . 1824) (undo-tree-id5528 . -11)) (24319 45470 49512 923000) 0 nil]) ((1785 . 1812) (#(" " 0 1 (fontified nil)) . 1785) (1784 . 1785)) ((#("
" 0 1 (fontified t)) . 1784) (1785 . 1786) (#("                           " 0 27 (fontified t)) . 1785)) (24319 45470 15640 506000) 0 nil]) ((1752 . 1780)) ((#("
                           " 0 1 (fontified t) 1 28 (fontified t)) . 1752)) (24319 45469 983169 474000) 0 nil]) ((1708 . 1736)) ((#("
                           " 0 1 (fontified t) 1 28 (fontified t)) . 1708)) (24319 45469 949199 735000) 0 nil]) ((1708 . 1713)) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 1708)) (24319 45469 915177 964000) 0 nil]) ((3404 . 3406)) ((#("ne" 0 2 (fontified t face font-lock-constant-face)) . 3404) (undo-tree-id5530 . -2) (undo-tree-id5532 . -2) (undo-tree-id5534 . -2) (undo-tree-id5536 . -2) (undo-tree-id5538 . -2)) (24319 45469 881292 992000) 0 nil]) ((3388 . 3404)) ((#("Face > 0 else No" 0 9 (fontified t) 9 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 16 (fontified t)) . 3388) (undo-tree-id5540 . -16) (undo-tree-id5542 . -16) (undo-tree-id5544 . -16) (undo-tree-id5546 . -16) (undo-tree-id5548 . -16) (undo-tree-id5550 . -16) (undo-tree-id5552 . -16)) (24319 45469 847381 261000) 0 nil]) ((#("D" 0 1 (fontified t)) . 3388) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1)) ((3388 . 3389)) (24319 45469 812594 254000) 0 nil]) ((3376 . 3389)) ((#(" if selectedD" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 12 (fontified t) 12 13 (fontified t)) . 3376) (undo-tree-id5554 . -13) (undo-tree-id5556 . -12) (undo-tree-id5558 . -12) (undo-tree-id5560 . -12) (undo-tree-id5562 . -12) (undo-tree-id5564 . -12) (undo-tree-id5566 . -12) (undo-tree-id5568 . -12) (undo-tree-id5570 . -12) (undo-tree-id5572 . -13) (undo-tree-id5574 . -13) (undo-tree-id5575 . -13)) (24319 45469 778552 80000) 0 nil]) ((3363 . 3375)) ((#("selectedFace" 0 12 (fontified t)) . 3363)) (24319 45469 746055 842000) 0 nil]) ((#(";" 0 1 (fontified t)) . 3332) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1)) ((3332 . 3333)) (24319 45469 245920 79000) 0 nil]) ((3333 . 3342)) nil (24319 45468 557847 925000) 0 nil]) ((3332 . 3333)) nil (24319 45119 672247 17000) 0 nil]) ((nil rear-nonsticky nil 3331 . 3332) (nil fontified nil 3330 . 3332) (nil fontified nil 3329 . 3330) (nil fontified nil 3328 . 3329) (nil fontified nil 3323 . 3328) (nil fontified nil 3322 . 3323) (nil fontified nil 3321 . 3322) (nil fontified nil 3320 . 3321) (nil fontified nil 3317 . 3320) (nil fontified nil 3307 . 3317) (nil fontified nil 3306 . 3307) (nil fontified nil 3301 . 3306) (nil fontified nil 3296 . 3301) (nil fontified nil 3287 . 3296) (3287 . 3332)) nil (24319 45119 672342 453000) 0 nil]) ((#("cv2.getTrackbarPos('Select a face','FACES')-1" 0 9 (fontified t) 9 14 (fontified t) 14 19 (fontified t) 19 20 (syntax-table #1# fontified t face font-lock-string-face) 20 30 (fontified t face font-lock-string-face) 30 33 (fontified t face font-lock-string-face) 33 34 (syntax-table #1# fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (syntax-table #1# fontified t face font-lock-string-face) 36 41 (fontified t face font-lock-string-face) 41 42 (syntax-table #1# fontified t face font-lock-string-face) 42 43 (rear-nonsticky t fontified t) 43 45 (fontified t)) . 3309) (undo-tree-id5361 . -45) (undo-tree-id5362 . -45) 3354) nil (24319 45119 672422 776000) 0 nil]) ((3272 . 3287)) nil (24319 45119 672452 920000) 0 nil]) ((#("if " 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t)) . 3272) (undo-tree-id5363 . -3) (undo-tree-id5364 . -3) 3275) nil (24319 45119 672507 102000) 0 nil]) ((3272 . 3275) (t 24319 45082 885760 989000)) nil (24319 45119 672542 452000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3227) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1)) nil (24319 45082 785126 379000) 0 nil]) ((#("        break;" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t)) . -3227) (undo-tree-id5342 . -14) (undo-tree-id5343 . -14) (undo-tree-id5344 . -14) (undo-tree-id5345 . -14) (undo-tree-id5346 . -14) (undo-tree-id5347 . -14) (undo-tree-id5348 . -14) (undo-tree-id5349 . -14) (undo-tree-id5350 . -14) (undo-tree-id5351 . -14) (undo-tree-id5352 . -14) (undo-tree-id5353 . -8) (undo-tree-id5354 . -8) (undo-tree-id5355 . -8) (undo-tree-id5356 . -14) (undo-tree-id5357 . -14) (undo-tree-id5358 . -14) 3241) nil (24319 45082 785326 710000) 0 nil]) ((3278 . 3287) (t 24319 45057 64491 622000)) nil (24319 45082 785382 209000) 0 nil]) ((1660 . 1667)) nil (24319 45056 961785 888000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -1660) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) 1661) nil (24319 45056 961895 260000) 0 nil]) ((1646 . 1661)) nil (24319 45056 961933 933000) 0 nil]) ((#("is " 0 3 (fontified t face font-lock-comment-face)) . -1646) (undo-tree-id5294 . -3) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -2) (undo-tree-id5298 . -1) (undo-tree-id5299 . -2) (undo-tree-id5300 . -3) (undo-tree-id5301 . -2) (undo-tree-id5302 . -3) (undo-tree-id5303 . -3) (undo-tree-id5304 . -3) (undo-tree-id5305 . -3) (undo-tree-id5306 . -3) (undo-tree-id5307 . -3) (undo-tree-id5308 . -3) (undo-tree-id5309 . -3) (undo-tree-id5310 . -3) (undo-tree-id5311 . -3) (undo-tree-id5312 . -3) (undo-tree-id5313 . -3) (undo-tree-id5314 . -3) (undo-tree-id5315 . -3) (undo-tree-id5316 . -3) (undo-tree-id5317 . -3) (undo-tree-id5318 . -3) (undo-tree-id5319 . -3) 1649) nil (24319 45056 962193 614000) 0 nil]) ((#("noth" 0 4 (fontified t face font-lock-comment-face)) . -1649) (undo-tree-id5320 . -4) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -2) (undo-tree-id5324 . -1) (undo-tree-id5325 . -2) (undo-tree-id5326 . -3) (undo-tree-id5327 . -2) (undo-tree-id5328 . -3) (undo-tree-id5329 . -4) (undo-tree-id5330 . -4) (undo-tree-id5331 . -4) (undo-tree-id5332 . -3) (undo-tree-id5333 . -4) 1653) nil (24319 45056 962382 237000) 0 nil]) ((1642 . 1653) (t 24319 45044 234854 643000)) nil (24319 45056 962429 286000) 0 nil]) ((1647 . 1649) 1660) nil (24319 45044 166307 192000) 0 nil]) ((1629 . 1642)) nil (24319 45044 166320 316000) 0 nil]) ((1624 . 1629) (t 24319 45035 672096 935000)) nil (24319 45044 166327 599000) 0 nil]) ((#("g" 0 1 (fontified t)) . 1662) (#("m" 0 1 (fontified t)) . 1662) (#("i" 0 1 (fontified t)) . 1662)) nil (24319 45035 602396 884000) 0 nil]) ((1655 . 1662)) nil (24319 45035 602442 375000) 0 nil]) ((1650 . 1655) (t 24319 45003 638003 364000)) nil (24319 45035 602470 777000) 0 nil]) ((#("callbk = lambda x: " 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 15 (fontified t face font-lock-keyword-face) 15 19 (fontified t)) . -1629) (undo-tree-id5253 . -19) (undo-tree-id5254 . -19) (undo-tree-id5255 . -6) (undo-tree-id5256 . -6) (undo-tree-id5257 . -15) (undo-tree-id5258 . -6) (undo-tree-id5259 . -15) (undo-tree-id5260 . -17) (undo-tree-id5261 . -15) (undo-tree-id5262 . -17) (undo-tree-id5263 . -17) (undo-tree-id5264 . -19) (undo-tree-id5265 . -19) 1648) nil (24319 45003 539455 82000) 0 nil]) ((nil rear-nonsticky nil 1698 . 1699) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1672 . 1697) (nil fontified nil 1668 . 1672) (nil fontified nil 1653 . 1668) (nil fontified nil 1652 . 1653) (nil fontified nil 1648 . 1652) (nil fontified nil 1644 . 1648) (nil fontified nil 1638 . 1644) (nil fontified nil 1635 . 1638) (nil fontified nil 1629 . 1635) (1629 . 1699)) nil (24319 45003 539557 536000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1629)) nil (24319 45003 539598 703000) 0 nil]) ((#("\"\"\"
  \"\"\"" 0 1 (fontified t syntax-table #1# face font-lock-doc-face) 1 4 (fontified t face font-lock-doc-face) 4 6 (fontified t face font-lock-doc-face) 6 8 (fontified t face font-lock-doc-face) 8 9 (syntax-table #1# fontified t face font-lock-doc-face)) . -1629) (undo-tree-id5266 . -9) (undo-tree-id5267 . -9) (undo-tree-id5268 . -9) (undo-tree-id5269 . -9) (undo-tree-id5270 . -3) (undo-tree-id5271 . -3) (undo-tree-id5272 . -3) (undo-tree-id5273 . -9) (undo-tree-id5274 . -9) (undo-tree-id5275 . -9) (undo-tree-id5276 . -8) (undo-tree-id5277 . -8) (undo-tree-id5278 . -9) (undo-tree-id5279 . -8) (undo-tree-id5280 . -9) 1638) nil (24319 45003 539769 40000) 0 nil]) ((1627 . 1629) 1625) nil (24319 45003 539814 70000) 0 nil]) ((1613 . 1622)) nil (24319 45003 539831 720000) 0 nil]) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 1592) (undo-tree-id5281 . -5) (undo-tree-id5282 . -5) (undo-tree-id5283 . -5) (undo-tree-id5284 . -5) (undo-tree-id5285 . -5) (undo-tree-id5286 . -5) (undo-tree-id5287 . -5) (undo-tree-id5288 . -5)) nil (24319 45003 539921 8000) 0 nil]) ((1592 . 1617)) nil (24319 45003 539950 273000) 0 nil] [nil nil ((nil rear-nonsticky nil 1661 . 1662) (nil fontified nil 1661 . 1662) (nil fontified nil 1660 . 1661) (nil fontified nil 1635 . 1660) (nil fontified nil 1631 . 1635) (nil fontified nil 1616 . 1631) (nil fontified nil 1615 . 1616) (nil fontified nil 1611 . 1615) (nil fontified nil 1607 . 1611) (nil fontified nil 1601 . 1607) (nil fontified nil 1598 . 1601) (nil fontified nil 1592 . 1598) (1592 . 1662)) ((#("callbk = lambda x: self.UpdateRectColor(img,rects[x-1],x-1, (0,0,255))" 0 6 (fontified nil face font-lock-function-name-face) 6 9 (fontified nil) 9 15 (fontified nil face font-lock-keyword-face) 15 19 (fontified nil) 19 23 (fontified nil face font-lock-keyword-face) 23 24 (fontified nil) 24 39 (fontified nil) 39 43 (fontified nil) 43 68 (fontified nil) 68 69 (rear-nonsticky t fontified nil) 69 70 (fontified nil rear-nonsticky nil)) . 1592) (undo-tree-id5245 . -70) (undo-tree-id5246 . -70) (undo-tree-id5247 . 1) (undo-tree-id5248 . -70) (undo-tree-id5249 . 31) (undo-tree-id5250 . -40) (undo-tree-id5251 . -9) (undo-tree-id5252 . -70) (nil rear-nonsticky t 1661 . 1662)) (24319 44981 178660 901000) 0 nil]) ((#("name" 0 4 (fontified t face font-lock-function-name-face)) . 1592) (undo-tree-id5194 . -4) (undo-tree-id5195 . -4) (undo-tree-id5196 . -4) (undo-tree-id5197 . -4) (undo-tree-id5198 . -4) (undo-tree-id5199 . -4) (undo-tree-id5200 . -4) (undo-tree-id5201 . -4) (undo-tree-id5202 . -4) 1596) nil (24319 44981 179069 157000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1588) (undo-tree-id5203 . -2) (undo-tree-id5204 . -2) (undo-tree-id5205 . -2) (undo-tree-id5206 . -2) (undo-tree-id5207 . -2) (undo-tree-id5208 . -2) (undo-tree-id5209 . -2) (undo-tree-id5210 . -2) (undo-tree-id5211 . -2) (undo-tree-id5212 . -2) (undo-tree-id5213 . -2) (undo-tree-id5214 . -2) (undo-tree-id5215 . -2) (undo-tree-id5216 . -2) (undo-tree-id5217 . -2) (undo-tree-id5218 . -2) (undo-tree-id5219 . -2) (undo-tree-id5220 . -2) (undo-tree-id5221 . -2) (undo-tree-id5222 . -2) (undo-tree-id5223 . -2) (undo-tree-id5224 . -2) (undo-tree-id5225 . -2) 1590) nil (24319 44981 178773 173000) 0 nil]) ((#("def" 0 3 (fontified t face font-lock-keyword-face)) . 1590) (undo-tree-id5226 . -3) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -2) (undo-tree-id5230 . -1) (undo-tree-id5231 . -2) (undo-tree-id5232 . -3) (undo-tree-id5233 . -3) (undo-tree-id5234 . -3) (undo-tree-id5235 . -2) (undo-tree-id5236 . -3) 1593) nil (24319 44981 178810 620000) 0 nil]) ((1590 . 1593)) nil (24319 44981 178819 250000) 0 nil]) ((1586 . 1590)) nil (24319 44981 178823 373000) 0 nil]) ((1586 . 1591) (#("    " 0 4 (fontified t)) . 1586) (undo-tree-id5237 . -4) (undo-tree-id5238 . -4) (undo-tree-id5239 . -4) (undo-tree-id5240 . -4) (undo-tree-id5241 . -4) (undo-tree-id5242 . -4) (undo-tree-id5243 . -4) (undo-tree-id5244 . -4) 1590) nil (24319 44981 178850 795000) 0 nil]) ((1585 . 1590) (t 24319 44968 209005 843000)) nil (24319 44981 178859 421000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2658)) nil (24319 44968 139297 806000) 0 nil]) ((#("   " 0 1 (fontified t) 1 3 (fontified t)) . -2658) (undo-tree-id5132 . -3) (undo-tree-id5133 . -3) (undo-tree-id5134 . -3) (undo-tree-id5135 . -3) (undo-tree-id5136 . -3) (undo-tree-id5137 . -3) (undo-tree-id5138 . -3) (undo-tree-id5139 . -3) (undo-tree-id5140 . -3) (undo-tree-id5141 . -3) (undo-tree-id5142 . -3) 2661) nil (24319 44968 139349 391000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2658) (#("
" 0 1 (fontified t)) . 2658)) nil (24319 44968 139363 551000) 0 nil]) ((#("      " 0 6 (fontified t)) . -2658) (undo-tree-id5143 . -4) (undo-tree-id5144 . -6) (undo-tree-id5145 . -6) (undo-tree-id5146 . -6) (undo-tree-id5147 . -6) (undo-tree-id5148 . -6) (undo-tree-id5149 . -6) (undo-tree-id5150 . -6) (undo-tree-id5151 . -6) (undo-tree-id5152 . -6) (undo-tree-id5153 . -6) (undo-tree-id5154 . -6) (undo-tree-id5155 . -4) (undo-tree-id5156 . -6) (undo-tree-id5157 . -6) (undo-tree-id5158 . -6) (undo-tree-id5159 . -6) (undo-tree-id5160 . -6) (undo-tree-id5161 . -6) (undo-tree-id5162 . -6) (undo-tree-id5163 . -6) (undo-tree-id5164 . -6) (undo-tree-id5165 . -6) (undo-tree-id5166 . -6) (undo-tree-id5167 . -6) (undo-tree-id5168 . -6) (undo-tree-id5169 . -6) (undo-tree-id5170 . -6) (undo-tree-id5171 . -6) (undo-tree-id5172 . -6) (undo-tree-id5173 . -6) (undo-tree-id5174 . -6) (undo-tree-id5175 . -6) 2664) nil (24319 44968 139461 884000) 0 nil]) ((#("callbk = lambda x: self.UpdateRectColor(img,rects[x-1],x-1, (0,0,255))" 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 15 (fontified t face font-lock-keyword-face) 15 19 (fontified t) 19 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t) 24 39 (fontified t) 39 43 (fontified t) 43 68 (fontified t) 68 69 (rear-nonsticky t fontified t) 69 70 (fontified t)) . 2664) (undo-tree-id5176 . -40) (undo-tree-id5177 . -19) (undo-tree-id5178 . -19) (undo-tree-id5179 . -19) (undo-tree-id5180 . -70) (undo-tree-id5181 . -46) (undo-tree-id5182 . -46) (undo-tree-id5183 . -46) (undo-tree-id5184 . -2) (undo-tree-id5185 . -2) (undo-tree-id5186 . -2) (undo-tree-id5187 . -70) (undo-tree-id5188 . -70) (undo-tree-id5189 . -70) (undo-tree-id5190 . -70) (undo-tree-id5191 . -70) (undo-tree-id5192 . -70) (undo-tree-id5193 . -70) 2734) nil (24319 44968 139529 737000) 0 nil]) ((2662 . 2664) 2658) nil (24319 44968 139544 61000) 0 nil]) ((2651 . 2657) (t 24319 44958 872270 29000)) nil (24319 44968 139550 344000) 0 nil]) ((#("        " 0 8 (fontified t)) . -2996) (undo-tree-id5128 . -8) (undo-tree-id5129 . -8) (undo-tree-id5130 . -8) (undo-tree-id5131 . -8) 3004) nil (24319 44958 772598 344000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2996)) nil (24319 44958 772644 188000) 0 nil]) ((2928 . 2938) (2870 . 2880) (2813 . 2823) (t 24319 44949 286541 260000) 2908) nil (24319 44958 772685 126000) 0 nil]) ((nil rear-nonsticky nil 2963 . 2964) (nil fontified nil 2943 . 2964) (nil fontified nil 2939 . 2943) (2939 . 2964)) nil (24319 44949 196058 923000) 0 nil]) ((#("callbk" 0 6 (fontified t)) . -2939) (undo-tree-id5109 . -6) (undo-tree-id5110 . -6) (undo-tree-id5111 . -6) (undo-tree-id5112 . -6)) nil (24319 44949 196104 188000) 0 nil]) ((#("self.faceSelectorCallback" 0 4 (fontified t face font-lock-keyword-face) 4 25 (fontified t)) . -2675) (undo-tree-id5113 . -25) (undo-tree-id5114 . -25) (undo-tree-id5115 . -25) (undo-tree-id5116 . -22) (undo-tree-id5117 . -23) (undo-tree-id5118 . -22) (undo-tree-id5119 . -23) (undo-tree-id5120 . -24) (undo-tree-id5121 . -23) (undo-tree-id5122 . -24) (undo-tree-id5123 . -25) (undo-tree-id5124 . -24) (undo-tree-id5125 . -25) 2700) nil (24319 44949 196171 924000) 0 nil]) ((#("(" 0 1 (fontified t)) . -2700) (undo-tree-id5126 . -1) (#("x" 0 1 (fontified t)) . -2701) (undo-tree-id5127 . -1) 2702) nil (24319 44949 196200 500000) 0 nil]) ((2692 . 2702)) nil (24319 44949 196211 22000) 0 nil]) ((2675 . 2692) (t 24319 44578 203043 683000)) nil (24319 44949 196219 673000) 0 nil] [nil nil ((2556 . 2575) (t 24319 44578 203043 683000)) ((#("
                  " 0 19 (fontified t)) . 2556) (undo-tree-id5105 . -19) (undo-tree-id5106 . 19) (undo-tree-id5107 . -19) (undo-tree-id5108 . -19)) (24319 44580 998251 847000) 0 nil]) ((2553 . 2556)) nil (24319 44580 999257 693000) 0 nil]) ((#("faceSelector" 0 11 (fontified t) 11 12 (rear-nonsticky t fontified t)) . -2553) (undo-tree-id5101 . -12) (undo-tree-id5102 . -12) (undo-tree-id5103 . -12) (undo-tree-id5104 . -12) (t 24319 44564 392439 767000)) nil (24319 44578 103326 475000) 0 nil]) ((1520 . 1521)) nil (24319 44564 295496 737000) 0 nil]) ((1505 . 1506)) nil (24319 44564 295544 696000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1332) (undo-tree-id5093 . 1) (undo-tree-id5094 . 1)) nil (24319 44564 295606 464000) 0 nil]) ((#("    print (x,y,w,h)" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 19 (fontified t)) . -1332) (undo-tree-id5095 . -19) (undo-tree-id5096 . -19) (undo-tree-id5097 . 1) (undo-tree-id5098 . -19) (undo-tree-id5099 . 9) (undo-tree-id5100 . -11) 1351 (t 24319 44532 393357 498000)) nil (24319 44564 295690 293000) 0 nil]) ((1400 . 1401)) nil (24319 44532 328296 785000) 0 nil]) ((1383 . 1384) (t 24319 44476 614957 203000)) nil (24319 44532 328345 679000) 0 nil] [nil ([nil nil ((1376 . 1384)) ((#("dfdfdfdf" 0 8 (fontified t)) . 1376) (undo-tree-id5024 . -8) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -2) (undo-tree-id5028 . -1) (undo-tree-id5029 . -2) (undo-tree-id5030 . -3) (undo-tree-id5031 . -2) (undo-tree-id5032 . -3) (undo-tree-id5033 . -4) (undo-tree-id5034 . -3) (undo-tree-id5035 . -4) (undo-tree-id5036 . -5) (undo-tree-id5037 . -4) (undo-tree-id5038 . -5) (undo-tree-id5039 . -6) (undo-tree-id5040 . -5) (undo-tree-id5041 . -6) (undo-tree-id5042 . -7) (undo-tree-id5043 . -6) (undo-tree-id5044 . -7) (undo-tree-id5045 . -8) (undo-tree-id5046 . -7) (undo-tree-id5047 . -8)) (24319 44498 128598 397000) 0 nil]) ((1371 . 1376) (t 24319 44476 614957 203000)) ((#("cv.re" 0 5 (fontified t)) . 1371) (undo-tree-id5048 . -5) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -2) (undo-tree-id5052 . -1) (undo-tree-id5053 . -2) (undo-tree-id5054 . -3) (undo-tree-id5055 . -2) (undo-tree-id5056 . -3) (undo-tree-id5057 . -4) (undo-tree-id5058 . -3) (undo-tree-id5059 . -4) (undo-tree-id5060 . -5) (undo-tree-id5061 . -4) (undo-tree-id5062 . -5) (undo-tree-id5063 . -5) (undo-tree-id5064 . -5) (undo-tree-id5065 . -5) (undo-tree-id5066 . -5) (undo-tree-id5067 . -5) (undo-tree-id5068 . -5) (undo-tree-id5069 . -5) (undo-tree-id5070 . -5) (undo-tree-id5071 . -5) (undo-tree-id5072 . -5) (undo-tree-id5073 . -5) (undo-tree-id5074 . -5) (undo-tree-id5075 . -5) (undo-tree-id5076 . -5) (undo-tree-id5077 . -5) (undo-tree-id5078 . -5) (undo-tree-id5079 . -5) (undo-tree-id5080 . -5) (undo-tree-id5081 . -5) (undo-tree-id5082 . -5) (undo-tree-id5083 . -5) (undo-tree-id5084 . -5) (undo-tree-id5085 . -5) (undo-tree-id5086 . -5) (undo-tree-id5087 . -5) (undo-tree-id5088 . -5) (undo-tree-id5089 . -5) (undo-tree-id5090 . -5) (undo-tree-id5091 . -5) (undo-tree-id5092 . -5)) (24319 44498 129286 488000) 0 nil]) ((1336 . 1351)) nil (24319 44498 609860 455000) 0 nil]) ((1331 . 1336) (t 24319 44436 267114 365000)) nil (24319 44476 513962 268000) 0 nil]) ((#(")" 0 1 (rear-nonsticky t fontified t)) . -1267) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . 1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) 1268) nil (24319 44436 186867 25000) 0 nil]) ((#("face_utils.rect_to_bb(" 0 22 (fontified t)) . -1263) (undo-tree-id5011 . -22) (undo-tree-id5012 . -5) (undo-tree-id5013 . -5) (undo-tree-id5014 . -5) (undo-tree-id5015 . -22) (undo-tree-id5016 . -10) (undo-tree-id5017 . -10) (undo-tree-id5018 . -21) (undo-tree-id5019 . -10) (undo-tree-id5020 . -21) (undo-tree-id5021 . -22) (undo-tree-id5022 . -21) (undo-tree-id5023 . -22) 1285 (t 24319 44403 343058 619000)) nil (24319 44436 186935 944000) 0 nil]) ((2445 . 2448)) nil (24319 44403 243985 370000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2445) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (#("n" 0 1 (fontified t)) . -2446) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (#("d" 0 1 (fontified t)) . -2447) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) 2448) nil (24319 44403 244304 434000) 0 nil]) ((2445 . 2448)) nil (24319 44403 244378 332000) 0 nil]) ((#(":" 0 1 (fontified t)) . -2445) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) 2446) nil (24319 44403 244432 13000) 0 nil]) ((2443 . 2446) (t 24319 44366 25128 887000)) nil (24319 44403 244460 357000) 0 nil]) ((#("    " 0 4 (fontified t)) . -1419) (undo-tree-id4935 . -4)) nil (24319 44365 925169 782000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1419)) nil (24319 44365 925208 595000) 0 nil]) ((#("print (x, y)" 0 5 (fontified t face font-lock-keyword-face) 5 12 (fontified t)) . 1419) (undo-tree-id4936 . -12) (undo-tree-id4937 . -11) (undo-tree-id4938 . -12) (undo-tree-id4939 . -12) (undo-tree-id4940 . -12) (undo-tree-id4941 . -12) (undo-tree-id4942 . -12) (undo-tree-id4943 . -12) (undo-tree-id4944 . -12) (undo-tree-id4945 . -12) (undo-tree-id4946 . -12) (undo-tree-id4947 . -12) (undo-tree-id4948 . -12) (undo-tree-id4949 . -12) (undo-tree-id4950 . -12) (undo-tree-id4951 . -12) (undo-tree-id4952 . -12) (undo-tree-id4953 . -12) (undo-tree-id4954 . -12) (undo-tree-id4955 . 1) (undo-tree-id4956 . -12) (undo-tree-id4957 . 6) (undo-tree-id4958 . -7) (undo-tree-id4959 . -12) (undo-tree-id4960 . -12) 1431 (t 24319 44159 697046 325000)) nil (24319 44365 925462 671000) 0 nil]) ((1419 . 1431)) nil (24319 44159 627368 783000) 0 nil]) ((1417 . 1419) (1414 . 1415) (#("    " 0 4 (fontified t)) . 1414) (undo-tree-id4927 . -4) (undo-tree-id4928 . -4) (undo-tree-id4929 . -4) 1418) nil (24319 44159 627465 989000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1244)) nil (24319 44159 627502 49000) 0 nil]) ((#("    print (type(rect))
    print (rect)
    " 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 15 (fontified t face font-lock-builtin-face) 15 23 (fontified t) 23 27 (fontified t) 27 32 (fontified t face font-lock-keyword-face) 32 39 (fontified t) 39 40 (fontified t) 40 44 (fontified t)) . -1244) (undo-tree-id4930 . -22) (undo-tree-id4931 . -22) (undo-tree-id4932 . -22) (undo-tree-id4933 . -44) (undo-tree-id4934 . -44) 1288 (t 24319 36390 93442 884000)) nil (24319 44159 627574 111000) 0 nil]) ((1265 . 1266)) nil (24319 36389 998964 613000) 0 nil]) ((1254 . 1255) (t 24319 36384 852596 40000)) nil (24319 36389 999008 908000) 0 nil]) ((1275 . 1281)) nil (24319 36384 783095 653000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1275) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (#("e" 0 1 (fontified t)) . -1276) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) 1277) nil (24319 36384 783301 829000) 0 nil]) ((1269 . 1277)) nil (24319 36384 783356 22000) 0 nil]) ((1264 . 1269)) nil (24319 36384 783374 735000) 0 nil]) ((1257 . 1264)) nil (24319 36384 783391 363000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1257) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (#("(" 0 1 (fontified t)) . -1258) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) 1259) nil (24319 36384 783554 110000) 0 nil]) ((1248 . 1259)) nil (24319 36384 783598 918000) 0 nil]) ((1243 . 1248)) nil (24319 36384 783615 527000) 0 nil]) ((1243 . 1248) (#("    " 0 4 (fontified t)) . 1243) (undo-tree-id4922 . -4) (undo-tree-id4923 . -4) (undo-tree-id4924 . -4) (undo-tree-id4925 . -4) (undo-tree-id4926 . -4) 1247 (t 24319 36341 253870 147000)) nil (24319 36384 783685 812000) 0 nil]) ((#("B" 0 1 (fontified t)) . 1225) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (#("B" 0 1 (fontified t)) . 1225) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1)) nil (24319 36341 183956 5000) 0 nil]) ((#("rectBB" 0 4 (fontified t) 4 6 (fontified t)) . -1296) (undo-tree-id4884 . -6) (undo-tree-id4885 . -6) (undo-tree-id4886 . -6) (undo-tree-id4887 . -6) (undo-tree-id4888 . -6) (undo-tree-id4889 . -6) 1302) nil (24319 36341 183989 699000) 0 nil]) ((nil rear-nonsticky nil 1295 . 1296) (nil fontified nil 1269 . 1296) (1269 . 1296) (t 24319 36256 962326 228000)) nil (24319 36341 184002 905000) 0 nil]) ((1210 . 1216) (t 24319 36232 360041 328000)) nil (24319 36256 866947 668000) 0 nil]) ((2719 . 2724) (t 24319 36178 147617 77000)) nil (24319 36232 259543 407000) 0 nil]) ((1223 . 1231) (t 24319 36167 768918 748000)) nil (24319 36178 45070 300000) 0 nil]) ((1435 . 1438)) nil (24319 36167 701325 589000) 0 nil]) ((#("faceSelector" 0 12 (fontified t)) . -1435) (undo-tree-id4852 . -12) (undo-tree-id4853 . -5) (undo-tree-id4854 . -5) (undo-tree-id4855 . -4) (undo-tree-id4856 . -5) (undo-tree-id4857 . -4) (undo-tree-id4858 . -4) (undo-tree-id4859 . -12) (undo-tree-id4860 . -4) (undo-tree-id4861 . -4) (undo-tree-id4862 . -12) (undo-tree-id4863 . -4) (undo-tree-id4864 . -12) 1439) nil (24319 36167 701503 689000) 0 nil]) ((1344 . 1347)) nil (24319 36167 701551 241000) 0 nil]) ((#("faceSelector" 0 12 (fontified t)) . -1344) (undo-tree-id4865 . -12) (undo-tree-id4866 . -7) (undo-tree-id4867 . -7) (undo-tree-id4868 . -4) (undo-tree-id4869 . -7) (undo-tree-id4870 . -4) (undo-tree-id4871 . -4) (undo-tree-id4872 . -12) (undo-tree-id4873 . -4) (undo-tree-id4874 . -4) (undo-tree-id4875 . -12) (undo-tree-id4876 . -4) (undo-tree-id4877 . -12) 1348 (t 24319 36147 258514 906000)) nil (24319 36167 701690 355000) 0 nil]) ((#("i" 0 1 (fontified t)) . 1498)) nil (24319 36147 181299 734000) 0 nil]) nil nil (24319 36147 181316 879000) 0 nil] #8# 80006 1184 nil)